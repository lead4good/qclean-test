<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuantConnect.Common</name>
    </assembly>
    <members>
        <member name="T:QuantConnect.Api.AuthenticationResponse">
             <summary>
             Verify if the credentials are OK.
             </summary>
            </member>
        <member name="T:QuantConnect.Api.Backtest">
             <summary>
             Backtest response packet from the QuantConnect.com API.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.Name">
             <summary>
             Name of the backtest
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.Note">
             <summary>
             Note on the backtest attached by the user
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.BacktestId">
             <summary>
             Assigned backtest Id
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.Completed">
             <summary>
             Boolean true when the backtest is completed.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.Progress">
             <summary>
             Progress of the backtest in percent 0-1.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Backtest.Result">
             <summary>
             Result packet for the backtest
             </summary>
            </member>
        <member name="T:QuantConnect.Api.BacktestList">
             <summary>
             Collection container for a list of backtests for a project
             </summary>
            </member>
        <member name="F:QuantConnect.Api.BacktestList.Backtests">
             <summary>
             Collection of summarized backtest objects
             </summary>
            </member>
        <member name="T:QuantConnect.Api.Compile">
             <summary>
             Response from the compiler on a build event
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Compile.CompileId">
             <summary>
             Compile Id for a sucessful build
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Compile.State">
             <summary>
             True on successful compile
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Compile.Logs">
             <summary>
             Logs of the compilation request
             </summary>
            </member>
        <member name="T:QuantConnect.Api.CompileState">
             <summary>
             State of the compilation request
             </summary>
            </member>
        <member name="F:QuantConnect.Api.CompileState.InQueue">
             <summary>
             Compile waiting in the queue to be processed.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.CompileState.BuildSuccess">
             <summary>
             Compile was built successfully
             </summary>
            </member>
        <member name="F:QuantConnect.Api.CompileState.BuildError">
             <summary>
             Build error, check logs for more information
             </summary>
            </member>
        <member name="T:QuantConnect.Api.Link">
             <summary>
             Response from reading purchased data
             </summary>
            </member>
        <member name="P:QuantConnect.Api.Link.DataLink">
             <summary>
             Link to the data
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveAlgorithm">
             <summary>
             Live algorithm instance result from the QuantConnect Rest API.
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.ProjectId">
             <summary>
             Project id for the live instance
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.DeployId">
             <summary>
             Unique live algorithm deployment identifier (similar to a backtest id).
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Status">
             <summary>
             Algorithm status: running, stopped or runtime error.
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Launched">
             <summary>
             Datetime the algorithm was launched in UTC.
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Stopped">
             <summary>
             Datetime the algorithm was stopped in UTC, null if its still running.
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Brokerage">
             <summary>
             Brokerage
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Subscription">
             <summary>
             Chart we're subscribed to
             </summary>
             <remarks>
             Data limitations mean we can only stream one chart at a time to the consumer. See which chart you're watching here.
             </remarks>
            </member>
        <member name="F:QuantConnect.API.LiveAlgorithm.Error">
             <summary>
             Live algorithm error message from a crash or algorithm runtime error.
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveList">
             <summary>
             List of the live algorithms running which match the requested status
             </summary>
            </member>
        <member name="F:QuantConnect.API.LiveList.Algorithms">
             <summary>
             Algorithm list matching the requested status.
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveAlgorithmResults">
             <summary>
             Details a live algorithm from the "live/read" Api endpoint
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmResults.LiveResults">
             <summary>
             Represents data about the live running algorithm returned from the server
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveResultsData">
             <summary>
             Holds information about the state and operation of the live running algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveResultsData.Version">
             <summary>
             Results version
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveResultsData.Resolution">
             <summary>
             Temporal resolution of the results returned from the Api
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveResultsData.Results">
             <summary>
             Class to represent the data groups results return from the Api
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveAlgorithmResultsJsonConverter">
             <summary>
             Custom JsonConverter for LiveResults data for live algorithms
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmResultsJsonConverter.CanWrite">
             <summary>
             Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
             </summary>
             <value>
             <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
             </value>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.CreateLiveResultsFromJObject(Newtonsoft.Json.Linq.JObject)">
             <summary>
             Custom parsing of live results data
             </summary>
             <param name="jObject">Json representing LiveResults</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.GetChartSeries(Newtonsoft.Json.Linq.JToken)">
             <summary>
             Get series data for a specific chart 
             </summary>
             <param name="series">Series data and properties for a chart</param>
             <returns>Dictionary with the name of the series as the key and the Series itself as the value</returns>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmResultsJsonConverter.GetSeriesValues(Newtonsoft.Json.Linq.JToken)">
             <summary>
             Get x and y value pairs that represent series data
             </summary>
             <param name="values">json array of x, y value pairs</param>
             <returns>List of ChartPoints</returns>
            </member>
        <member name="T:QuantConnect.API.LiveAlgorithmApiSettingsWrapper">
             <summary>
             Helper class to put BaseLiveAlgorithmSettings in proper format.
             </summary>
            </member>
        <member name="M:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.#ctor(System.Int32,System.String,System.String,QuantConnect.API.BaseLiveAlgorithmSettings,System.String)">
             <summary>
             Constructor for LiveAlgorithmApiSettingsWrapper
             </summary>
             <param name="projectId">Id of project from QuantConnect</param>
             <param name="compileId">Id of compilation of project from QuantConnect</param>
             <param name="serverType">Server type to run live Algorithm</param>
             <param name="settings"><see cref="!:BaseLiveAlgorithmSettings ">Live Algorithm Settings</see> for a specific brokerage</param>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.VersionId">
             <summary>
             -1 is master 
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.ProjectId">
             <summary>
             Project id for the live instance
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.CompileId">
             <summary>
             Compile Id for the live algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.ServerType">
             <summary>
             Type of server being used to run live algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveAlgorithmApiSettingsWrapper.Brokerage">
             <summary>
             The API expects the settings as part of a brokerage object
             </summary>
            </member>
        <member name="T:QuantConnect.API.BaseLiveAlgorithmSettings">
             <summary>
             Base class for settings that must be configured per Brokerage to create new algorithms via the API.
             </summary>
            </member>
        <member name="M:QuantConnect.API.BaseLiveAlgorithmSettings.#ctor(System.String,System.String,QuantConnect.BrokerageEnvironment,System.String)">
             <summary>
             Constructor used by FXCM
             </summary>
             <param name="user">Username associated with brokerage</param>
             <param name="password">Password associated with brokerage</param>
             <param name="environment">'live'/'paper'</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="M:QuantConnect.API.BaseLiveAlgorithmSettings.#ctor(System.String,System.String)">
             <summary>
             Constructor used by Interactive Brokers
             </summary>
             <param name="user">Username associated with brokerage</param>
             <param name="password">Password associated with brokerage</param>
            </member>
        <member name="M:QuantConnect.API.BaseLiveAlgorithmSettings.#ctor(QuantConnect.BrokerageEnvironment,System.String)">
             <summary>
             The constructor used by Oanda
             </summary>
             <param name="environment">'live'/'paper'</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="M:QuantConnect.API.BaseLiveAlgorithmSettings.#ctor(System.String)">
             <summary>
             The constructor used by Tradier
             </summary>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="P:QuantConnect.API.BaseLiveAlgorithmSettings.Id">
             <summary>
             'Interactive' / 'FXCM' / 'Oanda' / 'Tradier' /'PaperTrading'
             </summary>
            </member>
        <member name="P:QuantConnect.API.BaseLiveAlgorithmSettings.User">
             <summary>
             Username associated with brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.API.BaseLiveAlgorithmSettings.Password">
             <summary>
             Password associated with brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.API.BaseLiveAlgorithmSettings.Environment">
             <summary>
             'live'/'paper'
             </summary>
            </member>
        <member name="P:QuantConnect.API.BaseLiveAlgorithmSettings.Account">
             <summary>
             Account of the associated brokerage
             </summary>
            </member>
        <member name="T:QuantConnect.API.DefaultLiveAlgorithmSettings">
             <summary>
             Default live algorithm settings
             </summary>
            </member>
        <member name="M:QuantConnect.API.DefaultLiveAlgorithmSettings.#ctor(System.String,System.String,QuantConnect.BrokerageEnvironment,System.String)">
             <summary>
             Constructor for default algorithms
             </summary>
             <param name="user">Username associated with brokerage</param>
             <param name="password">Password associated with brokerage</param>
             <param name="environment">'live'/'paper'</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="T:QuantConnect.API.FXCMLiveAlgorithmSettings">
             <summary>
             Algorithm setting for trading with FXCM
             </summary>
            </member>
        <member name="M:QuantConnect.API.FXCMLiveAlgorithmSettings.#ctor(System.String,System.String,QuantConnect.BrokerageEnvironment,System.String)">
             <summary>
             Contructor for live trading with FXCM
             </summary>
             <param name="user">Username associated with brokerage</param>
             <param name="password">Password associated with brokerage</param>
             <param name="environment">'live'/'paper'</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="T:QuantConnect.API.InteractiveBrokersLiveAlgorithmSettings">
             <summary>
             Live algorithm settings for trading with Interactive Brokers
             </summary>
            </member>
        <member name="M:QuantConnect.API.InteractiveBrokersLiveAlgorithmSettings.#ctor(System.String,System.String,System.String)">
             <summary>
             Contructor for live trading with IB.
             </summary>
             <param name="user">Username associated with brokerage</param>
             <param name="password">Password of assciate brokerage</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="T:QuantConnect.API.OandaLiveAlgorithmSettings">
             <summary>
             Live algorithm settings for trading with Oanda
             </summary>
            </member>
        <member name="M:QuantConnect.API.OandaLiveAlgorithmSettings.#ctor(System.String,QuantConnect.BrokerageEnvironment,System.String)">
             <summary>
             Contructor for live trading with Oanda.
             </summary>
             <param name="accessToken">Access Token (specific for Oanda Brokerage)</param>
             <param name="environment">'live'/'paper'</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="P:QuantConnect.API.OandaLiveAlgorithmSettings.AccessToken">
             <summary>
             Access token for Oanda
             </summary>
            </member>
        <member name="P:QuantConnect.API.OandaLiveAlgorithmSettings.DateIssued">
             <summary>
             Date token was issued
             </summary>
            </member>
        <member name="T:QuantConnect.API.TradierLiveAlgorithmSettings">
             <summary>
             Live algorithm settings for trading with Tradier
             </summary>
            </member>
        <member name="M:QuantConnect.API.TradierLiveAlgorithmSettings.#ctor(System.String,System.String,System.String,System.String)">
             <summary>
             Contructor for live trading with Tradier.
             </summary>
             <param name="accessToken"></param>
             <param name="dateIssued">Specific for live trading with Tradier.  See Tradier account for more details.</param>
             <param name="refreshToken">Specific for live trading with Tradier.  See Tradier account for more details.</param>
             <param name="account">Account id for brokerage</param>
            </member>
        <member name="P:QuantConnect.API.TradierLiveAlgorithmSettings.AccessToken">
             <summary>
             Access token for tradier brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.API.TradierLiveAlgorithmSettings.DateIssued">
             <summary>
             Property specific to Tradier account.  See tradier account for more details.
             </summary>
            </member>
        <member name="P:QuantConnect.API.TradierLiveAlgorithmSettings.RefreshToken">
             <summary>
             Property specific to Tradier account.  See tradier account for more details.
             </summary>
            </member>
        <member name="P:QuantConnect.API.TradierLiveAlgorithmSettings.Lifetime">
             <summary>
             Property specific to Tradier account.  See tradier account for more details.
             </summary>
            </member>
        <member name="T:QuantConnect.API.LiveLog">
             <summary>
             Logs from a live algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.API.LiveLog.Logs">
             <summary>
             List of logs from the live algorithm
             </summary>
            </member>
        <member name="T:QuantConnect.Api.Project">
             <summary>
             Response from reading a project by id.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Project.ProjectId">
             <summary>
             Project id
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Project.Name">
             <summary>
             Name of the project
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Project.Created">
             <summary>
             Date the project was created
             </summary>
            </member>
        <member name="F:QuantConnect.Api.Project.Modified">
             <summary>
             Modified date for the project
             </summary>
            </member>
        <member name="T:QuantConnect.Api.ProjectResponse">
             <summary>
             Project list response
             </summary>
            </member>
        <member name="F:QuantConnect.Api.ProjectResponse.Projects">
             <summary>
             List of projects for the authenticated user
             </summary>
            </member>
        <member name="T:QuantConnect.Api.ProjectFile">
             <summary>
             File for a project
             </summary>
            </member>
        <member name="F:QuantConnect.Api.ProjectFile.Name">
             <summary>
             Name of a project file
             </summary>
            </member>
        <member name="F:QuantConnect.Api.ProjectFile.Code">
             <summary>
             Contents of the project file
             </summary>
            </member>
        <member name="P:QuantConnect.Api.ProjectFile.DateModified">
             <summary>
             DateTime project file was modified
             </summary>
            </member>
        <member name="T:QuantConnect.Api.ProjectFilesResponse">
             <summary>
             Response received when reading all files of a project
             </summary>
            </member>
        <member name="F:QuantConnect.Api.ProjectFilesResponse.Files">
             <summary>
             List of project file information
             </summary>
            </member>
        <member name="T:QuantConnect.Api.RestResponse">
             <summary>
             Base API response class for the QuantConnect API.
             </summary>
            </member>
        <member name="M:QuantConnect.Api.RestResponse.#ctor">
             <summary>
             JSON Constructor
             </summary>
            </member>
        <member name="F:QuantConnect.Api.RestResponse.Success">
             <summary>
             Indicate if the API request was successful.
             </summary>
            </member>
        <member name="F:QuantConnect.Api.RestResponse.Errors">
             <summary>
             List of errors with the API call.
             </summary>
            </member>
        <member name="T:QuantConnect.Benchmarks.FuncBenchmark">
             <summary>
             Creates a benchmark defined by a function
             </summary>
            </member>
        <member name="M:QuantConnect.Benchmarks.FuncBenchmark.#ctor(System.Func{System.DateTime,System.Decimal})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Benchmarks.FuncBenchmark" /> class
             </summary>
             <param name="benchmark">The functional benchmark implementation</param>
            </member>
        <member name="M:QuantConnect.Benchmarks.FuncBenchmark.Evaluate(System.DateTime)">
             <summary>
             Evaluates this benchmark at the specified time
             </summary>
             <param name="time">The time to evaluate the benchmark at</param>
             <returns>The value of the benchmark at the specified time</returns>
            </member>
        <member name="T:QuantConnect.Benchmarks.IBenchmark">
             <summary>
             Specifies how to compute a benchmark for an algorithm
             </summary>
            </member>
        <member name="M:QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)">
             <summary>
             Evaluates this benchmark at the specified time
             </summary>
             <param name="time">The time to evaluate the benchmark at</param>
             <returns>The value of the benchmark at the specified time</returns>
            </member>
        <member name="T:QuantConnect.Benchmarks.SecurityBenchmark">
             <summary>
             Creates a benchmark defined by the closing price of a <see cref="T:QuantConnect.Securities.Security" /> instance
             </summary>
            </member>
        <member name="M:QuantConnect.Benchmarks.SecurityBenchmark.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Benchmarks.SecurityBenchmark" /> class
             </summary>
             <param name="security">The security to use as the benchmark</param>
            </member>
        <member name="M:QuantConnect.Benchmarks.SecurityBenchmark.Evaluate(System.DateTime)">
             <summary>
             Evaluates this benchmark at the specified time
             </summary>
             <param name="time">The time to evaluate the benchmark at</param>
             <returns>The value of the benchmark at the specified time</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.BrokerageName">
             <summary>
             Specifices what transaction model and submit/execution rules to use
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageName.Default">
             <summary>
             Transaction and submit/execution rules will be the default as initialized
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageName.InteractiveBrokersBrokerage">
             <summary>
             Transaction and submit/execution rules will use interactive brokers models
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageName.TradierBrokerage">
             <summary>
             Transaction and submit/execution rules will use tradier models
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageName.OandaBrokerage">
             <summary>
             Transaction and submit/execution rules will use oanda models
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageName.FxcmBrokerage">
             <summary>
             Transaction and submit/execution rules will use fxcm models
             </summary>
            </member>
        <member name="T:QuantConnect.Brokerages.DefaultBrokerageMessageHandler">
             <summary>
             Provides a default implementation o <see cref="T:QuantConnect.Brokerages.IBrokerageMessageHandler" /> that will forward
             messages as follows:
             Information -&gt; IResultHandler.Debug
             Warning     -&gt; IResultHandler.Error &amp;&amp; IApi.SendUserEmail
             Error       -&gt; IResultHandler.Error &amp;&amp; IAlgorithm.RunTimeError
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageMessageHandler.#ctor(QuantConnect.Interfaces.IAlgorithm,QuantConnect.Packets.AlgorithmNodePacket,QuantConnect.Interfaces.IApi,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.DefaultBrokerageMessageHandler" /> class
             </summary>
             <param name="algorithm">The running algorithm</param>
             <param name="job">The job that produced the algorithm</param>
             <param name="api">The api for the algorithm</param>
             <param name="initialDelay"></param>
             <param name="openThreshold">Defines how long before market open to re-check for brokerage reconnect message</param>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)">
             <summary>
             Handles the message
             </summary>
             <param name="message">The message to be handled</param>
            </member>
        <member name="T:QuantConnect.Brokerages.DefaultBrokerageModel">
             <summary>
             Provides a default implementation of <see cref="T:QuantConnect.Brokerages.IBrokerageModel" /> that allows all orders and uses
             the default transaction models
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.DefaultBrokerageModel.DefaultMarketMap">
             <summary>
             The default markets for the backtesting brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.DefaultBrokerageModel.AccountType">
             <summary>
             Gets or sets the account type used by this model
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.DefaultBrokerageModel.DefaultMarkets">
             <summary>
             Gets a map of the default markets to be used for each security type
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.#ctor(QuantConnect.AccountType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.DefaultBrokerageModel" /> class
             </summary>
             <param name="accountType">The type of account to be modelled, defaults to 
             <see cref="F:QuantConnect.AccountType.Margin" /></param>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security">The security being ordered</param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.UpdateOrderRequest,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage would allow updating the order as specified by the request
             </summary>
             <param name="security">The security of the order</param>
             <param name="order">The order to be updated</param>
             <param name="request">The requested update to be made to the order</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be updated</param>
             <returns>True if the brokerage would allow updating the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns true if the brokerage would be able to execute this order at this time assuming
             market prices are sufficient for the fill to take place. This is used to emulate the 
             brokerage fills in backtesting and paper trading. For example some brokerages may not perform
             executions during extended market hours. This is not intended to be checking whether or not
             the exchange is open, that is handled in the Security.Exchange property.
             </summary>
             <param name="security">The security being traded</param>
             <param name="order">The order to test for execution</param>
             <returns>True if the brokerage would be able to perform the execution, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List{QuantConnect.Orders.OrderTicket},QuantConnect.Data.Market.Split)">
             <summary>
             Applies the split to the specified order ticket
             </summary>
             <remarks>
             This default implementation will update the orders to maintain a similar market value
             </remarks>
             <param name="tickets">The open tickets matching the split event</param>
             <param name="split">The split event data</param>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the brokerage's leverage for the specified security
             </summary>
             <param name="security">The security's whose leverage we seek</param>
             <returns>The leverage for the specified security</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.GetFillModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fill model that represents this brokerage's fill behavior
             </summary>
             <param name="security">The security to get fill model for</param>
             <returns>The new fill model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fee model that represents this brokerage's fee structure
             </summary>
             <param name="security">The security to get a fee model for</param>
             <returns>The new fee model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new slippage model that represents this brokerage's fill slippage behavior
             </summary>
             <param name="security">The security to get a slippage model for</param>
             <returns>The new slippage model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security,QuantConnect.AccountType)">
             <summary>
             Gets a new settlement model for the security
             </summary>
             <param name="security">The security to get a settlement model for</param>
             <param name="accountType">The account type</param>
             <returns>The settlement model for this brokerage</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.FxcmBrokerageModel">
             <summary>
             Provides FXCM specific properties
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.FxcmBrokerageModel.DefaultMarketMap">
             <summary>
             The default markets for the fxcm brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.FxcmBrokerageModel.DefaultMarkets">
             <summary>
             Gets a map of the default markets to be used for each security type
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.#ctor(QuantConnect.AccountType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.DefaultBrokerageModel" /> class
             </summary>
             <param name="accountType">The type of account to be modelled, defaults to 
             <see cref="F:QuantConnect.AccountType.Margin" /></param>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security"></param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.UpdateOrderRequest,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage would allow updating the order as specified by the request
             </summary>
             <param name="security">The security of the order</param>
             <param name="order">The order to be updated</param>
             <param name="request">The requested update to be made to the order</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be updated</param>
             <returns>True if the brokerage would allow updating the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.GetFillModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fill model that represents this brokerage's fill behavior
             </summary>
             <param name="security">The security to get fill model for</param>
             <returns>The new fill model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fee model that represents this brokerage's fee structure
             </summary>
             <param name="security">The security to get a fee model for</param>
             <returns>The new fee model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new slippage model that represents this brokerage's fill slippage behavior
             </summary>
             <param name="security">The security to get a slippage model for</param>
             <returns>The new slippage model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmBrokerageModel.IsValidOrderPrices(QuantConnect.Securities.Security,QuantConnect.Orders.OrderType,QuantConnect.Orders.OrderDirection,System.Decimal,System.Decimal,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Validates limit/stopmarket order prices, pass security.Price for limit/stop if n/a
             </summary>
            </member>
        <member name="T:QuantConnect.Brokerages.OandaTransactionModel">
             <summary>
             Oanda Transaction Model Class: Specific transaction fill models for Oanda orders
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Interfaces.ISecurityTransactionModel" />
            </member>
        <member name="M:QuantConnect.Brokerages.OandaTransactionModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.OandaTransactionModel" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Brokerages.FxcmTransactionModel">
             <summary>
             Fxcm Transaction Model Class: Specific transaction fill models for FXCM orders
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Interfaces.ISecurityTransactionModel" />
            </member>
        <member name="M:QuantConnect.Brokerages.FxcmTransactionModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.FxcmTransactionModel" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Brokerages.IBrokerageMessageHandler">
             <summary>
             Provides an plugin point to allow algorithms to directly handle the messages
             that come from their brokerage
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)">
             <summary>
             Handles the message
             </summary>
             <param name="message">The message to be handled</param>
            </member>
        <member name="T:QuantConnect.Brokerages.IBrokerageModel">
             <summary>
             Models brokerage transactions, fees, and order
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.IBrokerageModel.AccountType">
             <summary>
             Gets or sets the account type used by this model
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.IBrokerageModel.DefaultMarkets">
             <summary>
             Gets a map of the default markets to be used for each security type
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security">The security being ordered</param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.UpdateOrderRequest,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage would allow updating the order as specified by the request
             </summary>
             <param name="security">The security of the order</param>
             <param name="order">The order to be updated</param>
             <param name="request">The requested updated to be made to the order</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be updated</param>
             <returns>True if the brokerage would allow updating the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns true if the brokerage would be able to execute this order at this time assuming
             market prices are sufficient for the fill to take place. This is used to emulate the 
             brokerage fills in backtesting and paper trading. For example some brokerages may not perform
             executions during extended market hours. This is not intended to be checking whether or not
             the exchange is open, that is handled in the Security.Exchange property.
             </summary>
             <param name="security">The security being ordered</param>
             <param name="order">The order to test for execution</param>
             <returns>True if the brokerage would be able to perform the execution, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List{QuantConnect.Orders.OrderTicket},QuantConnect.Data.Market.Split)">
             <summary>
             Applies the split to the specified order ticket
             </summary>
             <param name="tickets">The open tickets matching the split event</param>
             <param name="split">The split event data</param>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the brokerage's leverage for the specified security
             </summary>
             <param name="security">The security's whose leverage we seek</param>
             <returns>The leverage for the specified security</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fill model that represents this brokerage's fill behavior
             </summary>
             <param name="security">The security to get fill model for</param>
             <returns>The new fill model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fee model that represents this brokerage's fee structure
             </summary>
             <param name="security">The security to get a fee model for</param>
             <returns>The new fee model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new slippage model that represents this brokerage's fill slippage behavior
             </summary>
             <param name="security">The security to get a slippage model for</param>
             <returns>The new slippage model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security,QuantConnect.AccountType)">
             <summary>
             Gets a new settlement model for the security
             </summary>
             <param name="security">The security to get a settlement model for</param>
             <param name="accountType">The account type</param>
             <returns>The settlement model for this brokerage</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.BrokerageModel">
             <summary>
             Provides factory method for creating an <see cref="T:QuantConnect.Brokerages.IBrokerageModel" /> from the <see cref="T:QuantConnect.Brokerages.BrokerageName" /> enum
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName,QuantConnect.AccountType)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Brokerages.IBrokerageModel" /> for the specified <see cref="T:QuantConnect.Brokerages.BrokerageName" />
             </summary>
             <param name="brokerage">The name of the brokerage</param>
             <param name="accountType">The account type</param>
             <returns>The model for the specified brokerage</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel">
             <summary>
             Provides properties specific to interactive brokers
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.#ctor(QuantConnect.AccountType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel" /> class
             </summary>
             <param name="accountType">The type of account to be modelled, defaults to 
             <see cref="F:QuantConnect.AccountType.Margin" /></param>
            </member>
        <member name="M:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security">The security being ordered</param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.UpdateOrderRequest,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage would allow updating the order as specified by the request
             </summary>
             <param name="security">The security of the order</param>
             <param name="order">The order to be updated</param>
             <param name="request">The requested update to be made to the order</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be updated</param>
             <returns>True if the brokerage would allow updating the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns true if the brokerage would be able to execute this order at this time assuming
             market prices are sufficient for the fill to take place. This is used to emulate the 
             brokerage fills in backtesting and paper trading. For example some brokerages may not perform
             executions during extended market hours. This is not intended to be checking whether or not
             the exchange is open, that is handled in the Security.Exchange property.
             </summary>
             <param name="security"></param>
             <param name="order">The order to test for execution</param>
             <returns>True if the brokerage would be able to perform the execution, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(System.String,System.Int32,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the specified order is within IB's order size limits
             </summary>
            </member>
        <member name="T:QuantConnect.Brokerages.OandaBrokerageModel">
             <summary>
             Oanda Brokerage Model Implementation for Back Testing.
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.OandaBrokerageModel.DefaultMarketMap">
             <summary>
             The default markets for the fxcm brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.OandaBrokerageModel.DefaultMarkets">
             <summary>
             Gets a map of the default markets to be used for each security type
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.#ctor(QuantConnect.AccountType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.DefaultBrokerageModel" /> class
             </summary>
             <param name="accountType">The type of account to be modelled, defaults to 
             <see cref="F:QuantConnect.AccountType.Margin" /></param>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security"></param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns true if the brokerage would be able to execute this order at this time assuming
             market prices are sufficient for the fill to take place. This is used to emulate the 
             brokerage fills in backtesting and paper trading. For example some brokerages may not perform
             executions during extended market hours. This is not intended to be checking whether or not
             the exchange is open, that is handled in the Security.Exchange property.
             </summary>
             <param name="security">The security being traded</param>
             <param name="order">The order to test for execution</param>
             <returns>True if the brokerage would be able to perform the execution, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.GetFillModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fill model that represents this brokerage's fill behavior
             </summary>
             <param name="security">The security to get fill model for</param>
             <returns>The new fill model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fee model that represents this brokerage's fee structure
             </summary>
             <param name="security">The security to get a fee model for</param>
             <returns>The new fee model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.OandaBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new slippage model that represents this brokerage's fill slippage behavior
             </summary>
             <param name="security">The security to get a slippage model for</param>
             <returns>The new slippage model for this brokerage</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.TradierBrokerageModel">
             <summary>
             Provides tradier specific properties
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.#ctor(QuantConnect.AccountType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Brokerages.DefaultBrokerageModel" /> class
             </summary>
             <param name="accountType">The type of account to be modelled, defaults to 
             <see cref="F:QuantConnect.AccountType.Margin" /></param>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage could accept this order. This takes into account
             order type, security type, and order size limits.
             </summary>
             <remarks>
             For example, a brokerage may have no connectivity at certain times, or an order rate/size limit
             </remarks>
             <param name="security">The security of the order</param>
             <param name="order">The order to be processed</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be submitted</param>
             <returns>True if the brokerage could process the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.UpdateOrderRequest,QuantConnect.Brokerages.BrokerageMessageEvent@)">
             <summary>
             Returns true if the brokerage would allow updating the order as specified by the request
             </summary>
             <param name="security">The security of the order</param>
             <param name="order">The order to be updated</param>
             <param name="request">The requested update to be made to the order</param>
             <param name="message">If this function returns false, a brokerage message detailing why the order may not be updated</param>
             <returns>True if the brokerage would allow updating the order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns true if the brokerage would be able to execute this order at this time assuming
             market prices are sufficient for the fill to take place. This is used to emulate the 
             brokerage fills in backtesting and paper trading. For example some brokerages may not perform
             executions during extended market hours. This is not intended to be checking whether or not
             the exchange is open, that is handled in the Security.Exchange property.
             </summary>
             <param name="security">The security being ordered</param>
             <param name="order">The order to test for execution</param>
             <returns>True if the brokerage would be able to perform the execution, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.ApplySplit(System.Collections.Generic.List{QuantConnect.Orders.OrderTicket},QuantConnect.Data.Market.Split)">
             <summary>
             Applies the split to the specified order ticket
             </summary>
             <param name="tickets">The open tickets matching the split event</param>
             <param name="split">The split event data</param>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.GetFillModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fill model that represents this brokerage's fill behavior
             </summary>
             <param name="security">The security to get fill model for</param>
             <returns>The new fill model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new fee model that represents this brokerage's fee structure
             </summary>
             <param name="security">The security to get a fee model for</param>
             <returns>The new fee model for this brokerage</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.TradierBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)">
             <summary>
             Gets a new slippage model that represents this brokerage's fill slippage behavior
             </summary>
             <param name="security">The security to get a slippage model for</param>
             <returns>The new slippage model for this brokerage</returns>
            </member>
        <member name="T:QuantConnect.Commands.AddSecurityCommand">
             <summary>
             Represents a command to add a security to the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.SecurityType">
             <summary>
             The security type of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.Symbol">
             <summary>
             The security's ticker symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.Resolution">
             <summary>
             The requested resolution, defaults to Resolution.Minute
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.Market">
             <summary>
             The security's market, defaults to <see cref="F:QuantConnect.Market.USA" /> except for Forex, defaults to <see cref="F:QuantConnect.Market.FXCM" />
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.FillDataForward">
             <summary>
             The fill forward behavior, true to fill forward, false otherwise - defaults to true
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.Leverage">
             <summary>
             The leverage for the security, defaults to 2 for equity, 50 for forex, and 1 for everything else
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.ExtendedMarketHours">
             <summary>
             The extended market hours flag, true to allow pre/post market data, false for only in market data
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AddSecurityCommand.#ctor">
             <summary>
             Default construct that applies default values
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AddSecurityCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Runs this command against the specified algorithm instance
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="T:QuantConnect.Commands.AddSecurityCommand.Result">
             <summary>
             Result packet type for the <see cref="T:QuantConnect.Commands.AddSecurityCommand" /> command
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AddSecurityCommand.Result.Symbol">
             <summary>
             The symbol result from the add security command
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AddSecurityCommand.Result.#ctor(QuantConnect.Commands.AddSecurityCommand,System.Boolean,QuantConnect.Symbol)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Commands.AddSecurityCommand.Result" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Commands.AlgorithmStatusCommand">
             <summary>
             Represents a command that will change the algorithm's status
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.AlgorithmStatusCommand.Status">
             <summary>
             Gets or sets the algorithm status
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AlgorithmStatusCommand.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Commands.AlgorithmStatusCommand" />
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AlgorithmStatusCommand.#ctor(QuantConnect.AlgorithmStatus)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Commands.AlgorithmStatusCommand" /> with
             the specified status
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.AlgorithmStatusCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Sets the algoritm's status to <see cref="P:QuantConnect.Commands.AlgorithmStatusCommand.Status" />
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="T:QuantConnect.Commands.CancelOrderCommand">
             <summary>
             Represents a command to cancel a specific order by id
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.CancelOrderCommand.OrderId">
             <summary>
             Gets or sets the order id to be cancelled
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.CancelOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Runs this command against the specified algorithm instance
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="T:QuantConnect.Commands.CancelOrderCommand.Result">
             <summary>
             Result packet type for the <see cref="T:QuantConnect.Commands.CancelOrderCommand" /> command
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.CancelOrderCommand.Result.QuantityFilled">
             <summary>
             Gets or sets the quantity filled on the cancelled order
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.CancelOrderCommand.Result.#ctor(QuantConnect.Commands.ICommand,System.Boolean,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Commands.CancelOrderCommand.Result" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Commands.ICommand">
             <summary>
             Represents a command that can be run against a single algorithm
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Runs this command against the specified algorithm instance
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="T:QuantConnect.Commands.LiquidateCommand">
             <summary>
             Represents a command that will liquidate the entire algorithm
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.LiquidateCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Submits orders to liquidate all current holdings in the algorithm
             </summary>
             <param name="algorithm">The algorithm to be liquidated</param>
            </member>
        <member name="T:QuantConnect.Commands.OrderCommand">
             <summary>
             Represents a command to submit an order to the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.SecurityType">
             <summary>
             Gets or sets the security type for the symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.Symbol">
             <summary>
             Gets or sets the symbol to be ordered
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.OrderType">
             <summary>
             Gets or sets the order type to be submted
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.Quantity">
             <summary>
             Gets or sets the number of units to be ordered (directional)
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.LimitPrice">
             <summary>
             Gets or sets the limit price. Only applies to <see cref="F:QuantConnect.Orders.OrderType.Limit" /> and <see cref="F:QuantConnect.Orders.OrderType.StopLimit" />
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.StopPrice">
             <summary>
             Gets or sets the stop price. Only applies to <see cref="F:QuantConnect.Orders.OrderType.StopLimit" /> and <see cref="F:QuantConnect.Orders.OrderType.StopMarket" />
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.OrderCommand.Tag">
             <summary>
             Gets or sets an arbitrary tag to be attached to the order
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.OrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Runs this command against the specified algorithm instance
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="M:QuantConnect.Commands.OrderCommand.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Commands.QuitCommand">
             <summary>
             Represents a command that will terminate the algorithm
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.QuitCommand.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Commands.QuitCommand" />
             </summary>
            </member>
        <member name="T:QuantConnect.Commands.UpdateOrderCommand">
             <summary>
             Represents a command to update an order by id
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.UpdateOrderCommand.OrderId">
             <summary>
             Gets or sets the id of the order to update
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.UpdateOrderCommand.Quantity">
             <summary>
             Gets or sets the new quantity, specify null to not update the quantity
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.UpdateOrderCommand.LimitPrice">
             <summary>
             Gets or sets the new limit price, specify null to not update the limit price.
             This will only be used if the order has a limit price (Limit/StopLimit orders)
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.UpdateOrderCommand.StopPrice">
             <summary>
             Gets or sets the new stop price, specify null to not update the stop price.
             This will onky be used if the order has a stop price (StopLimit/StopMarket orders)
             </summary>
            </member>
        <member name="P:QuantConnect.Commands.UpdateOrderCommand.Tag">
             <summary>
             Gets or sets the new tag for the order, specify null to not update the tag
             </summary>
            </member>
        <member name="M:QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Runs this command against the specified algorithm instance
             </summary>
             <param name="algorithm">The algorithm to run this command against</param>
            </member>
        <member name="T:QuantConnect.Data.Market.IBaseDataBar">
             <summary>
             Represents a type that is both a bar and base data
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.OpenInterestConsolidator">
             <summary>
             Type capable of consolidating open interest 
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.FromResolution(QuantConnect.Resolution)">
             <summary>
             Create a new OpenInterestConsolidator for the desired resolution
             </summary>
             <param name="resolution">The resolution desired</param>
             <returns>A consolidator that produces data on the resolution interval</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'OpenInterest' representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'OpenInterest' representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'OpenInterest' representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)">
             <summary>
             Determines whether or not the specified data should be processd
             </summary>
             <param name="tick">The data to check</param>
             <returns>True if the consolidator should process this data, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.OpenInterestConsolidator.AggregateBar(QuantConnect.Data.Market.OpenInterest@,QuantConnect.Data.Market.Tick)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new OI bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Market.OpenInterest">
             <summary>
             Defines a data type that represents open interest for given security
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.#ctor">
             <summary>
             Initializes a new instance of the OpenInterest class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.#ctor(QuantConnect.Data.Market.OpenInterest)">
             <summary>
             Cloner constructor for fill forward engine implementation. Clone the original OI into this new one:
             </summary>
             <param name="original">Original OI we're cloning</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.#ctor(System.DateTime,QuantConnect.Symbol,System.Decimal)">
             <summary>
             Initializes a new instance of the OpenInterest class with data
             </summary>
             <param name="time">Full date and time</param>
             <param name="symbol">Underlying equity security symbol</param>
             <param name="openInterest">Open Interest value</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Symbol,System.String,System.DateTime)">
             <summary>
             Constructor for QuantConnect open interest data
             </summary>
             <param name="config">Subscription configuration</param>
             <param name="symbol">Symbol for underlying asset</param>
             <param name="line">CSV line of data from QC OI csv</param>
             <param name="baseDate">The base date of the OI</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.#ctor(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parse an open interest data line from quantconnect zip source files.
             </summary>
             <param name="line">CSV source line of the compressed source</param>
             <param name="date">Base date for the open interest (date is stored as int milliseconds since midnight)</param>
             <param name="config">Subscription configuration object</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Tick implementation of reader method: read a line of data from the source and convert it to an open interest object.
             </summary>
             <param name="config">Subscription configuration object for algorithm</param>
             <param name="line">Line from the datafeed source</param>
             <param name="date">Date of this reader request</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>New initialized open interest object</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Get source for OI data feed - not used with QuantConnect data sources implementation.
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source request if source spread across multiple files</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String source location of the file to be opened with a stream</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OpenInterest.Clone">
             <summary>
             Clone implementation for open interest class:
             </summary>
             <returns>New tick object clone of the current class values.</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.RenkoType">
             <summary>
             The type of the RenkoBar
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.RenkoType.Classic">
             <summary>
             Indicates that the RenkoConsolidator works in a 
             "Classic" manner (ie. that it only returns a single 
             bar, at most, irrespective of tick movement).  
             NOTE: the Classic mode has only been retained for 
             backwards compatability with existing code.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.RenkoType.Wicked">
             <summary>
             Indicates that the RenkoConsolidator works properly,
             and returns zero or more bars per tick, as appropriate.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Custom.DailyFx">
             <summary>
             Helper data type for FXCM's public macro economic sentiment API.
             Data source used to create: https://www.dailyfx.com/calendar
             </summary>
             <remarks>
             Data sourced by Thomson Reuters
             DailyFX provides traders with an easy to use and customizable real-time calendar that updates automatically during 
             announcements.Keep track of significant events that traders care about.As soon as event data is released, the DailyFX 
             calendar automatically updates to provide traders with instantaneous information that they can use to formulate their trading decisions.
             </remarks>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Title">
             <summary>
             Title of the event.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.DisplayDate">
             <summary>
             Date the event was displayed on DailyFX
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.DisplayTime">
             <summary>
             Time of the day the event was displayed.
             </summary>
             <remarks>
              This is dated 1970, ignore the date component.
             </remarks>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Importance">
             <summary>
             Importance assignment from FxDaily API.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Meaning">
             <summary>
             What is the perceived meaning of this announcement result?
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Currency">
             <summary>
             Currency for this event.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Actual">
             <summary>
             Realized value of the economic tracker
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Forecast">
             <summary>
             Forecast value of the economic tracker
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Previous">
             <summary>
             Previous value of the economic tracker
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.DailyEvent">
             <summary>
             Is this a daily event?
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Commentary">
             <summary>
             Description and commentary on the event.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.DailyFx.Language">
             <summary>
             Language for this event.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.#ctor">
             <summary>
             Create a new basic FxDaily object.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Get the source URL for this date. 
             </summary>
             <remarks>
                 FXCM API allows up to 3mo blocks at a time, so we'll return the same URL for each
                 quarter and store the results in a local cache for speed.
             </remarks>
             <param name="config">Susbcription configuration</param>
             <param name="date">Date we're seeking.</param>
             <param name="isLiveMode">Live mode flag</param>
             <returns>Subscription source.</returns>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Create a new Daily FX Object
             </summary>
             <param name="config">Subscription data config which created this factory</param>
             <param name="content">Line from a <seealso cref="T:QuantConnect.Data.SubscriptionDataSource" /> result</param>
             <param name="date">Date of the request</param>
             <param name="isLiveMode">Live mode</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.RemoveSpecialCharacters(System.String)">
             <summary>
             Actual values from the API have lots of units, strip these to generate a "value" for the basedata.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.GetQuarter(System.DateTime)">
             <summary>
             Get the date search string for the quarter.
             </summary>
             <param name="date"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFx.ToString">
             <summary>
             Pretty format output string for the DailyFx.
             </summary>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Data.Custom.FxDailyImportance">
             <summary>
             FXDaily Importance Assignment.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyImportance.Low">
             <summary>
             Low importance
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyImportance.Medium">
             <summary>
             Medium importance
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyImportance.High">
             <summary>
             High importance
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Custom.FxDailyMeaning">
             <summary>
             What is the meaning of the event?
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyMeaning.None">
             <summary>
             The impact is perceived to be neutral.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyMeaning.Better">
             <summary>
             The economic impact is perceived to be better.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Custom.FxDailyMeaning.Worse">
             <summary>
             The economic impact is perceived to be worse.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Custom.DailyFxMeaningEnumConverter">
             <summary>
             Helper to parse the Daily Fx API.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Parse DailyFx API enum
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Write DailyFxEnum objects to JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.DailyFxMeaningEnumConverter.CanConvert(System.Type)">
             <summary>
             Indicate if we can convert this object.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FineFundamental">
             <summary>
             Definition of the FineFundamental class
             </summary>
             <summary>
             Definition of the FineFundamental class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.EndTime">
             <summary>
             The end time of this data.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FineFundamental.CreateUniverseSymbol(System.String)">
             <summary>
             Creates the universe symbol used for fine fundamental data
             </summary>
             <param name="market">The market</param>
             <returns>A fine universe symbol for the specified market</returns>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FineFundamental.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FineFundamental.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object
             each time it is called. The returned object is assumed to be time stamped in the config.ExchangeTimeZone.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.CompanyReference">
             <summary>
             The instance of the CompanyReference class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.SecurityReference">
             <summary>
             The instance of the SecurityReference class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.FinancialStatements">
             <summary>
             The instance of the FinancialStatements class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.EarningReports">
             <summary>
             The instance of the EarningReports class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.OperationRatios">
             <summary>
             The instance of the OperationRatios class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.EarningRatios">
             <summary>
             The instance of the EarningRatios class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FineFundamental.ValuationRatios">
             <summary>
             The instance of the ValuationRatios class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FineFundamental.#ctor">
             <summary>
             Creates an instance of the FineFundamental class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FineFundamental.UpdateValues(QuantConnect.Data.Fundamental.FineFundamental)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BalanceSheet">
             <summary>
             Definition of the BalanceSheet class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccountsPayable">
             <summary>
             Any money that a company owes its suppliers for goods and services purchased on credit and is expected to pay within the next
             year or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23000
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccountsReceivable">
             <summary>
             Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
             </summary>
             <remarks>
             Morningstar DataId: 23001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentAccruedExpenses">
             <summary>
             An expense recognized before it is paid for. Includes compensation, interest, pensions and all other miscellaneous accruals
             reported by the company. Expenses incurred during the accounting period, but not required to be paid until a later date.
             </summary>
             <remarks>
             Morningstar DataId: 23004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentAccruedExpenses">
             <summary>
             An expense that has occurred but the transaction has not been entered in the accounting records. Accordingly, an adjusting entry
             is made to debit the appropriate expense account and to credit a liability account such as accrued expenses payable or accounts
             payable.
             </summary>
             <remarks>
             Morningstar DataId: 23005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedInvestmentIncome">
             <summary>
             Interest, dividends, rents, ancillary and other revenues earned but not yet received by the entity on its investments.
             </summary>
             <remarks>
             Morningstar DataId: 23007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccumulatedDepreciation">
             <summary>
             The cumulative amount of wear and tear or obsolescence charged against the fixed assets of a company.
             </summary>
             <remarks>
             Morningstar DataId: 23008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GainsLossesNotAffectingRetainedEarnings">
             <summary>
             The aggregate amount of gains or losses that are not part of retained earnings. It is also called other comprehensive income.
             </summary>
             <remarks>
             Morningstar DataId: 23009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AdditionalPaidInCapital">
             <summary>
             Excess of issue price over par or stated value of the entity's capital stock and amounts received from other transactions involving
             the entity's stock or stockholders. Includes adjustments to additional paid in capital. There are two major categories of additional
             paid in capital: 1) Paid in capital in excess of par/stated value, which is the difference between the actual issue price of the shares
             and the shares' par/stated value. 2) Paid in capital from other transactions which includes treasury stock, retirement of stock, stock
             dividends recorded at market, lapse of stock purchase warrants, conversion of convertible bonds in excess of the par value of the
             stock, and any other additional capital from the company's own stock transactions.
             </summary>
             <remarks>
             Morningstar DataId: 23012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AllowanceForLoansAndLeaseLosses">
             <summary>
             A contra account sets aside as an allowance for bad loans (e.g. customer defaults).
             </summary>
             <remarks>
             Morningstar DataId: 23016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AvailableForSaleSecurities">
             <summary>
             For an unclassified balance sheet, this item represents equity securities categorized neither as held-to-maturity nor trading. Equity
             securities represent ownership interests or the right to acquire ownership interests in corporations and other legal entities which
             ownership interest is represented by shares of common or preferred stock (which is not mandatory redeemable or redeemable at
             the option of the holder), convertible securities, stock rights, or stock warrants. This category includes preferred stocks, available-
             for-sale and common stock, available-for-sale.
             </summary>
             <remarks>
             Morningstar DataId: 23020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CapitalStock">
             <summary>
             The total amount of stock authorized for issue by a corporation, including common and preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 23027
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Cash">
             <summary>
             Cash includes currency on hand as well as demand deposits with banks or financial institutions. It also includes other kinds of
             accounts that have the general characteristics of demand deposits in that the customer may deposit additional funds at any time
             and also effectively may withdraw funds at any time without prior notice or penalty.
             </summary>
             <remarks>
             Morningstar DataId: 23028
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashEquivalents">
             <summary>
             Cash equivalents, excluding items classified as marketable securities, include short-term, highly liquid investments that are both
             readily convertible to known amounts of cash, and so near their maturity that they present insignificant risk of changes in value
             because of changes in interest rates.  Generally, only investments with original maturities of three months or less qualify under this
             definition. Original maturity means original maturity to the entity holding the investment. For example, both a three-month US
             Treasury bill and a three-year Treasury note purchased three months from maturity qualify as cash equivalents. However, a Treasury
             note purchased three years ago does not become a cash equivalent when its remaining maturity is three months.
             </summary>
             <remarks>
             Morningstar DataId: 23029
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashAndCashEquivalents">
             <summary>
             Includes unrestricted cash on hand, money market instruments and other debt securities which can be converted to cash
             immediately.
             </summary>
             <remarks>
             Morningstar DataId: 23030
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashAndDueFromBanks">
             <summary>
             Includes cash on hand (currency and coin), cash items in process of collection, non-interest bearing deposits due from other
             financial institutions (including corporate credit unions), and balances with the Federal Reserve Banks, Federal Home Loan Banks
             and central banks.
             </summary>
             <remarks>
             Morningstar DataId: 23031
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashCashEquivalentsAndFederalFundsSold">
             <summary>
             The aggregate amount of cash, cash equivalents, and federal funds sold.
             </summary>
             <remarks>
             Morningstar DataId: 23032
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashCashEquivalentsAndMarketableSecurities">
             <summary>
             The aggregate amount of cash, cash equivalents, and marketable securities.
             </summary>
             <remarks>
             Morningstar DataId: 23033
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommonStock">
             <summary>
             Common stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet; i.e. it is one
             component of Common Stockholder's Equity
             </summary>
             <remarks>
             Morningstar DataId: 23038
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentAssets">
             <summary>
             The total amount of assets considered to be convertible into cash within a relatively short period of time, usually a year.
             </summary>
             <remarks>
             Morningstar DataId: 23044
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDebt">
             <summary>
             Represents the total amount of long-term debt such as bank loans and commercial paper, which is due within one year.
             </summary>
             <remarks>
             Morningstar DataId: 23045
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDebtAndCapitalLeaseObligation">
             <summary>
             All borrowings due within one year including current portions of long-term debt and capital leases as well as short-term debt such
             as bank loans and commercial paper.
             </summary>
             <remarks>
             Morningstar DataId: 23046
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentLiabilities">
             <summary>
             The debts or obligations of the firm that are due within one year.
             </summary>
             <remarks>
             Morningstar DataId: 23047
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentCapitalLeaseObligation">
             <summary>
             Represents the total amount of long-term capital leases that must be paid within the next accounting period. Capital lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
             <remarks>
             Morningstar DataId: 23048
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredAssets">
             <summary>
             An amount owed to a firm that is not expected to be received by the firm within one year from the date of the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23052
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredCosts">
             <summary>
             An expenditure not recognized as a cost of operation of the period in which incurred, but carried forward to be written off in future
             periods.
             </summary>
             <remarks>
             Morningstar DataId: 23054
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentDeferredLiabilities">
             <summary>
             Represents the non-current portion of obligations, which is a liability that usually would have been paid but is now past due.
             </summary>
             <remarks>
             Morningstar DataId: 23057
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDeferredLiabilities">
             <summary>
             Represents the current portion of obligations, which is a liability that usually would have been paid but is now past due.
             </summary>
             <remarks>
             Morningstar DataId: 23058
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredPolicyAcquisitionCosts">
             <summary>
             Net amount of deferred policy acquisition costs capitalized on contracts remaining in force as of the balance sheet date.
             </summary>
             <remarks>
             Morningstar DataId: 23059
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDeferredRevenue">
             <summary>
             Represents collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized.
             Generally, an entity records deferred revenue when it receives consideration from a customer before achieving certain criteria that
             must be met for revenue to be recognized in conformity with GAAP. It can be either current or non-current item. Also called
             unearned revenue.
             </summary>
             <remarks>
             Morningstar DataId: 23061
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentDeferredRevenue">
             <summary>
             The non-current portion of deferred revenue amount as of the balance sheet date. Deferred revenue is a liability related to revenue
             producing activity for which revenue has not yet been recognized, and is not expected be recognized in the next twelve months.
             </summary>
             <remarks>
             Morningstar DataId: 23062
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredTaxAssets">
             <summary>
             An asset on a company's balance sheet that may be used to reduce any subsequent period's income tax expense. Deferred tax
             assets can arise due to net loss carryovers, which are only recorded as assets if it is deemed more likely than not that the asset
             will be used in future fiscal periods.
             </summary>
             <remarks>
             Morningstar DataId: 23063
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDeferredTaxesAssets">
             <summary>
             Meaning a future tax asset, resulting from temporary differences between book (accounting) value of assets and liabilities and their
             tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a tax
             computation. It is also called future tax.
             </summary>
             <remarks>
             Morningstar DataId: 23064
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDeferredTaxesLiabilities">
             <summary>
             Meaning a future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and
             their tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a
             tax computation. Deferred tax liabilities generally arise where tax relief is provided in advance of an accounting expense, or income
             is accrued but not taxed until received.
             </summary>
             <remarks>
             Morningstar DataId: 23065
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentDeferredTaxesAssets">
             <summary>
             A result of timing differences between taxable incomes reported on the income statement and taxable income from the company's
             tax return. Depending on the positioning of deferred income taxes, the field may be either current (within current assets) or non-
             current (below total current assets). Typically a company will have two deferred income taxes fields.
             </summary>
             <remarks>
             Morningstar DataId: 23066
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentDeferredTaxesLiabilities">
             <summary>
             The estimated future tax obligations, which usually arise when different accounting methods are used for financial statements and
             tax statement It is also an add-back to the cash flow statement. Deferred income taxes include accumulated tax deferrals due to
             accelerated depreciation and investment credit.
             </summary>
             <remarks>
             Morningstar DataId: 23067
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.EquityInvestments">
             <summary>
             This asset represents equity securities categorized neither as held-to-maturity nor trading.
             </summary>
             <remarks>
             Morningstar DataId: 23076
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchase">
             <summary>
             This liability refers to the amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from
             another bank to meet its reserve requirements; and the amount of securities that an institution sells and agrees to repurchase at a
             specified date for a specified price, net of any reductions or offsets.
             </summary>
             <remarks>
             Morningstar DataId: 23079
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell">
             <summary>
             This asset refers to very-short-term loans of funds to other banks and securities dealers.
             </summary>
             <remarks>
             Morningstar DataId: 23081
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FixedMaturitiesAvailableForSale">
             <summary>
             This asset refers to the fair value of investments in debt securities that are deemed to be available for sale that are allocated to the
             segregated group of participating or dividend-paying policies and contracts identified as the closed block. Change in fair value of
             such securities is a component of change in other comprehensive income in the period, which is reflected in the closed block
             disclosure.
             </summary>
             <remarks>
             Morningstar DataId: 23086
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FixedMaturitiesHeldToMaturity">
             <summary>
             This asset represents the total of all debt securities grouped by maturity dates, at fair value, which are categorized as held-to-
             maturity.
             </summary>
             <remarks>
             Morningstar DataId: 23087
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FixedMaturitiesTrading">
             <summary>
             This asset refers the total of all debt securities grouped by maturity dates, at fair value, which are categorized as trading.
             </summary>
             <remarks>
             Morningstar DataId: 23088
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FixedMaturityInvestments">
             <summary>
             This asset refers to types of investments that may be contained within the fixed maturity category which securities are having a
             stated final repayment date. Examples of items within this category may include bonds, including convertibles and bonds with
             warrants, and redeemable preferred stocks.
             </summary>
             <remarks>
             Morningstar DataId: 23089
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FuturePolicyBenefits">
             <summary>
             Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
             paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
             regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
             </summary>
             <remarks>
             Morningstar DataId: 23095
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GeneralPartnershipCapital">
             <summary>
             In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the general
             partners.
             </summary>
             <remarks>
             Morningstar DataId: 23096
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Goodwill">
             <summary>
             The excess of the cost of an acquired company over the sum of the fair market value of its identifiable individual assets less the
             liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 23097
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GoodwillAndOtherIntangibleAssets">
             <summary>
             Rights or economic benefits, such as patents and goodwill, that is not physical in nature. They are those that are neither physical
             nor financial in nature, nevertheless, have value to the company. Intangibles are listed net of accumulated amortization.
             </summary>
             <remarks>
             Morningstar DataId: 23098
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GrossLoan">
             <summary>
             Represents the sum of all loans (commercial, consumer, mortgage, etc.) as well as leases before any provisions for loan losses or
             unearned discounts.
             </summary>
             <remarks>
             Morningstar DataId: 23099
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GrossPPE">
             <summary>
             Carrying amount at the balance sheet date for long-lived physical assets used in the normal conduct of business and not intended
             for resale. This can include land, physical structures, machinery, vehicles, furniture, computer equipment, construction in progress,
             and similar items. Amount does not include depreciation.
             </summary>
             <remarks>
             Morningstar DataId: 23100
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HeldToMaturitySecurities">
             <summary>
             Debt securities that a firm has the ability and intent to hold until maturity.
             </summary>
             <remarks>
             Morningstar DataId: 23102
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.IncomeTaxPayable">
             <summary>
             A current liability account which reflects the amount of income taxes currently due to the federal, state, and local governments.
             </summary>
             <remarks>
             Morningstar DataId: 23103
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestBearingDepositsLiabilities">
             <summary>
             The aggregate of all domestic and foreign deposits in the bank that earns interests.
             </summary>
             <remarks>
             Morningstar DataId: 23105
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestPayable">
             <summary>
             Sum of the carrying values as of the balance sheet date of interest payable on all forms of debt, including trade payable that has
             been incurred.
             </summary>
             <remarks>
             Morningstar DataId: 23106
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestBearingDepositsAssets">
             <summary>
             Deposit of money with a financial institution, in consideration of which the financial institution pays or credits interest, or amounts in the nature
             of interest.
             </summary>
             <remarks>
             Morningstar DataId: 23107
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Inventory">
             <summary>
             A company's merchandise, raw materials, and finished and unfinished products which have not yet been sold.
             </summary>
             <remarks>
             Morningstar DataId: 23108
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsAndAdvances">
             <summary>
             All investments in affiliates, real estate, securities, etc. Non-current investment, not including marketable securities.
             </summary>
             <remarks>
             Morningstar DataId: 23111
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LimitedPartnershipCapital">
             <summary>
             In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the limited
             partners.
             </summary>
             <remarks>
             Morningstar DataId: 23118
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermDebt">
             <summary>
             Sum of the carrying values as of the balance sheet date of all long-term debt, which is debt initially having maturities due after one
             year or beyond the operating cycle, if longer, but excluding the portions thereof scheduled to be repaid within one year or the
             normal operating cycle, if longer. Long-term debt includes notes payable, bonds payable, mortgage loans, convertible debt,
             subordinated debt and other types of long term debt.
             </summary>
             <remarks>
             Morningstar DataId: 23123
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermDebtAndCapitalLeaseObligation">
             <summary>
             All borrowings lasting over one year including long-term debt and long-term portion of capital lease obligations.
             </summary>
             <remarks>
             Morningstar DataId: 23124
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermInvestments">
             <summary>
             Often referred to simply as "investments". Long-term investments are to be held for many years and are not intended to be
             disposed in the near future. This group usually consists of four types of investments.
             </summary>
             <remarks>
             Morningstar DataId: 23126
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermCapitalLeaseObligation">
             <summary>
             Represents the total liability for long-term leases lasting over one year. Amount equal to the present value (the principal) at the
             beginning of the lease term less lease payments during the lease term.
             </summary>
             <remarks>
             Morningstar DataId: 23127
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MinorityInterest">
             <summary>
             Carrying amount of the equity interests owned by non-controlling shareholders, partners, or other equity holders in one or more of
             the entities included in the reporting entity's consolidated financial statements.
             </summary>
             <remarks>
             Morningstar DataId: 23132
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MoneyMarketInvestments">
             <summary>
             Short-term (typical maturity is less than one year), highly liquid government or corporate debt instrument such as bankers'
             acceptance, promissory notes, and treasury bills.
             </summary>
             <remarks>
             Morningstar DataId: 23133
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetLoan">
             <summary>
             Represents the value of all loans after deduction of the appropriate allowances for loan and lease losses.
             </summary>
             <remarks>
             Morningstar DataId: 23137
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetPPE">
             <summary>
             Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
             administrative purposes and that are expected to provide economic benefit for more than one year; net of accumulated
             depreciation.
             </summary>
             <remarks>
             Morningstar DataId: 23139
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonInterestBearingDeposits">
             <summary>
             The aggregate amount of all domestic and foreign deposits in the banks that do not draw interest.
             </summary>
             <remarks>
             Morningstar DataId: 23142
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentNotesPayable">
             <summary>
             Written promises to pay a stated sum at one or more specified dates in the future, within the accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23143
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NotesReceivable">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) within one year of the balance sheet date or the normal operating cycle, whichever is longer. Such amount may
             include accrued interest receivable in accordance with the terms of the note. The note also may contain provisions including a
             discount or premium, payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among a myriad of other
             features and characteristics.
             </summary>
             <remarks>
             Morningstar DataId: 23144
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentNoteReceivables">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) , excluding the portion that is expected to be received within one year of the balance sheet date or the normal
             operating cycle, whichever is longer.
             </summary>
             <remarks>
             Morningstar DataId: 23146
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherCurrentLiabilities">
             <summary>
             Other current liabilities = Total current liabilities - Payables and accrued Expenses - Current debt and capital lease obligaton -
             provisions, current - deferred liabilities, current
             </summary>
             <remarks>
             Morningstar DataId: 23151
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherIntangibleAssets">
             <summary>
             Sum of the carrying amounts of all intangible assets, excluding goodwill.
             </summary>
             <remarks>
             Morningstar DataId: 23155
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherShortTermInvestments">
             <summary>
             The aggregate amount of short term investments, which will be expired within one year that are not specifically classified as
             Available-for-Sale, Held-to-Maturity,  nor Trading investments.
             </summary>
             <remarks>
             Morningstar DataId: 23163
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Payables">
             <summary>
             The sum of all payables owed and expected to be paid within one year or one operating cycle, including accounts payables, taxes
             payable, dividends payable and all other current payables.
             </summary>
             <remarks>
             Morningstar DataId: 23165
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PayablesAndAccruedExpenses">
             <summary>
             This balance sheet account includes all current payables and accrued expenses.
             </summary>
             <remarks>
             Morningstar DataId: 23166
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PolicyReservesBenefits">
             <summary>
             Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
             paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
             regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
             </summary>
             <remarks>
             Morningstar DataId: 23169
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PolicyholderFunds">
             <summary>
             The total liability as of the balance sheet date of amounts due to policy holders, excluding future policy benefits and claims,
             including unpaid policy dividends, retrospective refunds, and undistributed earnings on participating business.
             </summary>
             <remarks>
             Morningstar DataId: 23171
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredSecuritiesOutsideStockEquity">
             <summary>
             Preferred securities that that firm treats as a liability. It includes convertible preferred stock or redeemable preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 23172
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredStock">
             <summary>
             Preferred stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23174
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PremiumsReceivable">
             <summary>
             The carrying amount as of the balance sheet date due the entity from agents insures, uncollected premiums and others.
             </summary>
             <remarks>
             Morningstar DataId: 23178
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PrepaidAssets">
             <summary>
             Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in subsequent periods.
             </summary>
             <remarks>
             Morningstar DataId: 23179
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentPrepaidAssets">
             <summary>
             Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in periods after one
             year or beyond the operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 23180
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Receivables">
             <summary>
             The sum of all receivables owed by customers and affiliates within one year, including accounts receivable, notes receivable,
             premiums receivable, and other current receivables.
             </summary>
             <remarks>
             Morningstar DataId: 23189
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RedeemablePreferredStock">
             <summary>
             Type of preferred stock which may be bought back by the issuing company on a specified date or after a specified period of notice.
             </summary>
             <remarks>
             Morningstar DataId: 23191
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceRecoverable">
             <summary>
             The amount of benefits the ceding insurer expects to recover on insurance policies ceded to other insurance entities as of the
             balance sheet date for all guaranteed benefit types. It includes estimated amounts for claims incurred but not reported, and policy
             benefits, net of any related valuation allowance.
             </summary>
             <remarks>
             Morningstar DataId: 23196
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RetainedEarnings">
             <summary>
             The cumulative net income of the company from the date of its inception (or reorganization) to the date of the financial statement
             less the cumulative distributions to shareholders either directly (dividends) or indirectly (treasury stock).
             </summary>
             <remarks>
             Morningstar DataId: 23204
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecuritiesLendingCollateral">
             <summary>
             The carrying value as of the balance sheet date of the liabilities collateral securities loaned to other broker-dealers. Borrowers of
             securities generally are required to provide collateral to the lenders of securities, commonly cash but sometimes other securities or
             standby letters of credit, with a value slightly higher than that of the securities borrowed.
             </summary>
             <remarks>
             Morningstar DataId: 23205
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecurityAgreeToBeResell">
             <summary>
             The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
             resell the identical security purchased or a security that meets the definition of "substantially the same" in the case of a dollar roll.
             Also includes purchases of participations in pools of securities that are subject to a resale agreement.
             </summary>
             <remarks>
             Morningstar DataId: 23207
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecuritySoldNotYetRepurchased">
             <summary>
             Represent obligations of the company to deliver the specified security at the contracted price and, thereby, create a liability to
             purchase the security in the market at prevailing prices.
             </summary>
             <remarks>
             Morningstar DataId: 23208
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SeparateAccountAssets">
             <summary>
             The fair value of the assets held by the company for the benefit of separate account policyholders.
             </summary>
             <remarks>
             Morningstar DataId: 23209
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SeparateAccountBusiness">
             <summary>
             Refers to revenue that is generated that is not part of typical operations.
             </summary>
             <remarks>
             Morningstar DataId: 23210
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ShortTermInvestmentsAvailableForSale">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company holds with the purpose for
             trading.
             </summary>
             <remarks>
             Morningstar DataId: 23212
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ShortTermInvestmentsHeldToMaturity">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company has made that will expire
             at a fixed date within one year.
             </summary>
             <remarks>
             Morningstar DataId: 23213
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ShortTermInvestmentsTrading">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company can trade at any moment.
             </summary>
             <remarks>
             Morningstar DataId: 23214
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.StockholdersEquity">
             <summary>
             The residual interest in the assets of the enterprise that remains after deducting its liabilities. Equity is increased by owners'
             investments and by comprehensive income, and it is reduced by distributions to the owners.
             </summary>
             <remarks>
             Morningstar DataId: 23215
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalTaxPayable">
             <summary>
             A liability that reflects the taxes owed to federal, state, and local tax authorities. It is the carrying value as of the balance sheet
             date of obligations incurred and payable for statutory income, sales, use, payroll, excise, real, property and other taxes.
             </summary>
             <remarks>
             Morningstar DataId: 23217
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalAssets">
             <summary>
             The aggregate amount of probable future economic benefits obtained or controlled by a particular enterprise as a result of past
             transactions or events.
             </summary>
             <remarks>
             Morningstar DataId: 23220
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalDeposits">
             <summary>
             A liability account which represents the total amount of funds deposited.
             </summary>
             <remarks>
             Morningstar DataId: 23223
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalInvestments">
             <summary>
             Asset that refers to the sum of all available for sale securities and other investments often reported on the balance sheet of
             insurance firms.
             </summary>
             <remarks>
             Morningstar DataId: 23224
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalLiabilities">
             <summary>
             Probable future sacrifices of economic benefits arising from present obligations of an enterprise to transfer assets or provide
             services to others in the future as a result of past transactions or events.
             </summary>
             <remarks>
             Morningstar DataId: 23225
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalNonCurrentAssets">
             <summary>
             Sum of the carrying amounts as of the balance sheet date of all assets that are expected to be realized in cash, sold or consumed
             after one year or beyond the normal operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 23226
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalNonCurrentLiabilities">
             <summary>
             Total obligations incurred as part of normal operations that is expected to be repaid beyond the following twelve months or one
             business cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23227
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalPartnershipCapital">
             <summary>
             Ownership interest of different classes of partners in the publicly listed limited partnership or master limited partnership. Partners
             include general, limited and preferred partners.
             </summary>
             <remarks>
             Morningstar DataId: 23228
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradingAssets">
             <summary>
             Trading account assets are bought and held principally for the purpose of selling them in the near term (thus held for only a short
             period of time). Unrealized holding gains and losses for trading securities are included in earnings.
             </summary>
             <remarks>
             Morningstar DataId: 23229
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradingLiabilities">
             <summary>
             The carrying amount of liabilities as of the balance sheet date that pertain to principal and customer trading transactions, or which
             may be incurred with the objective of generating a profit from short-term fluctuations in price as part of an entity's market-making,
             hedging and proprietary trading. Examples include short positions in securities, derivatives and commodities, obligations under
             repurchase agreements, and securities borrowed arrangements.
             </summary>
             <remarks>
             Morningstar DataId: 23230
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradingSecurities">
             <summary>
             The total of financial instruments that are bought and held principally for the purpose of selling them in the near term (thus held for
             only a short period of time) or for debt and equity securities formerly categorized as available-for-sale or held-to-maturity which the
             company held as of the date it opted to account for such securities at fair value.
             </summary>
             <remarks>
             Morningstar DataId: 23231
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TreasuryStock">
             <summary>
             The portion of shares that a company keeps in their own treasury. Treasury stock may have come from a repurchase or buyback
             from shareholders; or it may have never been issued to the public in the first place. These shares don't pay dividends, have no
             voting rights, and are not included in shares outstanding calculations.
             </summary>
             <remarks>
             Morningstar DataId: 23232
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnearnedIncome">
             <summary>
             Income received but not yet earned, it represents the unearned amount that is netted against the total loan.
             </summary>
             <remarks>
             Morningstar DataId: 23235
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnearnedPremiums">
             <summary>
             Carrying amount of premiums written on insurance contracts that have not been earned as of the balance sheet date.
             </summary>
             <remarks>
             Morningstar DataId: 23236
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnpaidLossAndLossReserve">
             <summary>
             Liability amount that reflects claims that are expected based upon statistical projections, but which have not been reported to the
             insurer.
             </summary>
             <remarks>
             Morningstar DataId: 23237
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestedCapital">
             <summary>
             Invested capital = common shareholders' equity + long term debt + current debt
             </summary>
             <remarks>
             Morningstar DataId: 23245
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentDeferredAssets">
             <summary>
             Payments that will be assigned as expenses with one accounting period, but that are paid in advance and temporarily set up as
             current assets on the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23252
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentDeferredAssets">
             <summary>
             Payments that will be assigned as expenses longer than one accounting period, but that are paid in advance and temporarily set up
             as non-current assets on the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23253
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecuritiesAndInvestments">
             <summary>
             Asset, often applicable to Banks, which refers to the aggregate amount of all securities and investments.
             </summary>
             <remarks>
             Morningstar DataId: 23258
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalLiabilitiesNetMinorityInterest">
             <summary>
             Probable future sacrifices of economic benefits arising from present obligations of an enterprise to transfer assets or provide
             services to others in the future as a result of past transactions or events, excluding minority interest.
             </summary>
             <remarks>
             Morningstar DataId: 23259
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalNonCurrentLiabilitiesNetMinorityInterest">
             <summary>
             Total obligations, net minority interest, incurred as part of normal operations that is expected to be repaid beyond the following
             twelve months or one business cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23260
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalEquityGrossMinorityInterest">
             <summary>
             Residual interest, gross of minority interest, that remains in the assets of the enterprise after deducting its liabilities. Equity is
             increased by owners' investments and by comprehensive income, and it is reduced by distributions to the owners.
             </summary>
             <remarks>
             Morningstar DataId: 23261
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GrossAccountsReceivable">
             <summary>
             Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
             </summary>
             <remarks>
             Morningstar DataId: 23262
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentAccountsReceivable">
             <summary>
             Accounts receivable represents sums owed to the business that the business records as revenue. Gross accounts receivable is
             accounts receivable before the business deducts uncollectable accounts to calculate the true value of accounts receivable.
             </summary>
             <remarks>
             Morningstar DataId: 23263
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedInterestReceivable">
             <summary>
             This account shows the amount of unpaid interest accrued to the date of purchase and included in the purchase price of securities
             purchased between interest dates.
             </summary>
             <remarks>
             Morningstar DataId: 23264
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AdvanceFromFederalHomeLoanBanks">
             <summary>
             This item is typically available for bank industry. It's the amount of borrowings as of the balance sheet date from the Federal Home
             Loan Bank, which are primarily used to cover shortages in the required reserve balance and liquidity shortages.
             </summary>
             <remarks>
             Morningstar DataId: 23265
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AllowanceForDoubtfulAccountsReceivable">
             <summary>
             An Allowance for Doubtful Accounts measures receivables recorded but not expected to be collected.
             </summary>
             <remarks>
             Morningstar DataId: 23266
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AllowanceForNotesReceivable">
             <summary>
             This item is typically available for bank industry. It represents a provision relating to a written agreement to receive money  with the
             terms of the note (at a specified future date(s) within one year from the reporting date (or the normal operating cycle, whichever is
             longer), consisting of principal as well as any accrued interest) for the portion that is expected to be uncollectible.
             </summary>
             <remarks>
             Morningstar DataId: 23267
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AssetsHeldForSale">
             <summary>
             This item is typically available for bank industry. It's a part of long-lived assets, which has been decided for sale in the future.
             </summary>
             <remarks>
             Morningstar DataId: 23268
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AssetsOfDiscontinuedOperations">
             <summary>
             A portion of a company's business that has been disposed of or sold.
             </summary>
             <remarks>
             Morningstar DataId: 23269
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankAcceptanceExecutedAndOutstanding">
             <summary>
             This item is typically available for bank industry.  It is the carrying amount as of the balance sheet date of drafts and bills of
             exchange that have been accepted by the reporting bank or by others for its own account, as its liability to holders of the drafts.
             </summary>
             <remarks>
             Morningstar DataId: 23270
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankIndebtedness">
             <summary>
             It means all indebtedness for borrowed money or the deferred purchase price of property or services, including without limitation
             reimbursement and other obligations with respect to surety bonds and letters of credit, all obligations evidenced by notes, bonds
             debentures or similar instruments, all capital lease obligations and all contingent obligations. 
             </summary>
             <remarks>
             Morningstar DataId: 23271
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankLoan">
             <summary>
             It means an amount of money lent at interest by a bank to a borrower, usually on collateral security, for a certain period of time.
             </summary>
             <remarks>
             Morningstar DataId: 23272
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankOwnedLifeInsurance">
             <summary>
             It means the carrying amount of a life insurance policy on an officer, executive or employee for which the reporting entity (a bank) is
             entitled to proceeds from the policy upon death of the insured or surrender of the insurance policy.
             </summary>
             <remarks>
             Morningstar DataId: 23273
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecurityBorrowed">
             <summary>
             The securities borrowed or on loan, which is the temporary loan of securities by a lender to a borrower in exchange for cash.  This
             item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23274
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BuildingsAndImprovements">
             <summary>
             Fixed assets that specifically deal with the facilities a company owns. Include the improvements associated with buildings.
             </summary>
             <remarks>
             Morningstar DataId: 23275
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CasualtyClaims">
             <summary>
             The aggregate amount of claims made by the company under its casualty insurance policy.
             </summary>
             <remarks>
             Morningstar DataId: 23276
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CededUnearnedPremiums">
             <summary>
             The amount of unearned premiums paid and payable to another insurer as a result of reinsurance arrangements in order to
             exchange for that company accepting all or part of insurance on a risk or exposure.
             </summary>
             <remarks>
             Morningstar DataId: 23277
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommercialLoan">
             <summary>
             Short-term loan, typically 90 days, used by a company to finance seasonal working capital needs.
             </summary>
             <remarks>
             Morningstar DataId: 23278
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommercialPaper">
             <summary>
             Commercial paper is a money-market security issued by large banks and corporations. It represents the current obligation for the
             company. There are four basic kinds of commercial paper: promissory notes, drafts, checks, and certificates of deposit. The
             maturities of these money market securities generally do not exceed 270 days.
             </summary>
             <remarks>
             Morningstar DataId: 23279
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommonStockEquity">
             <summary>
             The portion of the Stockholders' Equity that reflects the amount of common stock, which are units of ownership.
             </summary>
             <remarks>
             Morningstar DataId: 23280
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommonStocksAvailableForSale">
             <summary>
             Stock, other than an entity's own stock, held and available for sale.  This item is usally available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23281
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConstructionInProgress">
             <summary>
             It represents carrying amount of long-lived asset under construction that includes construction costs to date on capital projects.
             Assets constructed, but not completed.
             </summary>
             <remarks>
             Morningstar DataId: 23282
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConsumerLoan">
             <summary>
             A loan that establishes consumer credit that is granted for personal use; usually unsecured and based on the borrower's integrity
             and ability to pay.
             </summary>
             <remarks>
             Morningstar DataId: 23283
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MinimumPensionLiabilities">
             <summary>
             The company's minimum pension obligations to its former employees, paid into a defined pension plan to satisfy all pension
             entitlements that have been earned by employees to date.
             </summary>
             <remarks>
             Morningstar DataId: 23284
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CustomerAcceptances">
             <summary>
             Amounts receivable from customers on short-term negotiable time drafts drawn on and accepted by the institution (also known as
             banker's acceptance transactions) that are outstanding on the reporting date.
             </summary>
             <remarks>
             Morningstar DataId: 23285
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredAcquisitionCosts">
             <summary>
             When a company defers the sales costs that are associated with acquiring a new customer over the term of the insurance
             contract.
             </summary>
             <remarks>
             Morningstar DataId: 23286
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredFinancingCosts">
             <summary>
             Deferred Finance is created where the purchaser agrees with the vendor to pay some of the purchase price at a future date, as
             opposed to paying the full purchase price in cash on day one.
             </summary>
             <remarks>
             Morningstar DataId: 23287
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DefinedPensionBenefit">
             <summary>
             The recognition of an asset where pension fund assets exceed promised benefits.
             </summary>
             <remarks>
             Morningstar DataId: 23288
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DerivativeProductLiabilities">
             <summary>
             Fair values of all liabilities resulting from contracts that meet the criteria of being accounted for as derivative instruments; and
             which are expected to be extinguished or otherwise disposed of after one year or beyond the normal operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23289
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DerivativeAssets">
             <summary>
             Fair values of assets resulting from contracts that meet the criteria of being accounted for as derivative instruments, net of the
             effects of master netting arrangements.
             </summary>
             <remarks>
             Morningstar DataId: 23290
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DividendsPayable">
             <summary>
             Sum of the carrying values of dividends declared but unpaid on equity securities issued and outstanding (also includes dividends
             collected on behalf of another owner of securities that are being held by entity) by the entity.
             </summary>
             <remarks>
             Morningstar DataId: 23291
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ESOPDebtGuarantee">
             <summary>
             ESOP Debt Guarantee represents all transactions related to a company's Employee Stock Ownership Plan (ESOP), such as
             shares/debt/loans owned by ESOP.
             </summary>
             <remarks>
             Morningstar DataId: 23292
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.EmployeeBenefits">
             <summary>
             Carrying amount as of the balance sheet date of the portion of the obligations recognized for the various benefits provided to former
             or inactive employees, their beneficiaries, and covered dependents after employment but before retirement.
             </summary>
             <remarks>
             Morningstar DataId: 23293
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FacilitiesAndOther">
             <summary>
             An installation, contrivance, or other facilitates which service for transportation, such as Medical facility; Telecommunications
             facility; Post-production facility. This item is typically available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 23294
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FederalFundsPurchased">
             <summary>
             The amount borrowed by a bank, at the federal funds rate, from another bank to meet its reserve requirements.  This item is
             typically available for the bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23295
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FederalFundsSold">
             <summary>
             Federal funds transactions involve lending (federal funds sold) or borrowing (federal funds purchased) of immediately available
             reserve balances.  This item is typically available for the bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23296
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FederalHomeLoanBankStock">
             <summary>
             Federal Home Loan Bank stock represents an equity interest in a FHLB. It does not have a readily determinable fair value because
             its ownership is restricted and it lacks a market (liquidity).  This item is typically available for the bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23297
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialAssets">
             <summary>
             Fair values as of the balance sheet date of all assets resulting from contracts that meet the criteria of being accounted for as
             derivative instruments, net of the effects of master netting arrangements.
             </summary>
             <remarks>
             Morningstar DataId: 23298
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialInstrumentsSoldUnderAgreementsToRepurchase">
             <summary>
             The carrying value as of the balance sheet date of securities that an institution sells and agrees to repurchase (the identical or
             substantially the same securities) as a seller-borrower at a specified date for a specified price, also known as a repurchase
             agreement.  This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23299
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinishedGoods">
             <summary>
             The carrying amount as of the balance sheet date of merchandise or goods held by the company that are readily available for sale.
             This item is typically available for mining and manufacturing industries.
             </summary>
             <remarks>
             Morningstar DataId: 23300
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FlightFleetVehicleAndRelatedEquipments">
             <summary>
             It is one of the important fixed assets for transportation industry, which includes bicycles, cars, motorcycles, trains, ships, boats,
             and aircraft.  This item is typically available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 23301
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ForeclosedAssets">
             <summary>
             The carrying amount as of the balance sheet date of all assets obtained in full or partial satisfaction of a debt arrangement through
             foreclosure proceedings or defeasance; includes real and personal property; equity interests in corporations, partnerships, and joint
             ventures; and beneficial interest in trusts.  This item is typically typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23302
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ForeignComponent">
             <summary>
             Loans related to foreign countries.  This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23303
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ForeignCurrencyTranslationAdjustments">
             <summary>
             Changes to accumulated comprehensive income that results from the process of translating subsidiary financial statements and
             foreign equity investments into functional currency of the reporting company.
             </summary>
             <remarks>
             Morningstar DataId: 23304
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FuelAndNaturalGas">
             <summary>
             This item discloses the period end balance sheet amount of fuel and natural gas. It is typically available for the utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23305
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GuaranteedInvestmentContract">
             <summary>
             Contracts held by defined benefit pension plans generally provide for a specified return on principal invested over a specified period.
             This item is typically available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23306
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InventoriesAdjustmentsAllowances">
             <summary>
             This item represents certain charges made in the current period in inventory resulting from such factors as breakage, spoilage,
             employee theft and shoplifting. This item is typically available for manufacturing, mining and utility industries.
             </summary>
             <remarks>
             Morningstar DataId: 23307
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentTaxCredits">
             <summary>
             A specified percentage of the amount of certain new investment that a company can deduct as a credit against its income tax bill.
             This item is typically available for the utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23308
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVentures">
             <summary>
             The investments in (1) an entity in which the entity has significant influence, but does not have control; (2) subsidiaries that are
             required to be consolidated and are accounted for using the equity and or cost method; and (3) an entity in which the reporting
             entity shares control of the entity with another party or group.  This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23309
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsInOtherVenturesUnderEquityMethod">
             <summary>
             This item represents the carrying amount on the company's balance sheet of its investments in common stock of an equity method.
             This item is typically available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23310
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsInVariableInterestEntity">
             <summary>
             This item is typically available for bank industry. It means invest in an entity in which the investor holds a controlling interest that is
             not based on the majority of voting rights.
             </summary>
             <remarks>
             Morningstar DataId: 23311
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LandAndImprovements">
             <summary>
             Fixed Assets that specifically deal with land a company owns. Includes the improvements associated with land. This excludes land
             held for sale.
             </summary>
             <remarks>
             Morningstar DataId: 23312
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Leases">
             <summary>
             Carrying amount at the balance sheet date of a long-lived, depreciable asset that is an addition or improvement to assets held
             under lease arrangement. This item is usually not available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23313
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LiabilitiesOfDiscontinuedOperations">
             <summary>
             The obligations arising from the sale, disposal, or planned sale in the near future (generally within one year) of a disposal group,
             including a component of the entity (discontinued operation). This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23314
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LimitedPartnership">
             <summary>
             Two or more partners united to conduct a business jointly, and in which one or more of the partners is liable only to the extent of
             the amount of money that partner has invested. Limited partners do not receive dividends, but enjoy direct access to the flow of
             income and expenses.  This item is typically available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23315
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LineOfCredit">
             <summary>
             The carrying value as of the balance sheet date of obligations drawn from a line of credit, which is a bank's commitment to make
             loans up to a specific amount.
             </summary>
             <remarks>
             Morningstar DataId: 23316
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoansHeldForSale">
             <summary>
             It means the aggregate amount of loans receivable that will be sold to other entities.  This item is typically available for bank
             industry.
             </summary>
             <remarks>
             Morningstar DataId: 23317
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoansReceivable">
             <summary>
             Reflects the carrying amount of unpaid loans issued to other institutions for cash needs or an asset purchase.
             </summary>
             <remarks>
             Morningstar DataId: 23318
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MachineryFurnitureEquipment">
             <summary>
             Fixed assets specifically dealing with tools, equipment and office furniture. This item is usually not available for the insurance and
             utility industries.
             </summary>
             <remarks>
             Morningstar DataId: 23319
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MaterialsAndSupplies">
             <summary>
             Aggregated amount of unprocessed materials to be used in manufacturing or production process and supplies that will be
             consumed. This item is typically available for the utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23320
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MineralProperties">
             <summary>
             A fixed asset that represents strictly mineral type properties.  This item is typically available for mining industry.
             </summary>
             <remarks>
             Morningstar DataId: 23321
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MortgageLoan">
             <summary>
             This is a lien on real estate to protect a lender.  This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23322
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.MortgageAndConsumerloans">
             <summary>
             It means the aggregate amount of mortgage and consumer loans.  This item is typically available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23323
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NaturalResourceAssets">
             <summary>
             It means a material source of wealth, such as timber, fresh water, or a mineral deposit, that occurs in a natural state and has
             economic value.  This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23324
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetOtherUnrealizedGainLoss">
             <summary>
             The amount of net unrealized gain or loss related to the change in fair value, not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23325
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetUnrealizedGainLossForeignCurrency">
             <summary>
             The amount of net unrealized gain or loss related to the change in fair value of foreign currency exchange rate.
             </summary>
             <remarks>
             Morningstar DataId: 23326
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetUnrealizedGainLossInvestments">
             <summary>
             The aggregate increase (decrease) in the market value of unsold investments at the end of an accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23327
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.GrossNotesReceivable">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) within one year of the balance sheet date or the normal operating cycle. Such amount may include accrued
             interest receivable in accordance with the terms of the note. The note also may contain provisions including a discount or premium,
             payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among myriad other features and
             characteristics. This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23328
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherAssets">
             <summary>
             Other non-current assets that are not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23329
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherCapitalStock">
             <summary>
             Other Capital Stock that is not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23330
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherCurrentAssets">
             <summary>
             Other current assets that are not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23331
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherCurrentBorrowings">
             <summary>
             Short Term Borrowings that are not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23332
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherDeferredCosts">
             <summary>
             A cost that occurred in a transaction, but will not be expensed until a future accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23333
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherDeposits">
             <summary>
             Other deposits that are not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23334
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherEquityAdjustments">
             <summary>
             Other adjustments to stockholders' equity that is not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23335
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherInterestEarningAssets">
             <summary>
             Other investment assets that from which interest is earned, not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23336
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherInventories">
             <summary>
             Other non-current inventories not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23337
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherInvestedAssets">
             <summary>
             An item represents all the other investments or/and securities that cannot be defined into any category above. This item is typically
             available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23338
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherNonCurrentAssets">
             <summary>
             Other non-current assets that are not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23339
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherProperties">
             <summary>
             Other fixed assets not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23340
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherRealEstateOwned">
             <summary>
             The Carrying amount as of the balance sheet date of other real estate, which may include real estate investments, real estate loans
             that qualify as investments in real estate, and premises that are no longer used in operations may also be included in real estate
             owned. This does not include real estate assets taken in settlement of troubled loans through surrender or foreclosure.  This item is
             typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23341
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherReceivables">
             <summary>
             Other non-current receivables not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 23342
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Patents">
             <summary>
             A type of intangible asset, it provides an exclusive right to the patent holder to product or sell new inventions.
             </summary>
             <remarks>
             Morningstar DataId: 23343
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonCurrentPensionAndOtherPostretirementBenefitPlans">
             <summary>
             A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral.  This item is usually
             only available in the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23344
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PolicyLoans">
             <summary>
             A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral. This item is usually
             only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23345
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredStockEquity">
             <summary>
             A class of ownership in a company that has a higher claim on the assets and earnings than common stock. Preferred stock
             generally has a dividend that must be paid out before dividends to common stockholders and the shares usually do not have voting
             rights.
             </summary>
             <remarks>
             Morningstar DataId: 23347
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredStockOfSubsidiary">
             <summary>
             This is preferred stock of a subsidiary, which belongs to the company's equity. This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23348
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredStocksAvailableForSale">
             <summary>
             This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23349
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PrepaidReinsurancePremiums">
             <summary>
             The unexpired portion of premiums paid to another insurer as a result of reinsurance arrangement as of the balance sheet date. This
             item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23350
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.Properties">
             <summary>
             Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
             administrative purposes and that are expected to provide economic benefit for more than one year. This item is available for
             manufacturing, bank and transportation industries.
             </summary>
             <remarks>
             Morningstar DataId: 23351
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CurrentProvisions">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
             action or measure. Current provision is expired within one accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23352
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermProvisions">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
             action or measure. Long-term provision is expired beyond one accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23353
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PurchasedComponents">
             <summary>
             Individual parts purchased in order to complete a finished product.
             </summary>
             <remarks>
             Morningstar DataId: 23354
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RawMaterials">
             <summary>
             Carrying amount as of the balance sheet data of unprocessed items to be consumed in the manufacturing or production process.
             This item is available for manufacturing and mining industries.
             </summary>
             <remarks>
             Morningstar DataId: 23355
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RealEstateHeldForSale">
             <summary>
             Held real estate investments with the purpose of being sold.  This includes direct and indirect investments.  This item is usually only
             available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23356
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RealEstateAndRealEstateJointVenturesHeldForInvestment">
             <summary>
             The book value of investments in real estate joint ventures including direct and indirect investments.  This item is usually only
             available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23357
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReceivablesAdjustmentsAllowances">
             <summary>
             A provision relating to a written agreement to receive money at a specified future date(s) (within one year from the reporting date
             or the normal operating cycle, whichever is longer), consisting of principal as well as any accrued interest).
             </summary>
             <remarks>
             Morningstar DataId: 23358
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RegulatoryAssets">
             <summary>
             Carrying amount as of the balance sheet date of capitalized costs of regulated entities that are expected to be recovered through
             revenue sources over one year or beyond the normal operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23359
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RegulatoryLiabilities">
             <summary>
             The amount for the individual regulatory noncurrent liability as itemized in a table of regulatory noncurrent liabilities as of the end of
             the period. Such things as the costs of energy efficiency programs and low-income energy assistances programs and deferred fuel.
             This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23360
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceBalancesPayable">
             <summary>
             The carrying amount as of the balance sheet date of the known and estimated amounts owed to insurers under reinsurance
             treaties or other arrangements. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23361
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceReceivables">
             <summary>
             The sum for all reinsurance arrangements of the known and estimated amount receivable as of the balance sheet date from a given
             reinsurers for claims paid or incurred by the ceding insurer and associated claims settlement expenses for each reinsurance
             arrangement (or, the sum of all cases determined individually, likely applying different assumptions to each arrangement). This item
             is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23362
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceRecoverableForPaidLosses">
             <summary>
             The recoverable currently due from reinsurers for ceded paid losses. This item is usually only available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23363
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceRecoverableForUnpaidLosses">
             <summary>
             The recoverable currently due from reinsurers for unpaid losses. This item is usually only available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23364
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RestrictedCash">
             <summary>
             The carrying amounts of cash and cash equivalent items, which are restricted as to withdrawal or usage. Restrictions may include
             legally restricted deposits held as compensating balances against short-term borrowing arrangements, contracts entered into with
             others, or entity statements of intention with regard to particular deposits; however, time deposits and short-term certificates of
             deposit are not generally included in legally restricted deposits. Excludes compensating balance arrangements that are not
             agreements, which legally restrict the use of cash amounts shown on the balance sheet. For a classified balance sheet, represents
             the current portion only (the non-current portion has a separate concept); for an unclassified balance sheet represents the entire
             amount. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 23365
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RestrictedCashAndCashEquivalents">
             <summary>
             The carrying amounts of cash and cash equivalent items which are restricted as to withdrawal or usage. This item is available for
             bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 23366
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RestrictedCashAndInvestments">
             <summary>
             The cash and investments whose use in whole or in part is restricted for the long-term, generally by contractual agreements or
             regulatory requirements. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23367
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RestrictedCommonStock">
             <summary>
             Shares of stock for which sale is contractually or governmentally restricted for a given period of time. Stock that is acquired through
             an employee stock option plan or other private means may not be transferred. Restricted stock must be traded in compliance with
             special SEC regulations.
             </summary>
             <remarks>
             Morningstar DataId: 23368
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RestrictedInvestments">
             <summary>
             Investments whose use is restricted in whole or in part, generally by contractual agreements or regulatory requirements. This item
             is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23369
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecuritiesLendingPayable">
             <summary>
             The amount payable for lending securities.  This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 23370
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.StudentLoan">
             <summary>
             Loans made, insured, or guaranteed under any program authorized by the Higher Education Act. This loan is used for education
             purposes. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23371
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TaxesReceivable">
             <summary>
             Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
             balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes. This item is
             usually not available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23372
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TimeDepositsPlaced">
             <summary>
             In balance sheet, it means the aggregate amount of time deposits, including certificates of deposits, individual retirement accounts
             and open accounts. In income statement, it represents interest earned on deposits that have to stay in the bank for a certain period
             of time before they can be collected without sustaining a penalty. Usually includes certificates of deposits, individual retirement
             accounts and open accounts. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23373
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalCapitalization">
             <summary>
             Stockholder's Equity plus Long Term Debt.
             </summary>
             <remarks>
             Morningstar DataId: 23374
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalDeferredCreditsAndOtherNonCurrentLiabilities">
             <summary>
             Revenue received by a firm but not yet reported as income.  This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23375
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnbilledReceivables">
             <summary>
             Revenues that are not currently billed from the customer under the terms of the contract.  This item is usually only available for
             utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23376
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnrealizedGainLoss">
             <summary>
             A profit or loss that results from holding onto an asset rather than cashing it in and officially taking the profit or loss.
             </summary>
             <remarks>
             Morningstar DataId: 23377
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.WorkInProcess">
             <summary>
             Work, or goods, in the process of being fabricated or manufactured but not yet completed as finished goods. This item is usually
             available for manufacturing and mining industries.
             </summary>
             <remarks>
             Morningstar DataId: 23378
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherNonCurrentLiabilities">
             <summary>
             This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 23379
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CapitalLeaseObligations">
             <summary>
             Current Portion of Capital Lease Obligation plus Long Term Portion of Capital Lease Obligation.
             </summary>
             <remarks>
             Morningstar DataId: 23380
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherLiabilities">
             <summary>
             This item is available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 23381
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherPayable">
             <summary>
             Payables and Accrued Expenses that are not defined as Trade, Tax or Dividends related.
             </summary>
             <remarks>
             Morningstar DataId: 23382
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TangibleBookValue">
             <summary>
             The company's total book value less the value of any intangible assets.
             Methodology: Common Stock Equity minus Goodwill and Other Intangible Assets
             </summary>
             <remarks>
             Morningstar DataId: 23383
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalEquity">
             <summary>
             Total Equity equals Stockholder's Equity+ minority interest.
             </summary>
             <remarks>
             Morningstar DataId: 23384
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.WorkingCapital">
             <summary>
             Current Assets minus Current Liabilities.  This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 23385
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalDebt">
             <summary>
             All borrowings incurred by the company including debt and capital lease obligations.
             </summary>
             <remarks>
             Morningstar DataId: 23386
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashValueOfLifeInsurance">
             <summary>
             The carrying amount as of the balance sheet date of amounts, which could be received based on the terms of the insurance
             contract upon surrendering life policies owned by the company. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 23387
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CommonUtilityPlant">
             <summary>
             The amount for the other plant related to the utility industry fix assets.
             </summary>
             <remarks>
             Morningstar DataId: 23388
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ElectricUtilityPlant">
             <summary>
             The amount for the electric plant related to the utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23389
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NaturalGasFuelAndOther">
             <summary>
             The amount for the natural gas, fuel and other items related to the utility industry, which might include oil and gas wells, the
             properties to exploit oil and gas or liquefied natural gas sites.
             </summary>
             <remarks>
             Morningstar DataId: 23390
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetUtilityPlant">
             <summary>
             Net utility plant might include water production, electric utility plan, natural gas, fuel and other, common utility plant and
             accumulated depreciation. This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23391
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.WaterProduction">
             <summary>
             The amount for a facility and plant that provides water which might include wells, reservoirs, pumping stations, and control
             facilities; and waste water systems which includes the waste treatment and disposal facility and equipment. This item is usually
             only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 23392
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OrdinarySharesNumber">
             <summary>
             Number of Common or Ordinary Shares.
             </summary>
             <remarks>
             Morningstar DataId: 23393
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreferredSharesNumber">
             <summary>
             Number of Preferred Shares.
             </summary>
             <remarks>
             Morningstar DataId: 23394
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TreasurySharesNumber">
             <summary>
             Number of Treasury Shares.
             </summary>
             <remarks>
             Morningstar DataId: 23395
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradingAndOtherReceivable">
             <summary>
             This will serve as the "parent" value to AccountsReceivable (DataId 23001) and OtherReceivables (DataId 23342) for all company
             financials reported in the IFRS GAAP.
             </summary>
             <remarks>
             Morningstar DataId: 23399
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.EquityAttributableToOwnersOfParent">
             <summary>
             This item applies only to Non-US companies. It refers to the residual interest in the assets of the enterprise that remains after
             deducting its liabilities and minority interest.
             </summary>
             <remarks>
             Morningstar DataId: 23400
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SecuritiesLoaned">
             <summary>
             The carrying value as of the balance sheet date of securities loaned to other broker dealers, typically used by such parties to cover
             short sales, secured by cash or other securities furnished by such parties until the borrowing is closed.
             </summary>
             <remarks>
             Morningstar DataId: 23401
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ParticipatingPolicyholderEquity">
             <summary>
             The sum of money an insurance company will pay to the policyholder or annuity holder in the event his or her policy is voluntarily
             terminated before its maturity or the insured event occurs.
             </summary>
             <remarks>
             Morningstar DataId: 23402
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetTangibleAssets">
             <summary>
             Net assets in physical form. This is calculated using Stockholders' Equity less Intangible Assets (including Goodwill).
             </summary>
             <remarks>
             Morningstar DataId: 23403
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DuefromRelatedPartiesCurrent">
             <summary>
             Amounts owed to the company from a non-arm's length entity, due within the company's current operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23404
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DuefromRelatedPartiesNonCurrent">
             <summary>
             Amounts owed to the company from a non-arm's length entity, due after the company's current operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23405
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DuetoRelatedParties">
             <summary>
             Amounts owed by the company to a non-arm's length entity.
             </summary>
             <remarks>
             Morningstar DataId: 23406
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DuetoRelatedPartiesCurrent">
             <summary>
             Amounts owed by the company to a non-arm's length entity that has to be repaid within the company's current operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23407
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DuetoRelatedPartiesNonCurrent">
             <summary>
             Amounts owed by the company to a non-arm's length entity that has to be repaid after the company's current operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23408
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetAssets">
             <summary>
             Total assets less total liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 23409
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentProperties">
             <summary>
             Company's investments in properties net of accumulated depreciation, which generate a return.
             </summary>
             <remarks>
             Morningstar DataId: 23410
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsinSubsidiariesatCost">
             <summary>
             A stake in any company which is more than 51%.
             </summary>
             <remarks>
             Morningstar DataId: 23411
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsinAssociatesatCost">
             <summary>
             A stake in any company which is more than 20% but less than 50%.
             </summary>
             <remarks>
             Morningstar DataId: 23412
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentsinJointVenturesatCost">
             <summary>
             A 50% stake in any company in which remaining 50% belongs to other company.
             </summary>
             <remarks>
             Morningstar DataId: 23413
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentinFinancialAssets">
             <summary>
             Represents the sum of all financial investments (trading securities, available-for-sale securities, held-to-maturity securities, etc.)
             </summary>
             <remarks>
             Morningstar DataId: 23414
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinanceLeaseReceivables">
             <summary>
             Accounts owed to the bank in relation to capital leases. Capital/ finance lease obligation are contractual obligations that arise from
             obtaining the use of property or equipment via a capital lease contract.
             </summary>
             <remarks>
             Morningstar DataId: 23415
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConvertibleLoansCurrent">
             <summary>
             This represents loans that entitle the lender (or the holder of loan debenture) to convert the loan to common or preferred stock
             (ordinary or preference shares) within the next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23418
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankLoansCurrent">
             <summary>
             A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time within the next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23419
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherLoansCurrent">
             <summary>
             Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due within the
             next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23420
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedandDeferredIncome">
             <summary>
             Sum of accrued liabilities and deferred income (amount received in advance but the services are not provided in respect of
             amount).
             </summary>
             <remarks>
             Morningstar DataId: 23422
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankLoansNonCurrent">
             <summary>
             A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time beyond the current accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23426
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherLoansNonCurrent">
             <summary>
             Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due beyond the
             current operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23427
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherReserves">
             <summary>
             Other reserves owned by the company that cannot be identified by other specific items in the Reserves section.
             </summary>
             <remarks>
             Morningstar DataId: 23430
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoansandAdvancestoBank">
             <summary>
             The aggregate amount of loans and advances made to a bank or financial institution.
             </summary>
             <remarks>
             Morningstar DataId: 23432
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoansandAdvancestoCustomer">
             <summary>
             The aggregate amount of loans and advances made to customers.
             </summary>
             <remarks>
             Morningstar DataId: 23433
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TreasuryBillsandOtherEligibleBills">
             <summary>
             Investments backed by the central government, it usually carries less risk than other investments.
             </summary>
             <remarks>
             Morningstar DataId: 23434
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.EquitySharesInvestments">
             <summary>
             Investments in shares of a company representing ownership in that company.
             </summary>
             <remarks>
             Morningstar DataId: 23435
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DepositsbyBank">
             <summary>
             Banks investment in the ongoing entity.
             </summary>
             <remarks>
             Morningstar DataId: 23436
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CustomerAccounts">
             <summary>
             Carrying value of amounts transferred by customers to third parties for security purposes that are expected to be returned or
             applied towards payment after one year or beyond the operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 23437
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ItemsinTheCourseofTransmissiontoOtherBanks">
             <summary>
             Carrying amount as of the balance sheet date of drafts and bills of exchange that have been accepted by the reporting bank or by
             others for its own account, as its liability to holders of the drafts.
             </summary>
             <remarks>
             Morningstar DataId: 23438
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradingandFinancialLiabilities">
             <summary>
             Total carrying amount of total trading, financial liabilities and debt in a non-differentiated balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23439
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DebtSecuritiesinIssue">
             <summary>
             Any debt financial instrument issued instead of cash loan.
             </summary>
             <remarks>
             Morningstar DataId: 23440
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.SubordinatedLiabilities">
             <summary>
             The total carrying value of securities loaned to other broker dealers, typically used by such parties to cover short sales, secured by
             cash or other securities furnished by such parties until the borrowing is closed; in a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23441
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ProvisionsTotal">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document, which is a preparatory
             action or measure. Current provision is expired within one accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 23443
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OperatingLeaseAssets">
             <summary>
             A contract that allows for the use of an asset, but does not convey rights of ownership of the asset. An operating lease is not
             capitalized; it is accounted for as a rental expense in what is known as "off balance sheet financing." For the lessor, the asset being
             leased is accounted for as an asset and is depreciated as such.
             </summary>
             <remarks>
             Morningstar DataId: 23444
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ClaimsOutstanding">
             <summary>
             Amounts owing to policy holders who have filed claims but have not yet been settled or paid.
             </summary>
             <remarks>
             Morningstar DataId: 23445
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LongTermContracts">
             <summary>
             A supply contract in the physical market covering energy deliveries of more than 18 months, accounted for as part of Inventories.
             </summary>
             <remarks>
             Morningstar DataId: 23447
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.RealEstate">
             <summary>
             Land and buildings which are held as inventory, normally by real estate companies or income trusts.
             </summary>
             <remarks>
             Morningstar DataId: 23448
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PaymentofBills">
             <summary>
             A bill or invoice is a document requesting payment for an order previously supplied.
             </summary>
             <remarks>
             Morningstar DataId: 23451
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LiabilitiesHeldforSaleCurrent">
             <summary>
             Liabilities due within the next 12 months related from an asset classified as Held for Sale.
             </summary>
             <remarks>
             Morningstar DataId: 23452
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LiabilitiesHeldforSaleNonCurrent">
             <summary>
             Liabilities related to an asset classified as held for sale excluding the portion due the next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23453
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnclassifiedCurrentAssets">
             <summary>
             Other current assets owned by the company that cannot be identified by other specific items in the Current Assets section.
             </summary>
             <remarks>
             Morningstar DataId: 23454
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DebtSecurities">
             <summary>
             Debt securities held as investments.
             </summary>
             <remarks>
             Morningstar DataId: 23455
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TotalFinancialLeaseObligations">
             <summary>
             Represents the total amount of long-term capital leases that must be paid within the next accounting period for a Non-
             Differentiated Balance Sheet. Capital lease obligations are contractual obligations that arise from obtaining the use of property or
             equipment via a capital lease contract.
             </summary>
             <remarks>
             Morningstar DataId: 23456
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedandDeferredIncomeCurrent">
             <summary>
             Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
             amount) due within 1 year.
             </summary>
             <remarks>
             Morningstar DataId: 23457
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedandDeferredIncomeNonCurrent">
             <summary>
             Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
             amount) due after 1 year.
             </summary>
             <remarks>
             Morningstar DataId: 23458
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinanceLeaseReceivablesCurrent">
             <summary>
             Accounts owed to the bank in relation to capital leases to be received within the next accounting period. Capital/ finance lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
             <remarks>
             Morningstar DataId: 23459
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinanceLeaseReceivablesNonCurrent">
             <summary>
             Accounts owed to the bank in relation to capital leases to be received beyond the next accounting period. Capital/ finance lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
             <remarks>
             Morningstar DataId: 23460
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialLiabilitiesCurrent">
             <summary>
             Financial related liabilities due within one year, including short term and current portions of long-term debt, capital leases and
             derivative liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 23462
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialLiabilitiesNonCurrent">
             <summary>
             Financial related liabilities due beyond one year, including long term debt, capital leases and derivative liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 23463
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotal">
             <summary>
             Financial assets that are held at fair value through profit or loss comprise assets held for trading and those financial assets
             designated as being held at fair value through profit or loss.
             </summary>
             <remarks>
             Morningstar DataId: 23466
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TaxesAssetsCurrent">
             <summary>
             Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
             balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes, and current
             deferred tax assets.
             </summary>
             <remarks>
             Morningstar DataId: 23468
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherEquityInterest">
             <summary>
             Other equity instruments issued by the company that cannot be identified by other specific items in the Equity section.
             </summary>
             <remarks>
             Morningstar DataId: 23469
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestBearingBorrowingsNonCurrent">
             <summary>
             Carrying amount of any interest-bearing loan which is due after one year.
             </summary>
             <remarks>
             Morningstar DataId: 23470
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonInterestBearingBorrowingsNonCurrent">
             <summary>
             Non-interest bearing borrowings due after a year.
             </summary>
             <remarks>
             Morningstar DataId: 23471
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradeandOtherPayablesNonCurrent">
             <summary>
             Sum of all non-current payables and accrued expenses.
             </summary>
             <remarks>
             Morningstar DataId: 23472
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestBearingBorrowingsCurrent">
             <summary>
             Carrying amount of any interest-bearing loan.
             </summary>
             <remarks>
             Morningstar DataId: 23473
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonInterestBearingBorrowingsCurrent">
             <summary>
             Non-interest bearing deposits in other financial institutions for short periods of time, usually less than 12 months.
             </summary>
             <remarks>
             Morningstar DataId: 23474
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PensionandOtherPostRetirementBenefitPlansCurrent">
             <summary>
             Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
             to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits.
             </summary>
             <remarks>
             Morningstar DataId: 23475
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashandBalanceswithCentralBanks">
             <summary>
             The sum of cash and cash equivalents plus Federal Funds Sold. Including cash, petty cash/revolving funds/demand deposits with
             central banks and other kinds of accounts that have the general characteristics of demand deposits.
             </summary>
             <remarks>
             Morningstar DataId: 23476
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PlacementwithBanksandOtherFinancialInstitutions">
             <summary>
             Deposit accounts and placements that are deposited in a bank or other financial institution.
             </summary>
             <remarks>
             Morningstar DataId: 23477
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherLoanAssets">
             <summary>
             Reflects the carrying amount of any other unpaid loans, an asset of the bank.
             </summary>
             <remarks>
             Morningstar DataId: 23478
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingAssetsTotal">
             <summary>
             An investment that is used to reduce the risk of adverse price movements in an asset, in a Non-Differentiated Balance Sheet.
             Normally, a hedge consists of taking an offsetting position in a related security, such as a futures contract.
             </summary>
             <remarks>
             Morningstar DataId: 23479
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotal">
             <summary>
             Total value collateral assets pledged to the bank that can be sold or used as collateral for other loans.
             </summary>
             <remarks>
             Morningstar DataId: 23480
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TaxAssetsTotal">
             <summary>
             Sum of total tax assets in a Non-Differentiated Balance Sheet, includes Tax Receivables and Deferred Tax Assets.
             </summary>
             <remarks>
             Morningstar DataId: 23481
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AdvancesfromCentralBanks">
             <summary>
             Borrowings from the central bank, which are primarily used to cover shortages in the required reserve balance and liquidity
             shortages.
             </summary>
             <remarks>
             Morningstar DataId: 23482
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CertificatesofDepositsandOtherDebtSecuritiesIssued">
             <summary>
             The carrying value as of the balance sheet date of all interest bearing promissory notes and certificates issued by a financial
             institution.
             </summary>
             <remarks>
             Morningstar DataId: 23483
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DepositCertificates">
             <summary>
             A savings certificate entitling the bearer to receive interest. A CD bears a maturity date, a specified fixed interest rate and can be
             issued in any denomination.
             </summary>
             <remarks>
             Morningstar DataId: 23484
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DebenturesandDebtCertificates">
             <summary>
             Instruments that are not secured by any collateral and are backed only by the creditworthiness and reputation of the financial
             institution.  Debentures and debt certificates usually have terms last longer than a year.
             </summary>
             <remarks>
             Morningstar DataId: 23485
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InterestBearingBorrowingsTotal">
             <summary>
             Carrying amount of total borrowings on which enterprise paid the interest; on a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23486
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NonInterestBearingBorrowingsTotal">
             <summary>
             Non-interest bearing deposits in other financial institutions for relatively short periods of time; on a Non-Differentiated Balance
             Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23487
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherBorrowedFunds">
             <summary>
             Other borrowings by the bank to fund its activities that cannot be identified by other specific items in the Liabilities section.
             </summary>
             <remarks>
             Morningstar DataId: 23488
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotal">
             <summary>
             Financial liabilities that are held at fair value through profit or loss.
             </summary>
             <remarks>
             Morningstar DataId: 23490
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialLiabilitiesMeasuredatAmortizedCostTotal">
             <summary>
             Financial liabilities carried at amortized cost.
             </summary>
             <remarks>
             Morningstar DataId: 23491
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoanCapital">
             <summary>
             Subordinated loan capital to be repaid at a later date on a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23492
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingLiabilitiesTotal">
             <summary>
             A liability derived from hedging instruments on a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23493
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRisk">
             <summary>
             Liabilities recognized on hedge.
             </summary>
             <remarks>
             Morningstar DataId: 23494
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AccruedLiabilitiesTotal">
             <summary>
             Liabilities which have occurred, but have not been paid or logged under accounts payable during an accounting period. In other
             words, obligations for goods and services provided to a company for which invoices have not yet been received; on a Non-
             Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23495
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredIncomeTotal">
             <summary>
             Collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized on a Non-
             Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23496
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredTaxLiabilitiesTotal">
             <summary>
             A future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and their tax
             value or timing differences between the recognition of gains and losses in financial statements, on a Non-Differentiated Balance
             Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23497
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceAssets">
             <summary>
             Reinsurance asset is insurance that is purchased by an insurance company from another insurance company.
             </summary>
             <remarks>
             Morningstar DataId: 23499
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceShareofInsuranceContract">
             <summary>
             Accumulated share of insurance contract of reinsurance.
             </summary>
             <remarks>
             Morningstar DataId: 23500
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ReinsuranceShareofAccruedPolicyholderClaims">
             <summary>
             Accrued claims with reinsurance companies.
             </summary>
             <remarks>
             Morningstar DataId: 23501
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DepositsMadeunderAssumedReinsuranceContract">
             <summary>
             Deposits made under reinsurance.
             </summary>
             <remarks>
             Morningstar DataId: 23502
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsuranceContractAssets">
             <summary>
             A contract under which one party (the insurer) accepts significant insurance risk from another party (the policyholder) by agreeing
             to compensate the policyholder if a specified uncertain future event (the insured event) adversely affects the policyholder. This
             includes Insurance Receivables and Premiums Receivables.
             </summary>
             <remarks>
             Morningstar DataId: 23503
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsuranceReceivables">
             <summary>
             Receivables from policyholders, agencies, and other operating parties in insurance companies, but excludes receivables from
             reinsurers.
             </summary>
             <remarks>
             Morningstar DataId: 23504
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsuranceContractLiabilities">
             <summary>
             Any type of insurance policy that protects an individual or business from the risk that they may be sued and held legally liable for
             something such as malpractice, injury or negligence. Liability insurance policies cover both legal costs and any legal payouts for
             which the insured would be responsible if found legally liable. Intentional damage and contractual liabilities are typically not covered
             in these types of policies.
             </summary>
             <remarks>
             Morningstar DataId: 23505
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsurancePayables">
             <summary>
             The carrying amount as of the balance sheet date of the known and estimated amounts owed to parties under insurance policies or
             other arrangements.
             </summary>
             <remarks>
             Morningstar DataId: 23506
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DepositsReceivedunderCededInsuranceContract">
             <summary>
             Deposit received through ceded insurance contract.
             </summary>
             <remarks>
             Morningstar DataId: 23508
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InvestmentContractLiabilities">
             <summary>
             Liabilities due on the insurance investment contract.
             </summary>
             <remarks>
             Morningstar DataId: 23509
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConstructionGrants">
             <summary>
             Government grants awarded to the company for its construction projects. They are capitalized by the company as part of the
             Property, Plant and Equipment.
             </summary>
             <remarks>
             Morningstar DataId: 23511
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DeferredCostCurrent">
             <summary>
             Payments that will be assigned as expenses with one accounting period, but that are paid in advance and temporarily set up as
             current assets on the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23514
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PensionAndOtherPostretirementBenefitPlansTotal">
             <summary>
             Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
             to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits. Used to reflect the
             current portion of the liabilities (due within one year or within the normal operating cycle if longer).
             </summary>
             <remarks>
             Morningstar DataId: 23515
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LiabilitiesHeldforSaleTotal">
             <summary>
             Liabilities related to an asset classified as held for sale.
             </summary>
             <remarks>
             Morningstar DataId: 23516
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingAssetsNonCurrent">
             <summary>
             An asset that is used to reduce the risk of adverse price movements in another asset.
             </summary>
             <remarks>
             Morningstar DataId: 23517
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingAssetsCurrent">
             <summary>
             A security transaction which expires within a 12 month period that reduces the risk on an existing investment position.
             </summary>
             <remarks>
             Morningstar DataId: 23518
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConvertibleLoansTotal">
             <summary>
             Loans that entitles the lender (or the holder of loan debenture) to convert the loan to common or preferred stock (ordinary or
             preference shares) at a specified rate conversion rate and a specified time frame; in a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23519
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BankLoansTotal">
             <summary>
             Total debt financing obligation issued by a bank or similar financial institution to a company that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time; in a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23520
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherLoansTotal">
             <summary>
             Total other loans between the customer and bank which cannot be identified by other specific items in the Debt section; in a Non-
             Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23521
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingLiabilitiesNonCurrent">
             <summary>
             A liability derived from hedging instruments. The amount due is outside of the next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23522
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.HedgingLiabilitiesCurrent">
             <summary>
             A liability derived from hedging instruments. The amount is due within the next 12 months or operating cycle.
             </summary>
             <remarks>
             Morningstar DataId: 23523
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsuranceFundsNonCurrent">
             <summary>
             Liabilities related to insurance funds that are dissolved after one year.
             </summary>
             <remarks>
             Morningstar DataId: 23524
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.InsuranceFundsCurrent">
             <summary>
             Liabilities related to insurance funds that are dissolved within the year.
             </summary>
             <remarks>
             Morningstar DataId: 23525
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DebtTotal">
             <summary>
             The total aggregate of all written promises and/or agreements to repay a stated amount of borrowed funds at a specified date in
             the future; in a Non-Differentiated Balance Sheet.
             </summary>
             <remarks>
             Morningstar DataId: 23528
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ComTreShaNum">
             <summary>
             The treasury stock number of common shares. This represents the number of common shares owned by the company as a result of
             share repurchase programs or donations.
             </summary>
             <remarks>
             Morningstar DataId: 23529
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.PreTreShaNum">
             <summary>
             The treasury stock number of preferred shares. This represents the number of preferred shares owned by the company as a result
             of share repurchase programs or donations.
             </summary>
             <remarks>
             Morningstar DataId: 23530
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.NetDebt">
             <summary>
             This is a metric that shows a company's overall debt situation by netting the value of a company's liabilities and
             debts with its cash and other similar liquid assets. It is calculated using [Current Debt] + [Long Term Debt] - [Cash and Cash
             Equivalents].
             </summary>
             <remarks>
             Morningstar DataId: 23531
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ShareIssued">
             <summary>
             The number of authorized shares that is sold to and held by the shareholders of a company, regardless of whether they are insiders,
             institutional investors or the general public. Unlike shares that are held as treasury stock, shares that have been retired are not
             included in this figure. The amount of issued shares can be all or part of the total amount of authorized shares of a corporation.
             </summary>
             <remarks>
             Morningstar DataId: 23532
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AssetsHeldForSaleCurrent">
             <summary>
             Short term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
             costs to sell.
             </summary>
             <remarks>
             Morningstar DataId: 23533
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.AssetsHeldForSaleNonCurrent">
             <summary>
             Long term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
             costs to sell.
             </summary>
             <remarks>
             Morningstar DataId: 23534
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BiologicalAssets">
             <summary>
             Biological assets include plants and animals.
             </summary>
             <remarks>
             Morningstar DataId: 23535
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CashRestrictedOrPledged">
             <summary>
             Cash that the company can use only for specific purposes or cash deposit or placing of owned property by a debtor (the pledger) to
             a creditor (the pledgee) as a security for a loan or obligation.
             </summary>
             <remarks>
             Morningstar DataId: 23536
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.ConvertibleLoansNonCurrent">
             <summary>
             A long term loan with a warrant attached that gives the debt holder the option to exchange all or a portion of the loan principal for
             an equity position in the company at a predetermined rate of conversion within a specified period of time.
             </summary>
             <remarks>
             Morningstar DataId: 23537
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.FinancialOrDerivativeInvestmentCurrentLiabilities">
             <summary>
             Financial instruments that are linked to a specific financial instrument or indicator or commodity, and through which specific
             financial risks can be traded in financial markets in their own right, such as financial options, futures, forwards, etc.
             </summary>
             <remarks>
             Morningstar DataId: 23538
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.LoanAndLoanReceivables">
             <summary>
             An asset account in a bank's general ledger that indicates the amounts owed by borrowers to the bank as of a given date.
             </summary>
             <remarks>
             Morningstar DataId: 23539
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.OtherInvestments">
             <summary>
             Investments that are neither Investment in Financial Assets nor Long term equity investment, not expected to be cashed within a
             year.
             </summary>
             <remarks>
             Morningstar DataId: 23540
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TradeAndOtherReceivablesNonCurrent">
             <summary>
             Amounts due from customers or clients, more than one year from the balance sheet date, for goods or services that have been
             delivered or sold in the normal course of business, or other receivables.
             </summary>
             <remarks>
             Morningstar DataId: 23541
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.BSFileDate">
             <summary>
             Filing date of the Balance Sheet
             </summary>
             <remarks>
             Morningstar DataId: 23542
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.DueFromRelatedParties">
             <summary>
             For an unclassified balance sheet, carrying amount as of the balance sheet date of obligations due all related parties.
             </summary>
             <remarks>
             Morningstar DataId: 23543
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.TrustPreferredSecurities">
             <summary>
             Preferred security issued by a trust created by the company, that is treated as a long-term liability.
             </summary>
             <remarks>
             Morningstar DataId: 23544
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.CooperativesShareCapitalRepayableonDemand">
             <summary>
             </summary>
             <remarks>
             Morningstar DataId: 23545
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BalanceSheet.UnallocatedSurplus">
             <summary>
             </summary>
             <remarks>
             Morningstar DataId: 23546
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BalanceSheet.#ctor">
             <summary>
             Creates an instance of the BalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BalanceSheet.UpdateValues(QuantConnect.Data.Fundamental.BalanceSheet)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowStatement">
             <summary>
             Definition of the CashFlowStatement class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.Amortization">
             <summary>
             The systematic and rational apportionment of the acquisition cost of intangible operational assets to future periods in which the benefits
             contribute to revenue. This field is to include Amortization and any variation where Amortization is the first account listed in the line item,
             excluding Amortization of Intangibles.
             </summary>
             <remarks>
             Morningstar DataId: 26000
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CallsMaturitiesOfMaturitySecurities">
             <summary>
             The aggregate amount of cash flow from securities calls, maturities, and redemption.
             </summary>
             <remarks>
             Morningstar DataId: 26004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CapitalExpenditure">
             <summary>
             Funds used by a company to acquire or upgrade physical assets such as property, industrial buildings or equipment. This
             type of outlay is made by companies to maintain or increase the scope of their operations. Capital expenditures are generally
             depreciated or depleted over their useful life, as distinguished from repairs, which are subtracted from the income of the current
             year.
             </summary>
             <remarks>
             Morningstar DataId: 26005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetCapitalExpenditureDisposals">
             <summary>
             Funds used to (collect from) acquire or upgrade (disposal) physical assets such as property, industrial buildings or equipment.
             Refers to only those transactions which are specifically a capital expenditure or disposal.
             </summary>
             <remarks>
             Morningstar DataId: 26006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashDividendsPaid">
             <summary>
             Payments for the cash dividends declared by an entity to shareholders during the period. This element includes paid and unpaid
             dividends declared during the period for both common and preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 26007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFlowFromContinuingFinancingActivities">
             <summary>
             Cash generated by or used in financing activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 26008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFlowFromContinuingInvestingActivities">
             <summary>
             Cash generated by or used in investing activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 26009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFlowFromContinuingOperatingActivities">
             <summary>
             Cash generated by or used in operating activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 26010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFlowFromDiscontinuedOperation">
             <summary>
             The aggregate amount of cash flow from discontinued operation, including operating activities, investing activities, and financing
             activities.
             </summary>
             <remarks>
             Morningstar DataId: 26011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.FinancingCashFlow">
             <summary>
             The net cash inflow (outflow) from financing activity for the period, which involve changes to the long-term liabilities and
             stockholders' equity.
             </summary>
             <remarks>
             Morningstar DataId: 26012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InvestingCashFlow">
             <summary>
             An item on the cash flow statement that reports the aggregate change in a company's cash position resulting from any gains (or
             losses) from investments in the financial markets and operating subsidiaries, and changes resulting from amounts spent on
             investments in capital assets such as plant and equipment.
             </summary>
             <remarks>
             Morningstar DataId: 26013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OperatingCashFlow">
             <summary>
             The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity.
             Operating activities include all transactions and events that are not defined as investing or financing activities. Operating activities
             generally involve producing and delivering goods and providing services. Cash flows from operating activities are generally the cash
             effects of transactions and other events that enter into the determination of net income.
             </summary>
             <remarks>
             Morningstar DataId: 26014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.BeginningCashPosition">
             <summary>
             The cash and equivalents balance at the beginning of the accounting period, as indicated on the Cash Flow statement.
             </summary>
             <remarks>
             Morningstar DataId: 26015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.EndCashPosition">
             <summary>
             The cash and cash equivalents balance at the end of the accounting period, as indicated on the Cash Flow statement. It is equal to
             the Beginning Cash and Equivalents, plus the Net Change in Cash and Equivalents.
             </summary>
             <remarks>
             Morningstar DataId: 26016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedFinancing">
             <summary>
             Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
             </summary>
             <remarks>
             Morningstar DataId: 26017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedFinancingActivities">
             <summary>
             Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
             </summary>
             <remarks>
             Morningstar DataId: 26018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedInvesting">
             <summary>
             The net cash inflow (outflow) from discontinued investing activities over the designated time period.
             </summary>
             <remarks>
             Morningstar DataId: 26019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedInvestingActivities">
             <summary>
             The net cash inflow (outflow) from discontinued investing activities over the designated time period.
             </summary>
             <remarks>
             Morningstar DataId: 26020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedOperating">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
             <remarks>
             Morningstar DataId: 26021
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInAccountPayable">
             <summary>
             The increase or decrease between periods of the account payables.
             </summary>
             <remarks>
             Morningstar DataId: 26022
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInTaxPayable">
             <summary>
             The increase or decrease between periods of the tax payables.
             </summary>
             <remarks>
             Morningstar DataId: 26024
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInAccruedExpense">
             <summary>
             The increase or decrease between periods of the accrued expenses.
             </summary>
             <remarks>
             Morningstar DataId: 26025
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInAccruedInvestmentIncome">
             <summary>
             The net change during the reporting period in investment income that has been earned but not yet received in cash.
             </summary>
             <remarks>
             Morningstar DataId: 26026
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangesInCash">
             <summary>
             The net change between the beginning and ending balance of cash and cash equivalents.
             </summary>
             <remarks>
             Morningstar DataId: 26027
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInDeferredAcquisitionCosts">
             <summary>
             The change of the unamortized portion as of the balance sheet date of capitalized costs that vary with and are primarily related to
             the acquisition of new and renewal insurance contracts.
             </summary>
             <remarks>
             Morningstar DataId: 26028
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInFederalFundsAndSecuritiesSoldForRepurchase">
             <summary>
             The amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from another bank to
             meet its reserve requirements and the amount of securities that an institution sells and agrees to repurchase at a specified date for
             a specified price, net of any reductions or offsets.
             </summary>
             <remarks>
             Morningstar DataId: 26030
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInFundsWithheld">
             <summary>
             The net change during the reporting period associated with funds withheld.
             </summary>
             <remarks>
             Morningstar DataId: 26031
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInIncomeTaxPayable">
             <summary>
             The increase or decrease between periods of the income tax payables.
             </summary>
             <remarks>
             Morningstar DataId: 26032
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInInterestPayable">
             <summary>
             The increase or decrease between periods of the interest payable. Interest payable means carrying value as of the balance sheet
             date of interest payable on all forms of debt.
             </summary>
             <remarks>
             Morningstar DataId: 26033
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInInventory">
             <summary>
             The increase or decrease between periods of the Inventories. Inventories represent merchandise bought for resale and supplies and
             raw materials purchased for use in revenue producing operations.
             </summary>
             <remarks>
             Morningstar DataId: 26034
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInLoans">
             <summary>
             The net change that a lender gives money or property to a borrower and the borrower agrees to return the property or repay the
             borrowed money, along with interest, at a predetermined date in the future.
             </summary>
             <remarks>
             Morningstar DataId: 26035
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInLossAndLossAdjustmentExpenseReserves">
             <summary>
             The net change during the reporting period in the reserve account established to account for expected but unspecified losses.
             </summary>
             <remarks>
             Morningstar DataId: 26036
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInPayable">
             <summary>
             The increase or decrease between periods of the payables.
             </summary>
             <remarks>
             Morningstar DataId: 26040
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInPayablesAndAccruedExpense">
             <summary>
             The increase or decrease between periods of the payables and accrued expenses. Accrued expenses represent expenses incurred
             at the end of the reporting period but not yet paid; also called accrued liabilities. The accrued liability is shown under current
             liabilities in the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 26041
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInPremiumsReceivable">
             <summary>
             The increase or decrease between periods of the premium receivables.
             </summary>
             <remarks>
             Morningstar DataId: 26042
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInPrepaidAssets">
             <summary>
             The increase or decrease between periods of the prepaid assets.
             </summary>
             <remarks>
             Morningstar DataId: 26043
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInReceivables">
             <summary>
             The increase or decrease between periods of the receivables. Receivables are amounts due to be paid to the company from clients
             and other.
             </summary>
             <remarks>
             Morningstar DataId: 26045
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLosses">
             <summary>
             The net change during the reporting period in the amount of benefits the ceding insurer expects to recover on insurance policies
             ceded to other insurance entities as of the balance sheet date for all guaranteed benefit types.
             </summary>
             <remarks>
             Morningstar DataId: 26047
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInRestrictedCash">
             <summary>
             The net cash inflow (outflow) for the net change associated with funds that are not available for withdrawal or use (such as funds
             held in escrow).
             </summary>
             <remarks>
             Morningstar DataId: 26049
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInTradingAccountSecurities">
             <summary>
             The net change during the reporting period associated with trading account assets. Trading account assets are bought and held
             principally for the purpose of selling them in the near term (thus held for only a short period of time). Unrealized holding gains and
             losses for trading securities are included in earnings.
             </summary>
             <remarks>
             Morningstar DataId: 26050
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInWorkingCapital">
             <summary>
             The increase or decrease between periods of the working capital.  Working Capital is the amount left to the company to finance
             operations and expansion after current liabilities have been covered.
             </summary>
             <remarks>
             Morningstar DataId: 26053
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CumulativeEffectOfAccountingChange">
             <summary>
             The effect on net income, net of income taxes, of a change in accounting principle reported on the income statement in the period,
             which occurred before previously adjustments were required.
             </summary>
             <remarks>
             Morningstar DataId: 26055
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DeferredIncomeTax">
             <summary>
             The component of income tax expense for the period representing the net change in the entities deferred tax assets and liabilities
             pertaining to continuing operations.
             </summary>
             <remarks>
             Morningstar DataId: 26056
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DeferredTax">
             <summary>
             Future tax liability or asset, resulting from temporary differences between book (accounting) value of assets and liabilities, and their
             tax value. This arises due to differences between financial accounting for shareholders and tax accounting.
             </summary>
             <remarks>
             Morningstar DataId: 26057
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.Depletion">
             <summary>
             Unlike depreciation and amortization, which mainly describe the deduction of expenses due to the aging of equipment and property,
             depletion is the actual physical reduction of natural resources by companies.   For example, coalmines, oil fields and other natural
             resources are depleted on company accounting statements. This reduction in the quantity of resources is meant to assist in
             accurately identifying the value of the asset on the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 26058
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.Depreciation">
             <summary>
             An expense recorded to allocate a tangible asset's cost over its useful life. Since it is a non-cash expense, it increases free cash
             flow while decreasing reported earnings.
             </summary>
             <remarks>
             Morningstar DataId: 26059
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DepreciationAndAmortization">
             <summary>
             The current period expense charged against earnings on long-lived, physical assets used in the normal conduct of business and not
             intended for resale to allocate or recognize the cost of assets over their useful lives; or to record the reduction in book value of an
             intangible asset over the benefit period of such asset.
             </summary>
             <remarks>
             Morningstar DataId: 26060
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DepreciationAmortizationDepletion">
             <summary>
             It is a non cash charge that represents a reduction in the value of fixed assets due to wear, age or obsolescence. This figure also
             includes amortization of leased property, intangibles, and goodwill, and depletion. This non-cash item is an add-back to the cash
             flow statement.
             </summary>
             <remarks>
             Morningstar DataId: 26061
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.EffectOfExchangeRateChanges">
             <summary>
             The effect of exchange rate changes on cash balances held in foreign currencies.
             </summary>
             <remarks>
             Morningstar DataId: 26063
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncreaseDecreaseInDeposit">
             <summary>
             The aggregate net change during the reporting period in moneys given as security, collateral, or margin deposits.
             </summary>
             <remarks>
             Morningstar DataId: 26069
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetCommonStockIssuance">
             <summary>
             The increase or decrease between periods of common stock.
             </summary>
             <remarks>
             Morningstar DataId: 26071
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetIssuancePaymentsOfDebt">
             <summary>
             The increase or decrease between periods of debt.
             </summary>
             <remarks>
             Morningstar DataId: 26072
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetLongTermDebtIssuance">
             <summary>
             The increase or decrease between periods of long term debt. Long term debt includes notes payable, bonds payable, mortgage
             loans, convertible debt, subordinated debt and other types of long term debt.
             </summary>
             <remarks>
             Morningstar DataId: 26073
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetPreferredStockIssuance">
             <summary>
             The increase or decrease between periods of preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 26074
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetShortTermDebtIssuance">
             <summary>
             The increase or decrease between periods of short term debt.
             </summary>
             <remarks>
             Morningstar DataId: 26075
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetCashFromDiscontinuedOperations">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
             <remarks>
             Morningstar DataId: 26077
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetForeignCurrencyExchangeGainLoss">
             <summary>
             The aggregate amount of realized and unrealized gain or loss resulting from changes in exchange rates between currencies.
             (Excludes foreign currency transactions designated as hedges of net investment in a foreign entity and inter-company foreign
             currency transactions that are of a long-term nature, when the entities to the transaction are consolidated, combined, or accounted
             for by the equity method in the reporting entity's financial statements. For certain entities, primarily banks, which are dealers in
             foreign exchange, foreign currency transaction gains or losses, may be disclosed as dealer gains or losses.)
             </summary>
             <remarks>
             Morningstar DataId: 26078
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetIncome">
             <summary>
             The profit or loss of the entity net of income taxes for the reporting period calculated and presented in the income statement in
             accordance with GAAP.
             </summary>
             <remarks>
             Morningstar DataId: 26079
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetIncomeFromContinuingOperations">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from discontinued operations,
             extraordinary items, impact of changes in accounting principles, minority interest, and various other reconciling adjustments.
             </summary>
             <remarks>
             Morningstar DataId: 26080
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentForLoans">
             <summary>
             Payment from a bank or insurance company  to the lender who lends money or property based on the agreement, along with
             interest, at a predetermined date in the future.
             </summary>
             <remarks>
             Morningstar DataId: 26087
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CommonStockPayments">
             <summary>
             The cash outflow to reacquire common stock during the period.
             </summary>
             <remarks>
             Morningstar DataId: 26088
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PreferredStockPayments">
             <summary>
             The cash outflow to reacquire preferred stock during the period.
             </summary>
             <remarks>
             Morningstar DataId: 26089
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.LongTermDebtPayments">
             <summary>
             The cash outflow for debt initially having maturity due after one year or beyond the normal operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 26090
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ShortTermDebtPayments">
             <summary>
             The cash outflow for a borrowing having initial term of repayment within one year or the normal operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 26091
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsFromIssuanceOfWarrants">
             <summary>
             The cash inflow from issuance of warrants.
             </summary>
             <remarks>
             Morningstar DataId: 26094
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsFromLoans">
             <summary>
             The cash inflow from borrowing money or property for a bank or insurance company.
             </summary>
             <remarks>
             Morningstar DataId: 26095
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsFromStockOptionExercised">
             <summary>
             The cash inflow associated with the amount received from holders exercising their stock options.
             </summary>
             <remarks>
             Morningstar DataId: 26097
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CommonStockIssuance">
             <summary>
             The cash inflow from offering common stock, which is the additional capital contribution to the entity during the period.
             </summary>
             <remarks>
             Morningstar DataId: 26098
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.LongTermDebtIssuance">
             <summary>
             The cash inflow from a debt initially having maturity due after one year or beyond the operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 26099
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PreferredStockIssuance">
             <summary>
             The cash inflow from offering preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 26100
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ShortTermDebtIssuance">
             <summary>
             The cash inflow from a debt initially having maturity due within one year or the normal operating cycle, if longer.
             </summary>
             <remarks>
             Morningstar DataId: 26101
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetProceedsPaymentForLoan">
             <summary>
             The net value of proceeds or payments of loans.
             </summary>
             <remarks>
             Morningstar DataId: 26103
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsPaymentInInterestBearingDepositsInBank">
             <summary>
             The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
             certificates of deposits.
             </summary>
             <remarks>
             Morningstar DataId: 26104
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfEquitySecurities">
             <summary>
             Refers to all purchases of equity securities; equity securities includes information about ownership interests or the right to acquire
             ownership interests in corporations and other legal entities. The ownership interest is represented by shares of common or
             preferred stock, convertible securities, stock rights, or stock warrants.
             </summary>
             <remarks>
             Morningstar DataId: 26106
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfFixedMaturitySecurities">
             <summary>
             All purchases of fixed maturity securities. Fixed maturity securities represent investments in debt securities having predetermined
             or determinable maturity dates.
             </summary>
             <remarks>
             Morningstar DataId: 26107
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfIntangibles">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve intangible assets.
             </summary>
             <remarks>
             Morningstar DataId: 26108
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfInvestment">
             <summary>
             All purchases of investments, including both long term and short term.
             </summary>
             <remarks>
             Morningstar DataId: 26110
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfLongTermInvestments">
             <summary>
             All purchases of long-term investments that a company intends to hold for more than a year, which may include stocks, bonds, and
             real estate.
             </summary>
             <remarks>
             Morningstar DataId: 26111
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfPPE">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve capital assets. This category includes property, plant
             equipment, furniture, fixed assets, buildings, and improvement.
             </summary>
             <remarks>
             Morningstar DataId: 26112
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfShortTermInvestments">
             <summary>
             All purchases of short-term investments that a company has made that will expire within one year. Examples include marketable
             securities, commodities, money market instruments, and options.
             </summary>
             <remarks>
             Morningstar DataId: 26113
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfTechnology">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve technology.
             </summary>
             <remarks>
             Morningstar DataId: 26114
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseOfBusiness">
             <summary>
             All the purchases of business including business acquisitions, investment in subsidiary; investing in affiliated companies, and join
             venture.
             </summary>
             <remarks>
             Morningstar DataId: 26115
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetBusinessPurchaseAndSale">
             <summary>
             The net change between Purchases/Sales of Business.
             </summary>
             <remarks>
             Morningstar DataId: 26116
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetIntangiblesPurchaseAndSale">
             <summary>
             The net change between Purchases/Sales of Intangibles.
             </summary>
             <remarks>
             Morningstar DataId: 26117
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetInvestmentPurchaseAndSale">
             <summary>
             The net change between Purchases/Sales of Investments.
             </summary>
             <remarks>
             Morningstar DataId: 26118
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetPPEPurchaseAndSale">
             <summary>
             The net change between Purchases/Sales of PPE.
             </summary>
             <remarks>
             Morningstar DataId: 26119
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetTechnologyPurchaseAndSale">
             <summary>
             The net change between Purchases/Sales of Technology.
             </summary>
             <remarks>
             Morningstar DataId: 26121
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfBusiness">
             <summary>
             Proceeds received from selling a business including proceeds from a subsidiary, and proceeds from an affiliated company.
             </summary>
             <remarks>
             Morningstar DataId: 26123
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfIntangibles">
             <summary>
             The amount of capital inflow from the sale of all kinds of intangible assets.
             </summary>
             <remarks>
             Morningstar DataId: 26124
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfInvestment">
             <summary>
             Proceeds received from selling all kind of investments, including both long term and short term.
             </summary>
             <remarks>
             Morningstar DataId: 26125
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfLongTermInvestments">
             <summary>
             Proceeds received from selling long-term investments.
             </summary>
             <remarks>
             Morningstar DataId: 26126
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfPPE">
             <summary>
             Proceeds from selling any fixed assets such as property, plant and equipment, which also includes retirement of equipment.
             </summary>
             <remarks>
             Morningstar DataId: 26127
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfShortTermInvestments">
             <summary>
             Proceeds received from selling short-term investments; such as marketable securities, treasury bills; certificates of deposit,
             banker's acceptances, money market investments, commercial paper, Eurodollars, repurchase agreements, collateral investments,
             temporary investments.
             </summary>
             <remarks>
             Morningstar DataId: 26128
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleOfTechnology">
             <summary>
             The amount of capital inflow from the sale of technology.
             </summary>
             <remarks>
             Morningstar DataId: 26129
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SalesOfEquitySecurities">
             <summary>
             Proceeds from the sale of all equity securities, which represent investments in common and preferred stocks and other forms of
             securities that provide ownership interests in a corporation.
             </summary>
             <remarks>
             Morningstar DataId: 26130
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SalesOfFixedMaturitySecurities">
             <summary>
             Proceeds from the sale of fixed maturity securities, which represent investments in debt securities having predetermined or
             determinable maturity dates.
             </summary>
             <remarks>
             Morningstar DataId: 26131
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangesInAccountReceivables">
             <summary>
             The increase or decrease between periods of the accounts receivables.
             </summary>
             <remarks>
             Morningstar DataId: 26137
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AmortizationOfFinancingCostsAndDiscounts">
             <summary>
             The component of interest expense representing the non-cash expenses charged against earnings in the period to allocate debt
             discount and premium, and the costs to issue debt and obtain financing over the related debt instruments. This item is usually only
             available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 26141
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AmortizationOfSecurities">
             <summary>
             Represents amortization of the allocation of a lump sum amount to different time periods, particularly for securities, debt, loans,
             and other forms of financing. Does not include amortization, amortization of capital expenditure and intangible assets.
             </summary>
             <remarks>
             Morningstar DataId: 26142
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AssetImpairmentCharge">
             <summary>
             The charge against earnings resulting from the aggregate write down of all assets from their carrying value to their fair value.
             </summary>
             <remarks>
             Morningstar DataId: 26143
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInDividendPayable">
             <summary>
             The increase or decrease between periods of the dividend payables.
             </summary>
             <remarks>
             Morningstar DataId: 26144
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInDeferredCharges">
             <summary>
             The net change during the reporting period in the value of expenditures made during the current reporting period for benefits that
             will be received over a period of years. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 26145
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInOtherCurrentAssets">
             <summary>
             The increase or decrease between periods of the Other Current Assets. This category typically includes prepayments, deferred
             charges, and amounts (other than trade accounts) due from parents and subsidiaries.
             </summary>
             <remarks>
             Morningstar DataId: 26146
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInOtherCurrentLiabilities">
             <summary>
             The increase or decrease between periods of the Other Current liabilities. Other Current liabilities is a balance sheet entry used by
             companies to group together current liabilities that are not assigned to common liabilities such as debt obligations or accounts
             payable.
             </summary>
             <remarks>
             Morningstar DataId: 26147
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInOtherWorkingCapital">
             <summary>
             The increase or decrease between periods of the other working capital.
             </summary>
             <remarks>
             Morningstar DataId: 26148
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInPrepaidReinsurancePremiums">
             <summary>
             The net cash inflow (outflow) for the net change associated with the unexpired portion of premiums ceded on policies in force as of
             the balance sheet date. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26149
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInReinsuranceReceivableOnPaidLosses">
             <summary>
             The net change during the reporting period associated with receivables currently due from reinsurers for ceded paid losses.
             </summary>
             <remarks>
             Morningstar DataId: 26150
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInReinsuranceRecoverableOnUnpaidLosses">
             <summary>
             The net change during the reporting period associated with receivables currently due from reinsurers for ceded unpaid losses. This
             item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26151
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInUnearnedPremiums">
             <summary>
             The change during the period in the unearned portion of premiums written, excluding the portion amortized into income. This item is
             usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26152
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeInUnearnedPremiumsCeded">
             <summary>
             The change during the period for unearned premiums pursuant to terms of reinsurance arrangements. This item is usually only
             available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26153
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CommonStockDividendPaid">
             <summary>
             The cash outflow from the distribution of an entity's earnings in the form of dividends to common shareholders.
             </summary>
             <remarks>
             Morningstar DataId: 26154
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.EarningsLossesFromEquityInvestments">
             <summary>
             This item represents the entity's proportionate share for the period of the net income (loss) of its investee (such as unconsolidated
             subsidiaries and joint ventures) to which the equity method of accounting is applied. The amount typically reflects adjustments.
             </summary>
             <remarks>
             Morningstar DataId: 26155
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ExcessTaxBenefitFromStockBasedCompensation">
             <summary>
             Reductions in the entity's income taxes that arise when compensation cost (from non-qualified share-based compensation)
             recognized on the entities tax return exceeds compensation cost from share-based compensation recognized in financial
             statements. This element reduces net cash provided by operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 26156
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ExtraordinaryItems">
             <summary>
             Gains (losses), after tax, arising from an event or transaction that is both unusual in nature and infrequent in occurrence when
             considered in relation to the environment in which the entity operates. This amount should be the same as the amount disclosed on
             the income statement. The effect of an extraordinary event or transaction should be classified separately in the income statement if
             it is material in relation to income before extraordinary items or to the trend of annual earnings before extraordinary items, or is
             material by other appropriate criteria. Items should be considered individually and not in the aggregate in determining whether an
             extraordinary event or transaction is material.
             </summary>
             <remarks>
             Morningstar DataId: 26157
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.GainLossOnInvestmentSecurities">
             <summary>
             This item represents the net total realized gain (loss) included in earnings for the period as a result of selling or holding marketable
             securities categorized as trading, available-for-sale, or held-to-maturity, including the unrealized holding gain or loss of held-to-
             maturity securities transferred to the trading security category and the cumulative unrealized gain or loss which was included in
             other comprehensive income (a separate component of shareholders' equity) for available-for-sale securities transferred to trading
             securities during the period. Additionally, this item would include any losses recognized for other than temporary impairments of the
             subject investments in debt and equity securities.
             </summary>
             <remarks>
             Morningstar DataId: 26158
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.GainLossOnSaleOfBusiness">
             <summary>
             The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
             period. This element refers to the gain (loss) and not to the cash proceeds of the business. This element is a non-cash adjustment
             to net income when calculating net cash generated by operating activities using the indirect method.
             </summary>
             <remarks>
             Morningstar DataId: 26159
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.GainLossOnSaleOfPPE">
             <summary>
             The difference between the sale price or salvage price and the book value of the property, plant and equipment that was sold or
             retired during the reporting period. Includes the amount received from selling any fixed assets such as property, plant and
             equipment. Usually this section also includes any retirement of equipment. Such as Sale of business segments; Sale of credit and
             receivables; Property disposition; Proceeds from sale or disposition of business or investment; Decrease in excess of purchase price
             over acquired net assets; Abandoned project (expenditures) credit; Allowances for other funds during construction.
             </summary>
             <remarks>
             Morningstar DataId: 26160
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestCreditedOnPolicyholderDeposits">
             <summary>
             An expense reported in the income statement and needs to be removed from net income to arrive at cash provided by (used in)
             operations to the extent that such interest has not been paid. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26161
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFromDiscontinuedOperatingActivities">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
             <remarks>
             Morningstar DataId: 26162
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OperatingGainsLosses">
             <summary>
             The gain or loss from the entity's ongoing operations.
             </summary>
             <remarks>
             Morningstar DataId: 26163
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetOtherFinancingCharges">
             <summary>
             Miscellaneous charges incurred due to Financing activities.
             </summary>
             <remarks>
             Morningstar DataId: 26164
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetOtherInvestingChanges">
             <summary>
             Miscellaneous charges incurred due to Investing activities.
             </summary>
             <remarks>
             Morningstar DataId: 26165
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherNonCashItems">
             <summary>
             Items which adjusted back from net income but without real cash outflow or inflow.
             </summary>
             <remarks>
             Morningstar DataId: 26166
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PensionAndEmployeeBenefitExpense">
             <summary>
             The amount of pension and other (such as medical, dental and life insurance) postretirement benefit costs recognized during the
             period.
             </summary>
             <remarks>
             Morningstar DataId: 26167
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PreferredStockDividendPaid">
             <summary>
             Pay for the amount of dividends declared or paid in the period to preferred shareholders or the amount for which the obligation to
             pay them dividends rose in the period.
             </summary>
             <remarks>
             Morningstar DataId: 26168
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResell">
             <summary>
             The aggregate amount change of (1) the lending of excess federal funds to another commercial bank requiring such for its legal
             reserve requirements and (2) securities purchased under agreements to resell. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 26169
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProvisionForLoanLeaseAndOtherLosses">
             <summary>
             The sum of the periodic provision charged to earnings, based on an assessment of uncollectible from the counterparty on account
             of loan, lease or other credit losses, to reduce these accounts to the amount that approximates their net realizable value. This item
             is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 26170
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.RealizedGainLossOnSaleOfLoansAndLease">
             <summary>
             The gains and losses included in earnings that represent the difference between the sale price and the carrying value of loans and
             leases that were sold during the reporting period. This element refers to the gain (loss) and not to the cash proceeds of the sales.
             This element is a non-cash adjustment to net income when calculating net cash generated by operating activities using the indirect
             method. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 26171
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.StockBasedCompensation">
             <summary>
             Value of stock issued during the period as a result of any share-based compensation plan other than an employee stock ownership
             plan (ESOP).
             </summary>
             <remarks>
             Morningstar DataId: 26172
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.UnrealizedGainLossOnInvestmentSecurities">
             <summary>
             The increases (decreases) in the market value of unsold securities whose gains (losses) were included in earnings.
             </summary>
             <remarks>
             Morningstar DataId: 26173
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.UnrealizedGainsLossesOnDerivatives">
             <summary>
             The gross gains and losses on derivatives. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 26174
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AmortizationOfIntangibles">
             <summary>
             The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
             production) in a systematic and rational manner to the periods expected to benefit from such assets.
             </summary>
             <remarks>
             Morningstar DataId: 26175
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AllowanceForFundsConstruction">
             <summary>
             This represents cash inflow due to change during the period in the allowance for other funds used during construction classified as
             an investing activity. This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 26176
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DomesticSales">
             <summary>
             This represents sales attributed to customers who reside inside of the country where the company has its principal executive
             offices. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 26177
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ForeignSales">
             <summary>
             This represents sales attributed to customers who reside outside of the country where the company has its principal executive
             offices. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 26178
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncomeTaxPaidSupplementalData">
             <summary>
             The amount of cash paid during the current period to foreign, federal state and local authorities as taxes on income.
             </summary>
             <remarks>
             Morningstar DataId: 26179
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestPaidSupplementalData">
             <summary>
             The amount of cash paid during the current period for interest owed on money borrowed; including amount of interest capitalized.
             </summary>
             <remarks>
             Morningstar DataId: 26180
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IssuanceOfCapitalStock">
             <summary>
             The cash inflow from offering common stock, which is the additional capital contribution to the entity during the period.
             </summary>
             <remarks>
             Morningstar DataId: 26181
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IssuanceOfDebt">
             <summary>
             The cash inflow due to an increase in long term debt.
             </summary>
             <remarks>
             Morningstar DataId: 26182
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.RepaymentOfDebt">
             <summary>
             Payments to Settle Long Term Debt plus Payments to Settle Short Term Debt.
             </summary>
             <remarks>
             Morningstar DataId: 26183
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.RepurchaseOfCapitalStock">
             <summary>
             Payments for Common Stock plus Payments for Preferred Stock.
             </summary>
             <remarks>
             Morningstar DataId: 26184
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.FreeCashFlow">
             <summary>
             Cash Flow Operations minus Capital Expenditures.
             </summary>
             <remarks>
             Morningstar DataId: 26185
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DecreaseinInterestBearingDepositsinBank">
             <summary>
             The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
             certificates of deposits.
             </summary>
             <remarks>
             Morningstar DataId: 26188
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncreaseinInterestBearingDepositsinBank">
             <summary>
             Increase in interest-bearing deposits in bank.
             </summary>
             <remarks>
             Morningstar DataId: 26189
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AdjustedGeographySegmentData">
             <summary>
             Adjustment of geographical and segment income/expenses.
             </summary>
             <remarks>
             Morningstar DataId: 26190
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestReceivedCFO">
             <summary>
             Interest received by the company, in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26194
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestPaidCFO">
             <summary>
             Interest paid on loans, debt or borrowings, in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26195
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseofSubsidiaries">
             <summary>
             Purchase of subsidiaries or interest in subsidiaries (investments 51% and above).
             </summary>
             <remarks>
             Morningstar DataId: 26196
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PurchaseofJointVentureAssociate">
             <summary>
             Purchase of joint venture/associates (investment below 50%).
             </summary>
             <remarks>
             Morningstar DataId: 26197
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleofSubsidiaries">
             <summary>
             Cash inflow from the disposal of any subsidiaries.
             </summary>
             <remarks>
             Morningstar DataId: 26198
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.SaleofJointVentureAssociate">
             <summary>
             Cash inflow from the disposal of joint venture/associates (investment below 50%).
             </summary>
             <remarks>
             Morningstar DataId: 26199
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncreaseDecreaseinLeaseFinancing">
             <summary>
             Change in cash flow resulting from increase/decrease in lease financing.
             </summary>
             <remarks>
             Morningstar DataId: 26200
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncreaseinLeaseFinancing">
             <summary>
             The cash inflow from increase in lease financing.
             </summary>
             <remarks>
             Morningstar DataId: 26201
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.RepaymentinLeaseFinancing">
             <summary>
             The cash outflow to repay lease financing during the period.
             </summary>
             <remarks>
             Morningstar DataId: 26202
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ShareofAssociates">
             <summary>
             A non-cash adjustment for share of associates' income in respect of operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 26203
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProfitonDisposals">
             <summary>
             The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
             period.
             </summary>
             <remarks>
             Morningstar DataId: 26204
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ReorganizationOtherCosts">
             <summary>
             A non-cash adjustment relating to restructuring costs.
             </summary>
             <remarks>
             Morningstar DataId: 26205
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherFinancing">
             <summary>
             Other cash flows relating to financing activities in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26206
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetOutwardLoans">
             <summary>
             Adjustments due to net loans to/from outsiders in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26207
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IssueExpenses">
             <summary>
             Cost associated with issuance of debt/equity capital in the Financing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26208
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinCertificatesofDepositsandDebtSecuritiesIssued">
             <summary>
             The increase or decrease between periods of the Certificates of Deposits and Debt Securities Issued.
             </summary>
             <remarks>
             Morningstar DataId: 26211
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentstoAcquireHeldToMaturityInvestments">
             <summary>
             Cash outlay for purchase of held-to-maturity investments.
             </summary>
             <remarks>
             Morningstar DataId: 26212
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentstoAcquireAvailableForSaleFinancialAssets">
             <summary>
             Cash outlay for purchase of available-for-sale assets.
             </summary>
             <remarks>
             Morningstar DataId: 26213
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentstoAcquireFinancialAssetsDesignatedasFairValue">
             <summary>
             Cash outlay for purchase of financial assets designated at fair value.
             </summary>
             <remarks>
             Morningstar DataId: 26214
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromDisposalofHeldToMaturityInvestments">
             <summary>
             Cash inflow from sale of held-to-maturity investment securities.
             </summary>
             <remarks>
             Morningstar DataId: 26215
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromDisposalofAvailableForSaleFinancialAssets">
             <summary>
             Cash inflow from sale of available-for-sale financial assets.
             </summary>
             <remarks>
             Morningstar DataId: 26216
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValue">
             <summary>
             Cash inflow from sale of financial assets designated at fair value.
             </summary>
             <remarks>
             Morningstar DataId: 26217
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinFairValueofInvestmentProperties">
             <summary>
             The increase or decrease between periods of the investment properties
             .
             </summary>
             <remarks>
             Morningstar DataId: 26218
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinDepositsbyBanksandCustomers">
             <summary>
             The increase or decrease between periods of the deposits by banks and customers.
             </summary>
             <remarks>
             Morningstar DataId: 26219
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashFlowsfromusedinOperatingActivitiesDirect">
             <summary>
             The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity
             under the direct method.
             </summary>
             <remarks>
             Morningstar DataId: 26220
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ClassesofCashReceiptsfromOperatingActivities">
             <summary>
             Sum of total cash receipts in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26221
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherCashReceiptsfromOperatingActivities">
             <summary>
             Other cash receipts for the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26222
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ClassesofCashPayments">
             <summary>
             Sum of total cash payment in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26223
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentstoSuppliersforGoodsandServices">
             <summary>
             Cash paid to suppliers when purchasing goods or services by the company, in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26224
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentsfromContractsHeldforDealingorTradingPurpose">
             <summary>
             Cash received from dealing/trading contacts when the selling price is greater than the book value, in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26225
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentsonBehalfofEmployees">
             <summary>
             Cash paid in a form of salaries or other benefits to employees of the company, in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26226
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefits">
             <summary>
             Cash paid for insurance and claims, streams of fixed payments over a specified period of time and other policy benefits, in the
             direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26227
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherCashPaymentsfromOperatingActivities">
             <summary>
             Other cash payments for the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26228
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DividendsPaidDirect">
             <summary>
             Dividend paid to the investors, for the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26229
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DividendsReceivedDirect">
             <summary>
             Dividend received on the investment, for the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26230
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestPaidDirect">
             <summary>
             Interest paid on loans, debt or borrowings, in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26231
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestReceivedDirect">
             <summary>
             Interest received by the company, in the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26232
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.TaxesRefundPaidDirect">
             <summary>
             Tax paid/refund related to operating activities, for the direct cash flow.
             </summary>
             <remarks>
             Morningstar DataId: 26233
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.TotalAdjustmentsforNonCashItems">
             <summary>
             Sum of all adjustments back from net income but without real cash outflow or inflow.
             </summary>
             <remarks>
             Morningstar DataId: 26234
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ImpairmentLossReversalRecognizedinProfitorLoss">
             <summary>
             The difference between the future net cash flows expected to be received from the asset and its book value, recognized in the
             Income Statement.
             </summary>
             <remarks>
             Morningstar DataId: 26235
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AdjustmentsforUndistributedProfitsofAssociates">
             <summary>
             Income earned from associates investment.
             </summary>
             <remarks>
             Morningstar DataId: 26236
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlow">
             <summary>
             Other increase or decrease relating to investing or financing activities, in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26237
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DividendPaidCFO">
             <summary>
             Dividend paid to the investors, in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26238
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DividendReceivedCFO">
             <summary>
             Dividend received on investment, in the Operating Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26239
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.TaxesRefundPaid">
             <summary>
             Total tax paid or received on operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 26240
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherOperatingInflowsOutflowsofCash">
             <summary>
             Any other cash inflows or outflows in the Operating Cash Flow section, not accounted for in the other specified items.
             </summary>
             <remarks>
             Morningstar DataId: 26241
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromGovernmentGrantsCFI">
             <summary>
             Any cash received from government in relation to grants, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26242
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashAdvancesandLoansMadetoOtherParties">
             <summary>
             Cash outlay for cash advances and loans made to other parties.
             </summary>
             <remarks>
             Morningstar DataId: 26243
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherParties">
             <summary>
             Cash received from the repayment of advances and loans made to other parties, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26244
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromPaymentsforFinancialDerivativeContracts">
             <summary>
             Cash flow associated with the purchase/sale of financial derivative contracts, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26245
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.DividendsReceivedCFI">
             <summary>
             Dividend received on investment, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26246
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestReceivedCFI">
             <summary>
             Interest received by the company, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26247
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncomeTaxesRefundPaidCFI">
             <summary>
             Amount of income taxes received as refund or paid related to an investing activity, in the Investing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26248
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IssuancePaymentofOtherEquityInstrumentsNet">
             <summary>
             The net cash inflow or outflow resulting from the investment.
             </summary>
             <remarks>
             Morningstar DataId: 26249
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PaymentsofOtherEquityInstruments">
             <summary>
             Cash paid for other equity instruments.
             </summary>
             <remarks>
             Morningstar DataId: 26250
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromIssuingOtherEquityInstruments">
             <summary>
             Cash inflow from the issuance of other equity instruments (like common limited partners units) during the financial period.
             </summary>
             <remarks>
             Morningstar DataId: 26251
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProceedsfromGovernmentGrantsCFF">
             <summary>
             Any cash received from government in relation to grants, in the Financing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26252
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestPaidCFF">
             <summary>
             Interest paid on loans, debt or borrowings, in the Financing Cash Flow section.
             </summary>
             <remarks>
             Morningstar DataId: 26253
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.IncomeTaxesRefundPaidCFF">
             <summary>
             Amount of income taxes received as refund or paid related to a financing activity.
             </summary>
             <remarks>
             Morningstar DataId: 26254
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinAccruedIncome">
             <summary>
             The increase or decrease between periods in the amount of outstanding money owed by a customer for goods or services provided
             by the company.
             </summary>
             <remarks>
             Morningstar DataId: 26255
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinDeferredIncome">
             <summary>
             The increase or decrease between periods of the deferred expenses.
             </summary>
             <remarks>
             Morningstar DataId: 26256
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinFinancialAssets">
             <summary>
             The increase or decrease between periods of the financial assets.
             </summary>
             <remarks>
             Morningstar DataId: 26258
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinAdvancesfromCentralBanks">
             <summary>
             The increase or decrease between periods of the advances from central banks.
             </summary>
             <remarks>
             Morningstar DataId: 26259
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinFinancialLiabilities">
             <summary>
             The increase or decrease between periods of the financial liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 26260
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinInsuranceContractAssets">
             <summary>
             The increase or decrease between periods of the contract assets.
             </summary>
             <remarks>
             Morningstar DataId: 26261
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinReinsuranceReceivables">
             <summary>
             The increase or decrease between periods of the reinsurance receivable.
             </summary>
             <remarks>
             Morningstar DataId: 26262
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinDeferredAcquisitionCostsNet">
             <summary>
             The increase or decrease between periods of the deferred acquisition costs.
             </summary>
             <remarks>
             Morningstar DataId: 26263
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinInsuranceFunds">
             <summary>
             The increase or decrease between periods of the insurance funds.
             </summary>
             <remarks>
             Morningstar DataId: 26264
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinReinsurancePayables">
             <summary>
             The increase or decrease between periods of the reinsurance payables.
             </summary>
             <remarks>
             Morningstar DataId: 26265
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinInvestmentContractLiabilities">
             <summary>
             The increase or decrease between periods of the investment contract liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 26266
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ChangeinInsuranceContractLiabilities">
             <summary>
             The increase or decrease between periods of the insurance contract liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 26267
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ProvisionandWriteOffofAssets">
             <summary>
             A non-cash adjustment for total provision and write off on assets &amp; liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 26269
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ReceiptsfromCustomers">
             <summary>
             Payment received from customers in the Direct Cash Flow.
             </summary>
             <remarks>
             Morningstar DataId: 26270
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ReceiptsfromGovernmentGrants">
             <summary>
             Cash received from governments in the form of grants in the Direct Cash Flow.
             </summary>
             <remarks>
             Morningstar DataId: 26271
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.MinorityInterest">
             <summary>
             Amount of net income (loss) for the period allocated to non-controlling shareholders, partners, or other equity holders in one or
             more of the entities included.
             </summary>
             <remarks>
             Morningstar DataId: 26272
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CapExReported">
             <summary>
             Capital expenditure, capitalized software development cost, maintenance capital expenditure, etc. as reported by the company.
             </summary>
             <remarks>
             Morningstar DataId: 26273
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromTaxRefunds">
             <summary>
             Cash received as refunds from tax authorities in operating cash flow, using the direct method
             </summary>
             <remarks>
             Morningstar DataId: 26274
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromBorrowings">
             <summary>
             Cash received from borrowings in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26275
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromDepositsbyBanksandCustomers">
             <summary>
             Cash received from banks and customers deposits in operating cash flow, using the direct method. This item is usually only
             available for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26276
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromLoans">
             <summary>
             Cash received from loans in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26277
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromSecuritiesRelatedActivities">
             <summary>
             Cash received from the trading of securities in operating cash flow, using the direct method. This item is usually only available for
             bank and insurance industries
             </summary>
             <remarks>
             Morningstar DataId: 26278
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromDecreaseinAssets">
             <summary>
             Cash received from assets reduction (usually from sale or disposal) in operating cash flow, using the direct method. This item is
             usually available for bank and insurance industries
             </summary>
             <remarks>
             Morningstar DataId: 26279
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceiptsfromFeesandCommissions">
             <summary>
             Cash received from agency fees and commissions in operating cash flow, using the direct method. This item is usually available for
             bank and insurance industries
             </summary>
             <remarks>
             Morningstar DataId: 26280
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashPaymentsforBorrowings">
             <summary>
             Cash paid for borrowing money from other parties in operating cash flow, using the direct method. This item is usually only available
             for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26281
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashPaymentsforDepositsbyBanksandCustomers">
             <summary>
             Cash paid for deposits by banks and customers in operating cash flow, using the direct method. This item is usually only available
             for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26282
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashPaymentsforLoans">
             <summary>
             Cash paid for loans in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
             <remarks>
             Morningstar DataId: 26283
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.InterestandCommissionPaid">
             <summary>
             Cash paid for interest and commission in operating cash flow, using the direct method
             </summary>
             <remarks>
             Morningstar DataId: 26284
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.AllTaxesPaid">
             <summary>
             Cash paid to tax authorities in operating cash flow, using the direct method
             </summary>
             <remarks>
             Morningstar DataId: 26285
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashReceivedfromInsuranceActivities">
             <summary>
             Cash received from insurance activities in operating cash flow, using the direct method. This item is usually only available for
             insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26286
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PremiumReceived">
             <summary>
             Cash received from premium income in operating cash flow, using the direct method. This item is usually only available for
             insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26287
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ReinsuranceandOtherRecoveriesReceived">
             <summary>
             Cash received from reinsurance income or other recoveries income in operating cash flow, using the direct method. This item is
             usually only available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26288
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.PolicyholderDepositInvestmentReceived">
             <summary>
             Cash received from policyholder deposit investment activities in operating cash flow, using the direct method. This item is usually
             only available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26289
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashPaidforInsuranceActivities">
             <summary>
             Cash paid out for insurance activities during the period in operating cash flow, using the direct method. This item is usually only
             available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26290
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.ClaimsPaid">
             <summary>
             Cash paid out for claims by a insurance company during the period in operating cash flow, using the direct method. This item is
             usually only available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26291
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CommissionPaid">
             <summary>
             Cash paid for commissions in operating cash flow, using the direct method
             </summary>
             <remarks>
             Morningstar DataId: 26292
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashPaidtoReinsurers">
             <summary>
             Cash paid out to reinsurers in operating cash flow, using the direct method. This item is usually only available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26293
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.OtherUnderwritingExpensesPaid">
             <summary>
             Cash paid out for underwriting expenses, such as the acquisition of new and renewal insurance contracts, in operating cash flow,
             using the direct method. This item is usually only available for insurance industry
             </summary>
             <remarks>
             Morningstar DataId: 26294
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashDividendsForMinorities">
             <summary>
             Cash Distribution of earnings to Minority Stockholders.
             </summary>
             <remarks>
             Morningstar DataId: 26295
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CFFileDate">
             <summary>
             Filing date of the Cash Flow Statement.
             </summary>
             <remarks>
             Morningstar DataId: 26296
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.NetIncomeFromDiscontinuedOperations">
             <summary>
             The profit or loss of the entity from discontinued operations, represeted as a cash inflow/outflow within operating cashflow.
             </summary>
             <remarks>
             Morningstar DataId: 26297
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowStatement.CashGeneratedfromOperatingActivities">
             <summary>
             The net cash from an entity's operating activities before real cash inflow or outflow for Dividend, Interest, Tax, or other unclassified
             operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 26298
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowStatement.UpdateValues(QuantConnect.Data.Fundamental.CashFlowStatement)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CompanyReference">
             <summary>
             Definition of the CompanyReference class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.CompanyId">
             <summary>
             10-digit unique and unchanging Morningstar identifier assigned to every company.
             </summary>
             <remarks>
             Morningstar DataId: 1
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.ShortName">
             <summary>
             25-character max abbreviated name of the firm.  In most cases, the short name will simply be the Legal Name less the
             "Corporation", "Corp.", "Inc.", "Incorporated", etc...
             </summary>
             <remarks>
             Morningstar DataId: 2
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.StandardName">
             <summary>
             The English translation of the foreign legal name if/when applicable.
             </summary>
             <remarks>
             Morningstar DataId: 3
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.LegalName">
             <summary>
             The full name of the registrant as specified in its charter, and most often found on the front cover of the 10K/10Q/20F filing.
             </summary>
             <remarks>
             Morningstar DataId: 4
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.CountryId">
             <summary>
             3 Character ISO code of the country where the firm is domiciled. See separate reference document for Country Mappings.
             </summary>
             <remarks>
             Morningstar DataId: 5
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.CIK">
             <summary>
             The Central Index Key; a corporate identifier assigned by the Securities and Exchange Commission (SEC).
             </summary>
             <remarks>
             Morningstar DataId: 6
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.CompanyStatus">
             <summary>
             At the Company level; each company is assigned to 1 of 3 possible status classifications; (U) Public, (V) Private, or (O) Obsolete:
             - Public-Firm is operating and currently has at least one common share class that is currently trading on a public exchange.
             - Private-Firm is operating but does not have any common share classes currently trading on a public exchange.
             - Obsolete-Firm is no longer operating because it closed its business, or was acquired.
             </summary>
             <remarks>
             Morningstar DataId: 9
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.FiscalYearEnd">
             <summary>
             The Month of the company's latest fiscal year.
             </summary>
             <remarks>
             Morningstar DataId: 10
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.IndustryTemplateCode">
             <summary>
             This indicator will denote which one of the six industry data collection templates applies to the company.  Each industry data
             collection template includes data elements that are commonly reported by companies in that industry.  N=Normal
             (Manufacturing), M=Mining,  U=Utility, T=Transportation, B=Bank, I=Insurance
             </summary>
             <remarks>
             Morningstar DataId: 11
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.PrimaryShareClassID">
             <summary>
             The 10-digit unique and unchanging Morningstar identifier assigned to the Primary Share class of a company. The primary share of a
             company is defined as the first share that was traded publicly and is still actively trading. If this share is no longer trading, the
             primary share will be the share with the highest volume.
             </summary>
             <remarks>
             Morningstar DataId: 12
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.PrimarySymbol">
             <summary>
             The symbol of the Primary Share of the company, composed of an arrangement of characters (often letters) representing a
             particular security listed on an exchange or otherwise traded publicly.   The primary share of a company is defined as the first share
             that was traded publicly and is still actively trading. If this share is no longer trading, the primary share will be the share with the
             highest volume. Note: Morningstar's multi-share class symbols will often contain a "period" within the symbol; e.g. BRK.B for
             Berkshire Hathaway Class B.
             </summary>
             <remarks>
             Morningstar DataId: 13
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.PrimaryExchangeID">
             <summary>
             The Id representing the stock exchange of the Primary Share of the company.  See separate reference document for Exchange
             Mappings. The primary share of a company is defined as the first share that was traded publicly with and is still actively trading. If
             this share is no longer trading, the primary share will be the share with the highest volume.
             </summary>
             <remarks>
             Morningstar DataId: 14
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.BusinessCountryID">
             <summary>
             In some cases, different from the country of domicile (CountryId; DataID 5).  This element is a three (3) Character ISO code of the
             business country of the security.  It is determined by a few factors, including:
             </summary>
             <remarks>
             Morningstar DataId: 15
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.LegalNameLanguageCode">
             <summary>
             The language code for the foreign legal name if/when applicable.  Related to  DataID 4 (LegalName).
             </summary>
             <remarks>
             Morningstar DataId: 16
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.Auditor">
             <summary>
             The legal (registered) name of the company's current auditor. Distinct from DataID 28000 Period Auditor that identifies the Auditor
             related to that period's financial statements.
             </summary>
             <remarks>
             Morningstar DataId: 17
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.AuditorLanguageCode">
             <summary>
             The ISO code denoting the language text for Auditor's name and contact information.
             </summary>
             <remarks>
             Morningstar DataId: 18
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.Advisor">
             <summary>
             The legal (registered) name of the current legal Advisor of the company.
             </summary>
             <remarks>
             Morningstar DataId: 19
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.AdvisorLanguageCode">
             <summary>
             The ISO code denoting the language text for Advisor's name and contact information.
             </summary>
             <remarks>
             Morningstar DataId: 20
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.IsLimitedPartnership">
             <summary>
             Indicator to denote if the company is a limited partnership, which is a form of business structure comprised of a general partner and
             limited partners. 1 denotes it is a LP; otherwise 0.
             </summary>
             <remarks>
             Morningstar DataId: 21
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.IsREIT">
             <summary>
             Indicator to denote if the company is a real estate investment trust (REIT). 1 denotes it is a REIT; otherwise 0.
             </summary>
             <remarks>
             Morningstar DataId: 22
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.PrimaryMIC">
             <summary>
             The MIC (market identifier code) of the PrimarySymbol of the company. See Data Appendix A for the relevant MIC to exchange
             name mapping.
             </summary>
             <remarks>
             Morningstar DataId: 23
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.ReportStyle">
             <summary>
             This refers to the financial template used to collect the company's financial statements. There are two report styles representing
             two different financial template structures. Report style "1" is most commonly used by US and Canadian companies, and Report
             style "3" is most commonly used by the rest of the universe. Contact your client manager for access to the respective templates.
             </summary>
             <remarks>
             Morningstar DataId: 24
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CompanyReference.YearofEstablishment">
             <summary>
             The year a company was founded.
             </summary>
             <remarks>
             Morningstar DataId: 25
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CompanyReference.#ctor">
             <summary>
             Creates an instance of the CompanyReference class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CompanyReference.UpdateValues(QuantConnect.Data.Fundamental.CompanyReference)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningRatios">
             <summary>
             Definition of the EarningRatios class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningRatios.DilutedEPSGrowth">
             <summary>
             The growth in the company's diluted earnings per share (EPS) on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying diluted EPS reported in the Income Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 13015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningRatios.DilutedContEPSGrowth">
             <summary>
             The growth in the company's diluted EPS from continuing operations on a percentage basis. Morningstar calculates the annualized
             growth percentage based on the underlying diluted EPS from continuing operations reported in the Income Statement within the
             company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 13016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningRatios.DPSGrowth">
             <summary>
             The growth in the company's dividends per share (DPS) on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying DPS from its dividend database.  Morningstar collects its DPS from company filings and
             reports, as well as from third party sources.
             </summary>
             <remarks>
             Morningstar DataId: 13017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningRatios.EquityPerShareGrowth">
             <summary>
             The growth in the company's book value per share on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying equity and end of period shares outstanding reported in the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 13018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningRatios.RegressionGrowthofDividends5Years">
             <summary>
             The five-year growth rate of dividends per share, calculated using regression analysis.
             </summary>
             <remarks>
             Morningstar DataId: 13019
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningRatios.#ctor">
             <summary>
             Creates an instance of the EarningRatios class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningRatios.UpdateValues(QuantConnect.Data.Fundamental.EarningRatios)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningReports">
             <summary>
             Definition of the EarningReports class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.PeriodEndingDate">
             <summary>
             The exact date that is given in the financial statements for each quarter's end.
             </summary>
             <remarks>
             Morningstar DataId: 20001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.FileDate">
             <summary>
             Specific date on which a company released its filing to the public.
             </summary>
             <remarks>
             Morningstar DataId: 20002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.AccessionNumber">
             <summary>
             The accession number is a unique number that EDGAR assigns to each submission as the submission is received.
             </summary>
             <remarks>
             Morningstar DataId: 20003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.FormType">
             <summary>
             The type of filing of the report: for instance, 10-K (annual report) or 10-Q (quarterly report).
             </summary>
             <remarks>
             Morningstar DataId: 20004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicContinuousOperations">
             <summary>
             Basic EPS from Continuing Operations is the earnings from continuing operations reported by the company divided by the weighted
             average number of common shares outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29000
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicDiscontinuousOperations">
             <summary>
             Basic EPS from Discontinued Operations is the earnings from discontinued operations reported by the company divided by the
             weighted average number of common shares outstanding. This only includes gain or loss from discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 29001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicExtraordinary">
             <summary>
             Basic EPS from the Extraordinary Gains/Losses is the earnings attributable to the gains or losses (during the reporting period) from
             extraordinary items divided by the weighted average number of common shares outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicAccountingChange">
             <summary>
             Basic EPS from the Cumulative Effect of Accounting Change is the earnings attributable to the accounting change (during the
             reporting period) divided by the weighted average number of common shares outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicEPS">
             <summary>
             Basic EPS is the bottom line net income divided by the weighted average number of common shares outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedContinuousOperations">
             <summary>
             Diluted EPS from Continuing Operations is the earnings from continuing operations divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities.  Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 29005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedDiscontinuousOperations">
             <summary>
             Diluted EPS from Discontinued Operations is the earnings from discontinued operations divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock. This only includes gain or loss from discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 29006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedExtraordinary">
             <summary>
             Diluted EPS from Extraordinary Gain/Losses is the gain or loss from extraordinary items divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 29007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedAccountingChange">
             <summary>
             Diluted EPS from Cumulative Effect Accounting Changes is the earnings from accounting changes (in the reporting period) divided
             by the common shares outstanding adjusted for the assumed conversion of all potentially dilutive securities. Securities having a
             dilutive effect may include convertible debentures, warrants, options, and convertible preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 29008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedEPS">
             <summary>
             Diluted EPS is the bottom line net income divided by the common shares outstanding adjusted for the assumed conversion of all
             potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants, options, and
             convertible preferred stock. This value will be derived when not reported for the fourth quarter and will be less than or equal to
             Basic EPS.
             </summary>
             <remarks>
             Morningstar DataId: 29009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicAverageShares">
             <summary>
             The shares outstanding used to calculate Basic EPS, which is the weighted average common share outstanding through the whole
             accounting period.  Note: If Basic Average Shares are not presented by the firm in the Income Statement, this data point will be
             null.
             </summary>
             <remarks>
             Morningstar DataId: 29010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedAverageShares">
             <summary>
             The shares outstanding used to calculate the diluted EPS, assuming the conversion of all convertible securities and the exercise of
             warrants or stock options. It is the weighted average diluted share outstanding through the whole accounting period.  Note: If
             Diluted Average Shares are not presented by the firm in the Income Statement and Basic Average Shares are presented, Diluted
             Average Shares will equal Basic Average Shares.  However, if neither value is presented by the firm, Diluted Average Shares will be
             null.
             </summary>
             <remarks>
             Morningstar DataId: 29011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DividendPerShare">
             <summary>
             The amount of dividend that a stockholder will receive for each share of stock held. It can be calculated by taking the total amount
             of dividends paid and dividing it by the total shares outstanding. Dividend per share = total dividend payment/total number of
             outstanding shares
             </summary>
             <remarks>
             Morningstar DataId: 29012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.BasicEPSOtherGainsLosses">
             <summary>
             Basic EPS from the Other Gains/Losses is the earnings attributable to the other gains/losses (during the reporting period) divided by
             the weighted average number of common shares outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.ContinuingAndDiscontinuedBasicEPS">
             <summary>
             Basic EPS from Continuing Operations plus Basic EPS from Discontinued Operations.
             </summary>
             <remarks>
             Morningstar DataId: 29014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.TaxLossCarryforwardBasicEPS">
             <summary>
             The earnings attributable to the tax loss carry forward (during the reporting period).
             </summary>
             <remarks>
             Morningstar DataId: 29015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.DilutedEPSOtherGainsLosses">
             <summary>
             The earnings from gains and losses (in the reporting period) divided by the common shares outstanding adjusted for the assumed
             conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants,
             options, convertible preferred stock, etc.
             </summary>
             <remarks>
             Morningstar DataId: 29016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.ContinuingAndDiscontinuedDilutedEPS">
             <summary>
             Diluted EPS from Continuing Operations plus Diluted EPS from Discontinued Operations.
             </summary>
             <remarks>
             Morningstar DataId: 29017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.TaxLossCarryforwardDilutedEPS">
             <summary>
             The earnings from any tax loss carry forward (in the reporting period).
             </summary>
             <remarks>
             Morningstar DataId: 29018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.NormalizedBasicEPS">
             <summary>
             The basic normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with a
             more accurate measure of the company's true earnings. Normalized Earnings / Basic Weighted Average Shares Outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.NormalizedDilutedEPS">
             <summary>
             The diluted normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with
             a more accurate measure of the company's true earnings. Normalized Earnings / Diluted Weighted Average Shares Outstanding.
             </summary>
             <remarks>
             Morningstar DataId: 29020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningReports.TotalDividendPerShare">
             <summary>
             Total Dividend Per Share is cash dividends and special cash dividends paid per share over a certain period of time
             </summary>
             <remarks>
             Morningstar DataId: 29021
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningReports.#ctor">
             <summary>
             Creates an instance of the EarningReports class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningReports.UpdateValues(QuantConnect.Data.Fundamental.EarningReports)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialStatements">
             <summary>
             Definition of the FinancialStatements class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.PeriodEndingDate">
             <summary>
             The exact date that is given in the financial statements for each quarter's end.
             </summary>
             <remarks>
             Morningstar DataId: 20001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.FileDate">
             <summary>
             Specific date on which a company released its filing to the public.
             </summary>
             <remarks>
             Morningstar DataId: 20002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.AccessionNumber">
             <summary>
             The accession number is a unique number that EDGAR assigns to each submission as the submission is received.
             </summary>
             <remarks>
             Morningstar DataId: 20003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.FormType">
             <summary>
             The type of filing of the report: for instance, 10-K (annual report) or 10-Q (quarterly report).
             </summary>
             <remarks>
             Morningstar DataId: 20004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.PeriodAuditor">
             <summary>
             The name of the auditor that performed the financial statement audit for the given period.
             </summary>
             <remarks>
             Morningstar DataId: 28000
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.AuditorReportStatus">
             <summary>
             Auditor opinion code will be one of the following for each annual period:
             </summary>
             <remarks>
             Morningstar DataId: 28001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.InventoryValuationMethod">
             <summary>
             Which method of inventory valuation was used - LIFO, FIFO, Average, Standard costs, Net realizable value, Others, LIFO and FIFO,
             FIFO and Average, FIFO and other, LIFO and Average, LIFO and other, Average and other, 3 or more methods, None
             </summary>
             <remarks>
             Morningstar DataId: 28002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.NumberOfShareHolders">
             <summary>
             The number of shareholders on record
             </summary>
             <remarks>
             Morningstar DataId: 28003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.TotalRiskBasedCapital">
             <summary>
             The sum of Tier 1 and Tier 2 Capital. Tier 1 capital consists of common shareholders equity, perpetual preferred shareholders equity
             with non-cumulative dividends, retained earnings, and minority interests in the equity accounts of consolidated subsidiaries. Tier 2
             capital consists of subordinated debt, intermediate-term preferred stock, cumulative and long-term preferred stock, and a portion of
             a banks allowance for loan and lease losses.
             </summary>
             <remarks>
             Morningstar DataId: 28004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.IncomeStatement">
             <summary>
             The instance of the IncomeStatement class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.BalanceSheet">
             <summary>
             The instance of the BalanceSheet class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialStatements.CashFlowStatement">
             <summary>
             The instance of the CashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialStatements.#ctor">
             <summary>
             Creates an instance of the FinancialStatements class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialStatements.UpdateValues(QuantConnect.Data.Fundamental.FinancialStatements)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeStatement">
             <summary>
             Definition of the IncomeStatement class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Amortization">
             <summary>
             Used to reduce the value of intangible fixed assets.
             </summary>
             <remarks>
             Morningstar DataId: 20007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SecuritiesAmortization">
             <summary>
             The gradual elimination of a liability, such as a mortgage, in regular payments over a specified period of time. Such payments must
             be sufficient to cover both principal and interest.
             </summary>
             <remarks>
             Morningstar DataId: 20008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CostOfRevenue">
             <summary>
             The aggregate cost of goods produced and sold and services rendered during the reporting period. It excludes all operating
             expenses such as depreciation, depletion, amortization, and SG&amp;A. For the must have cost industry, if the number is not reported
             by the company, it will be calculated based on accounting equation.
             Cost of Revenue = Revenue - Operating Expenses - Operating Profit.
             </summary>
             <remarks>
             Morningstar DataId: 20013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CumulativeEffectOfAccountingChange">
             <summary>
             Any cumulative gains or losses from change in accounting principles. A change in accounting principle constitutes a change from
             one generally accepted accounting principle to another generally accepted accounting principle. This may also include a change in
             the method of applying an accounting principle, such as depreciation or inventory methods.
             </summary>
             <remarks>
             Morningstar DataId: 20016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Depletion">
             <summary>
             Used to reduce the value of natural resource.
             </summary>
             <remarks>
             Morningstar DataId: 20017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Depreciation">
             <summary>
             Used to reduce the value of tangible fixed assets.
             </summary>
             <remarks>
             Morningstar DataId: 20018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DepreciationAndAmortization">
             <summary>
             The current period expense charged against earnings on long-lived, physical assets used in the normal conduct of business and not
             intended for resale to allocate or recognize the cost of assets over their useful lives; or to record the reduction in book value of an
             intangible asset over the benefit period of such asset. Examples include buildings, production and equipment.
             </summary>
             <remarks>
             Morningstar DataId: 20019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DepreciationAmortizationDepletion">
             <summary>
             It is a non-cash charge that represents a reduction in the value of fixed assets due to wear, age, or obsolescence. This figure also
             includes amortization of leased property, intangibles, and goodwill, and depletion.
             </summary>
             <remarks>
             Morningstar DataId: 20020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeDiscontinuousOperations">
             <summary>
             To be classified as discontinued operations, if both of the following conditions are met:
             1: The operations and cash flow of the component have been or will be removed from the ongoing operations of the entity as a
             result of the disposal transaction, and
             2: The entity will have no significant continuing involvement in the operations of the component after the disposal transaction.
             The discontinued operation is reported net of tax.
             Gains/Loss on Disposal of Discontinued Operations: Any gains or loss recognized on disposal of discontinued operations,
             which is the difference between the carrying value of the division and its fair value less costs to sell.
             Provision for Gain/Loss on Disposal: The amount of current expense charged in order to prepare for the disposal of
             discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 20022
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ExciseTaxes">
             <summary>
             Excise taxes are taxes paid when purchases are made on a specific good, such as gasoline. Excise taxes are often included in the
             price of the product. There are also excise taxes on activities, such as on wagering or on highway usage by trucks.
             </summary>
             <remarks>
             Morningstar DataId: 20028
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeExtraordinary">
             <summary>
             Gains (losses), whether arising from extinguishment of debt, prior period adjustments, or from other events or transactions, that are
             both unusual in nature and infrequent in occurrence thereby meeting the criteria for an event or transaction to be classified as an
             extraordinary item.
             </summary>
             <remarks>
             Morningstar DataId: 20030
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.FeeRevenueAndOtherIncome">
             <summary>
             The aggregate amount of fees, commissions, and other income.
             </summary>
             <remarks>
             Morningstar DataId: 20031
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GeneralAndAdministrativeExpense">
             <summary>
             The aggregate total of general managing and administering expenses for the company.
             </summary>
             <remarks>
             Morningstar DataId: 20045
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GrossProfit">
             <summary>
             Total revenue less cost of revenue. The number is as reported by the company on the income statement; however, the number will
             be calculated if it is not reported. This field is null if the cost of revenue is not given.
             Gross Profit = Total Revenue - Cost of Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 20046
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpense">
             <summary>
             Relates to the general cost of borrowing money. It is the price that a lender charges a borrower for the use of the lender's money.
             </summary>
             <remarks>
             Morningstar DataId: 20057
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseNonOperating">
             <summary>
             Interest expense caused by long term financing activities; such as interest expense incurred on trading liabilities, commercial paper,
             long-term debt, capital leases, deposits, and all other borrowings.
             </summary>
             <remarks>
             Morningstar DataId: 20064
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseOperating">
             <summary>
             Interest expense caused by normal operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 20065
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeAfterProvisionForLoanLoss">
             <summary>
             Net interest and dividend income or expense, including any amortization and accretion (as applicable) of discounts and premiums,
             including consideration of the provisions for loan, lease, credit, and other related losses, if any.
             </summary>
             <remarks>
             Morningstar DataId: 20066
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeNonOperating">
             <summary>
             Interest income earned from long term financing activities.
             </summary>
             <remarks>
             Morningstar DataId: 20075
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeOperating">
             <summary>
             Interest income earned by normal operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 20076
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetNonOperatingInterestIncomeExpense">
             <summary>
             Net-Non Operating interest income or expenses caused by financing activities.
             </summary>
             <remarks>
             Morningstar DataId: 20077
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetOperatingInterestIncomeExpense">
             <summary>
             Net operating interest income or expense caused by normal operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 20078
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LossAdjustmentExpense">
             <summary>
             Losses generally refer to (1) the amount of reduction in the value of an insured's property caused by an insured peril, (2) the amount
             sought through an insured's claim, or (3) the amount paid on behalf of an insured under an insurance contract.  Loss Adjustment
             Expenses is expenses incurred in the course of investigating and settling claims that includes any legal and adjusters' fees and the
             costs of paying claims and all related expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20084
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.MinorityInterests">
             <summary>
             Represents par or stated value of the subsidiary stock not owned by the parent company plus the minority interest's equity in the
             surplus of the subsidiary. This item includes preferred dividend averages on the minority preferred stock (preferred shares not
             owned by the reporting parent company). Minority interest also refers to stockholders who own less than 50% of a subsidiary's
             outstanding voting common stock. The minority stockholders hold an interest in the subsidiary's net assets and share earnings with
             the parent company.
             </summary>
             <remarks>
             Morningstar DataId: 20087
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncome">
             <summary>
             Includes all the operations (continuing and discontinued) and all the other income or charges (extraordinary, accounting changes,
             tax loss carry forward, and other gains and losses).
             </summary>
             <remarks>
             Morningstar DataId: 20091
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeCommonStockholders">
             <summary>
             Net income minus the preferred dividends paid as presented in the Income Statement.
             </summary>
             <remarks>
             Morningstar DataId: 20093
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeContinuousOperations">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from: Preferred Dividends;
             Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing Operation; Income from Tax
             Loss Carry forward; Other Gains/Losses.
             </summary>
             <remarks>
             Morningstar DataId: 20094
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetInterestIncome">
             <summary>
             Total interest income minus total interest expense. It represents the difference between interest and dividends earned on interest-
             bearing assets and interest paid to depositors and other creditors.
             </summary>
             <remarks>
             Morningstar DataId: 20095
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetInvestmentIncome">
             <summary>
             Total of interest, dividends, and other earnings derived from the insurance company's invested assets minus the expenses
             associated with these investments. Excluded from this income are capital gains or losses as the result of the sale of assets, as well
             as any unrealized capital gains or losses.
             </summary>
             <remarks>
             Morningstar DataId: 20096
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalRevenue">
             <summary>
             All revenues, sales and income that the company deems as a total sum of all of their income as reported in the company's income
             statement.
             Bank:  Total Revenue = Net Interest Income + Non-Interest Income.
             </summary>
             <remarks>
             Morningstar DataId: 20100
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NonInterestExpense">
             <summary>
             Any expenses that not related to interest. It includes labor and related expense, occupancy and equipment, commission,
             professional expense and contract services expenses, selling, general and administrative, research and development depreciation,
             amortization and depletion, and any other special income/charges.
             </summary>
             <remarks>
             Morningstar DataId: 20105
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NonInterestIncome">
             <summary>
             The total amount of non-interest income which may be derived from: (1) fees and commissions; (2) premiums earned; (3) equity
             investment; (4) the sale or disposal of assets; and (5) other sources not otherwise
             specified.
             </summary>
             <remarks>
             Morningstar DataId: 20106
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OperatingExpense">
             <summary>
             Operating expenses are primary recurring costs associated with central operations (other than cost of goods sold) that are incurred
             in order to generate sales.
             </summary>
             <remarks>
             Morningstar DataId: 20108
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OperatingIncome">
             <summary>
             Income from normal business operations after deducting cost of revenue and operating expenses. It does not include income from
             any investing activities.
             </summary>
             <remarks>
             Morningstar DataId: 20109
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OperatingRevenue">
             <summary>
             The operating revenue for transportation industry can be divided into three parts: revenue-passenger, revenue-cargo, and other
             operating revenue.
             </summary>
             <remarks>
             Morningstar DataId: 20112
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherIncomeExpense">
             <summary>
             Income or expense that comes from miscellaneous sources.
             </summary>
             <remarks>
             Morningstar DataId: 20117
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyAcquisitionExpense">
             <summary>
             Costs that vary with and are primarily related to the acquisition of new and renewal insurance contracts. Also referred to as
             underwriting expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20125
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetPolicyholderBenefitsAndClaims">
             <summary>
             The net provision in current period for future policy benefits, claims, and claims settlement expenses incurred in the claims
             settlement process before the effects of reinsurance arrangements. The value is net of the effects of contracts assumed and
             ceded.
             </summary>
             <remarks>
             Morningstar DataId: 20129
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PreferredStockDividends">
             <summary>
             The amount of dividends declared or paid in the period to preferred shareholders, or the amount for which the obligation to pay
             them dividends arose in the period. Preferred dividends are the amount required for the current year only, and not for any amount
             required in past years.
             </summary>
             <remarks>
             Morningstar DataId: 20134
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalPremiumsEarned">
             <summary>
             Premiums earned is the portion of an insurance written premium which is considered "earned" by the insurer, based on the part of
             the policy period that the insurance has been in effect, and during which the insurer has been exposed to loss.
             </summary>
             <remarks>
             Morningstar DataId: 20135
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PretaxIncome">
             <summary>
             Reported income before the deduction or benefit of income taxes.
             </summary>
             <remarks>
             Morningstar DataId: 20136
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TaxProvision">
             <summary>
             Include any taxes on income, net of any investment tax credits for the current accounting period.
             </summary>
             <remarks>
             Morningstar DataId: 20145
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CreditLossesProvision">
             <summary>
             A charge to income which represents an expense deemed adequate by management given the composition of a bank's credit
             portfolios, their probability of default, the economic environment and the allowance for credit losses already established. Specific
             provisions are established to reduce the book value of specific assets (primarily loans) to establish the amount expected to be
             recovered on the loans.
             </summary>
             <remarks>
             Morningstar DataId: 20146
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ResearchAndDevelopment">
             <summary>
             The aggregate amount of research and development expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20151
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SellingAndMarketingExpense">
             <summary>
             The aggregate total amount of expenses directly related to the marketing or selling of products or services.
             </summary>
             <remarks>
             Morningstar DataId: 20158
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SellingGeneralAndAdministration">
             <summary>
             The aggregate total costs related to selling a firm's product and services, as well as all other general and administrative expenses.
             Selling expenses are those directly related to the company's efforts to generate sales (e.g., sales salaries, commissions,
             advertising, delivery expenses). General and administrative expenses are expenses related to general administration of the
             company's operation (e.g., officers and office salaries, office supplies, telephone, accounting and legal services, and business
             licenses and fees).
             </summary>
             <remarks>
             Morningstar DataId: 20159
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SpecialIncomeCharges">
             <summary>
             Earnings or losses attributable to occurrences or actions by the firm that is either infrequent or unusual.
             </summary>
             <remarks>
             Morningstar DataId: 20162
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalExpenses">
             <summary>
             The sum of operating expense and cost of revenue. If the company does not give the reported number, it will be calculated by
             adding operating expense and cost of revenue.
             </summary>
             <remarks>
             Morningstar DataId: 20164
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AmortizationOfDeferredAcquisitionCosts">
             <summary>
             Financial Accounting Standard (FAS) requires that expenses associated with the sale or acquisition of an insurance policy should be
             deferred to future periods to match the premium income stream from that policy over its lifetime. Hence, the acquisition costs
             incurred in the year of sale is capitalized in order to create the deferred acquisition costs asset and be amortized over the life of the
             policy.
             </summary>
             <remarks>
             Morningstar DataId: 20176
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncome">
             <summary>
             Income generated from interest-bearing deposits or accounts.
             </summary>
             <remarks>
             Morningstar DataId: 20177
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PropertyLiabilityInsuranceClaims">
             <summary>
             The claims made under the liability insurance in order to protect the assets of a business when it is caused by an injury or damage.
             </summary>
             <remarks>
             Morningstar DataId: 20186
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EBIT">
             <summary>
             Earnings minus expenses (excluding interest and tax expenses).
             </summary>
             <remarks>
             Morningstar DataId: 20189
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EBITDA">
             <summary>
             Earnings minus expenses (excluding interest, tax, depreciation, and amortization expenses).
             </summary>
             <remarks>
             Morningstar DataId: 20190
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeContinuousOperationsNetMinorityInterest">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
             Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
             Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
             </summary>
             <remarks>
             Morningstar DataId: 20191
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AccretionOnPreferredStock">
             <summary>
             Two situations may lead to accretion on a preferred stock - accretion related redemption premium and interest-like returns on
             accrued, but unpaid dividends that accumulated from accumulated preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 20192
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AccruedPreferredStockDividends">
             <summary>
             An accrued preferred stock dividend is remuneration owed by a company to its preferred stock holders. Forms of accrued preferred
             stock dividends can be either cash or additional shares of preferred stock.
             </summary>
             <remarks>
             Morningstar DataId: 20193
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AcquiredInProcessRnD">
             <summary>
             In-process research and development that is acquired through a merger or acquisition during the period.
             </summary>
             <remarks>
             Morningstar DataId: 20194
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AcquisitionExpense">
             <summary>
             Costs that vary with and are primarily related to the acquisition of new and renewal insurance contracts. Also referred to as
             underwriting expenses. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20195
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AdministrativeExpense">
             <summary>
             The expenses that an organization incurs not directly tied to a specific function such as manufacturing/production or sales. These
             expenses are related to the organization as a whole as opposed to an individual department
             </summary>
             <remarks>
             Morningstar DataId: 20196
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AgencyFees">
             <summary>
             Fees earned during the period for providing insurance service as an agent. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20197
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AgencyFeesAndCommissions">
             <summary>
             Total agency fees and commissions collected by the insurance company as a part of revenue. This item is usually only available for
             insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20198
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AllowancesForConstruction">
             <summary>
             The establishment of allowances in construction contracts is a convenient method of allocating construction funds to portions of
             the work that cannot be specified with sufficient particularity for competitive bidding at the time of contracting. This item is usually
             not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20199
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CapitalnBusinessTaxes">
             <summary>
             A tax imposed in some countries on the severance and production of coal, oil or gas from the earth or water for sale, transport,
             storage, profit or commercial use. Exemptions from the tax are provided for specific circumstances. This item is usually only
             available for mining industry.
             </summary>
             <remarks>
             Morningstar DataId: 20200
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CededPremiums">
             <summary>
             The amount of premiums paid and payable to another insurer as a result of reinsurance arrangements in order to exchange for that
             company accepting all or part of insurance on a risk or exposure. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20201
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CommissionExpenses">
             <summary>
             Fees paid to another entity or agent based on commission contracts.
             </summary>
             <remarks>
             Morningstar DataId: 20202
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CommissionRevenue">
             <summary>
             The service charge by the insurance company in return for providing advice and handling investment. This item is usually only
             available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20203
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CreditCard">
             <summary>
             Income earned from credit card services including late, over limit, and annual fees. This item is usually only available for bank
             industry.
             </summary>
             <remarks>
             Morningstar DataId: 20204
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DevelopmentExpense">
             <summary>
             The costs associated with transitioning research to a commercially useful and marketable stage.
             </summary>
             <remarks>
             Morningstar DataId: 20205
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DividendIncome">
             <summary>
             Dividends earned from equity investment securities. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20206
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EarningLossOfEquityInvestments">
             <summary>
             The earning or loss resulting from the proportional part of the associated company's net income. This item is usually only available
             for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20207
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EarningsFromEquityInterest">
             <summary>
             The earnings from equity interest can be a result of any of the following: Income from earnings distribution of the business, either
             as dividends paid to corporate shareholders or as drawings in a partnership; Capital gain realized upon sale of the business; Capital
             gain realized from selling his or her interest to other partners. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20208
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ElectricRevenue">
             <summary>
             Revenue from operations of public electric power supply systems, such as sale of electricity to residential, commercial, and
             industrial customers (including electricity for resale by other private or public electric utilities). This item is usually only available for
             utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 20209
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Equipment">
             <summary>
             Equipment expenses include depreciation, repairs, rentals, and service contract costs. This also includes equipment purchases
             which do not qualify for capitalization in accordance with the entity's accounting policy. This item may also include furniture
             expenses. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20210
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ExplorationDevelopmentAndMineralPropertyLeaseExpenses">
             <summary>
             Costs incurred in identifying areas that may warrant examination and in examining specific areas that are considered to have
             prospects of containing energy or metal reserves, including costs of drilling exploratory wells. Development expense is the
             capitalized costs incurred to obtain access to proved reserves and to provide facilities for extracting, treating, gathering and storing
             the energy and metal. Mineral property includes oil and gas wells, mines, and other natural deposits (including geothermal
             deposits). The payment for leasing those properties is called mineral property lease expense. Exploration expense is included in
             operation expenses for mining industry.
             </summary>
             <remarks>
             Morningstar DataId: 20211
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Fees">
             <summary>
             Total fees earned from providing services. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20212
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.FeesAndCommissions">
             <summary>
             Total fees and commissions earned from providing services such as leasing of space or maintaining: (1) depositor accounts; (2)
             transfer agent; (3) fiduciary and trust; (4) brokerage and underwriting; (5) mortgage; (6) credit cards; (7) correspondent clearing;
             and (8) other such services and activities performed for others. This item is usually available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20213
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ForeignExchangeTradingGains">
             <summary>
             Trading revenues that result from foreign exchange exposures such as cash instruments and off-balance sheet derivative
             instruments. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20214
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.Fuel">
             <summary>
             The aggregate amount of fuel cost for current period associated with the revenue generation. This item is usually only available for
             transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20215
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.FuelAndPurchasePower">
             <summary>
             Cost of fuel, purchase power and gas associated with revenue generation. This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 20216
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainOnSaleOfBusiness">
             <summary>
             The amount of excess earned in comparison to fair value when selling a business. This item is usually not available for insurance
             industry.
             </summary>
             <remarks>
             Morningstar DataId: 20217
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainOnSaleOfPPE">
             <summary>
             The amount of excess earned in comparison to the net book value for sale of property, plant, equipment. This item is usually not
             available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20218
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainOnSaleOfSecurity">
             <summary>
             The amount of excess earned in comparison to the original purchase value of the security.
             </summary>
             <remarks>
             Morningstar DataId: 20219
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainsLossOnDisposalOfDiscontinuedOperations">
             <summary>
             Any gain or loss recognized on disposal of discontinued operations, which is the difference between the carrying value of the
             division and its fair value less costs to sell.
             </summary>
             <remarks>
             Morningstar DataId: 20220
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GasRevenue">
             <summary>
             Revenue from operations of public gas supply systems, such as sale of natural gas to residential, commercial, and industrial
             customers (including natural gas for resale by other private or public gas supply utilities); connection fees; and other operations
             revenues. This item is usually only available for utility industry.
             </summary>
             <remarks>
             Morningstar DataId: 20221
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GeneralAccountAssets">
             <summary>
             An undivided investment account in which insurers maintain funds that support contractual obligations for guaranteed insurance
             products such as whole life insurance or fixed-rate annuities. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20222
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GeneralExpense">
             <summary>
             Expense incurred for operations other than selling, administrative, or cost of goods sold
             </summary>
             <remarks>
             Morningstar DataId: 20223
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GrossPremiumsWritten">
             <summary>
             Total premiums generated from all policies written by an insurance company within a given period of time. This item is usually only
             available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20224
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ImpairmentOfCapitalAssets">
             <summary>
             Impairments are considered to be permanent, which is a downward revaluation of fixed assets. If the sum of all estimated future
             cash flows is less than the carrying value of the asset, then the asset would be considered impaired and would have to be written
             down to its fair value. Once an asset is written down, it may only be written back up under very few circumstances. Usually the
             company uses the sum of undiscounted future cash flows to determine if the impairment should occur, and uses the sum of
             discounted future cash flows to make the impairment judgment. The impairment decision emphasizes on capital assets' future
             profit collection ability.
             </summary>
             <remarks>
             Morningstar DataId: 20225
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherImpairmentOfCapitalAssets">
             <summary>
             Impairments are considered to be permanent, which is a downward revaluation of fixed assets. If the sum of all estimated future
             cash flows is less than the carrying value of the asset, then the asset would be considered impaired and would have to be written
             down to its fair value. Once an asset is written down, it may only be written back up under very few circumstances. Usually the
             company uses the sum of undiscounted future cash flows to determine if the impairment should occur, and uses the sum of
             discounted future cash flows to make the impairment judgment. The impairment decision emphasizes on capital assets' future
             profit collection ability; This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20226
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.IncomeFromEquityMethodInvestments">
             <summary>
             Company will report the income earned on the investment on its income statement and the reported value is based on the firm's
             share of the company assets. The reported profit is proportional to the size of the equity investment. This is the standard technique
             used when one company has significant influence over another.
             </summary>
             <remarks>
             Morningstar DataId: 20227
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AcquiredInProcessRnDIncome">
             <summary>
             The in-process research and development acquired through a merger or acquisition during the period, which is related to non-
             operating activity. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20228
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RestructringAndMnAIncome">
             <summary>
             Income related to restructuring, merger, or acquisitions. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20229
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.IncreaseDecreaseInNetUnearnedPremiumReserves">
             <summary>
             Premium might contain a portion of the amount that has been paid in advance for insurance that has not yet been provided, which
             is called unearned premium. If either party cancels the contract, the insurer must have the unearned premium ready to refund.
             Hence, the amount of premium reserve maintained by insurers is called unearned premium reserves, which is prepared for
             liquidation.  This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20230
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InsuranceAndClaims">
             <summary>
             Insurance and claims are the expenses in the period incurred with respect to protection provided by insurance entities against risks
             other than risks associated with production (which is allocated to cost of sales). This item is usually not available for insurance
             industries.
             </summary>
             <remarks>
             Morningstar DataId: 20231
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InsuranceAndPremiums">
             <summary>
             Premiums and Income / Loss from Insurance Activities
             </summary>
             <remarks>
             Morningstar DataId: 20232
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromInterestBearingDeposits">
             <summary>
             This includes Checking account; Savings account; Deposit in foreign offices; Money Market Certificates &amp; Deposit Accounts. This
             item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20233
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForCapitalizedLeaseObligations">
             <summary>
             Aggregate interest expenses incurred on long-term capital lease obligation. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20234
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForDeposit">
             <summary>
             Includes interest expense on the following deposit accounts: Interest-bearing Demand deposit; Checking account; Savings account;
             Deposit in foreign offices; Money Market Certificates &amp; Deposit Accounts. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20235
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell">
             <summary>
             Gross expenses on the purchase of Federal funds at a specified price with a simultaneous agreement to sell the same to the same
             counterparty at a fixed or determinable price at a future date. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20236
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForLongTermDebt">
             <summary>
             The aggregate interest expenses incurred on long-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased for more than one year. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20237
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForLongTermDebtAndCapitalSecurities">
             <summary>
             The aggregate interest expenses incurred on long-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased due longer than one year. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20238
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestExpenseForShortTermDebt">
             <summary>
             The aggregate interest expenses incurred on short-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased within one year. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20239
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromDeposits">
             <summary>
             Interest income generated from all deposit accounts. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20240
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResell">
             <summary>
             The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
             resell the identical security purchased or a security that meets the definition of ""substantially the same"" in the case of a dollar roll.
             Also includes purchases of participations in pools of securities that are subject to a resale agreement; This category includes all
             interest income generated from federal funds sold and securities purchases under agreements to resell; This category includes all
             interest income generated from federal funds sold and securities purchases under agreements to resell.
             </summary>
             <remarks>
             Morningstar DataId: 20241
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromInvestmentSecurities">
             <summary>
             Includes any interest and dividends on investment securities that are not part of money market investments. This item is usually
             only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20242
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromLeases">
             <summary>
             Includes interest and fee income generated by direct lease financing. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20243
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromLoans">
             <summary>
             Loan is a common field to banks. Interest Income from Loans is interest and fee income generated from all loans, which includes
             Commercial loans; Credit loans; Other consumer loans; Real Estate - Construction; Real Estate - Mortgage; Foreign loans. Banks
             earn interest from loans. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20244
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromLoansAndLease">
             <summary>
             Total interest and fee income generated by loans and lease. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20245
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromSecurities">
             <summary>
             Represents total interest and dividend income from U.S. Treasury securities, U.S. government agency and corporation obligations,
             securities issued by states and political subdivisions, other domestic debt securities, foreign debt securities, and equity securities
             (including investments in mutual funds). Excludes interest income from securities held in trading accounts. This item is usually only
             available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20246
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromTradingAccountSecurities">
             <summary>
             Interest income from assets held in trading accounts. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20247
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InvestmentBankingProfit">
             <summary>
             Includes (1) underwriting revenue (the spread between the resale price received and the cost of the securities and related
             expenses) generated through the purchasing, distributing and reselling of new issues of securities (alternatively, could be a
             secondary offering of a large block of previously issued securities); and (2) fees earned for mergers, acquisitions, divestitures,
             restructurings, and other types of financial advisory services. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20248
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LifeAnnuityPremiums">
             <summary>
             Premiums earned from life and annuity insurance. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20249
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LoansHeldForResell">
             <summary>
             Includes the loans that the bank is going to sell at a discount. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20250
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LossAndLossAdjustmentExpectedIncurred">
             <summary>
             Expenses incurred in the course of investigating and settling claims. This item is usually not available for bank and insurance
             industries.
             </summary>
             <remarks>
             Morningstar DataId: 20251
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.MaintenanceAndRepairs">
             <summary>
             The aggregate amount of maintenance and repair expenses in the current period associated with the revenue generation. Mainly
             for fixed assets. This item is usually only available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20252
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.MarketingExpense">
             <summary>
             Expenditures for planning and executing the conception, pricing, promotion, and distribution of ideas, goods, and services.
             </summary>
             <remarks>
             Morningstar DataId: 20253
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeFromOtherMoneyMarketInvestments">
             <summary>
             Includes any interest income collects from money market investments. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20254
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetForeignExchangeGainLoss">
             <summary>
             The aggregate foreign currency translation gain or loss (both realized and unrealized) included as part of revenue. This item is
             usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20255
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetOccupancyExpense">
             <summary>
             Occupancy expense may include items, such as depreciation of facilities and equipment, lease expenses, property taxes and
             property and casualty insurance expense. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20256
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetPremiumsWritten">
             <summary>
             Net premiums written are gross premiums written less ceded premiums. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20257
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetRealizedGainLossOnInvestments">
             <summary>
             Gain or loss realized during the period of time for all kinds of investment securities. In might include trading, available-for-sale, or
             held-to-maturity securities. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20258
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NonRecurringOperationExpense">
             <summary>
             A one-time change expense that the company does not expect to encounter again.
             </summary>
             <remarks>
             Morningstar DataId: 20259
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OccupancyAndEquipment">
             <summary>
             Includes total expenses of occupancy and equipment. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20260
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OperatingTaxesnLicenses">
             <summary>
             Taxes and licenses expenses incurred and are directly related to goods produced and sold and services rendered during the
             reporting period. This item is usually only available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20261
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OperationAndMaintenance">
             <summary>
             The aggregate amount of operation and maintenance expenses, which is the one important operating expense for the utility
             industry. It includes any costs related to production and maintenance cost of the property during the revenue generation process.
             This item is usually only available for mining and utility industries.
             </summary>
             <remarks>
             Morningstar DataId: 20262
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherCustomerServices">
             <summary>
             Represents fees and commissions earned from provide other services. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20263
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherGainLossFromDispositionOfDiscontinuedOperations">
             <summary>
             All other gain/loss from disposition of discontinued operations that are not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20264
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherInterestExpense">
             <summary>
             All other interest expense that is not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20265
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherInterestIncome">
             <summary>
             All other interest income that is not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20266
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherNonInterestExpense">
             <summary>
             All other non interest expense that is not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20267
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherOperatingRevenue">
             <summary>
             For transportation industry, this represents revenue from operation business excluding revenue of cargo and passengers. For utility
             industry, this represents any revenue generated other than electric, gas, and transportation. This item is usually available for
             transportation and utility industries.
             </summary>
             <remarks>
             Morningstar DataId: 20268
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherSpecialCharges">
             <summary>
             All other special charges that are not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20269
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.MiscOtherSpecialCharges">
             <summary>
             All other miscellaneous special charges that are not otherwise classified
             </summary>
             <remarks>
             Morningstar DataId: 20270
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherTaxes">
             <summary>
             Any taxes that are not part of income taxes. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20271
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyFees">
             <summary>
             Fees generated from issuing or renewing an auto insurance policy. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20272
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyholderBenefitsCeded">
             <summary>
             The provision in current period for future policy benefits, claims, and claims settlement, which is under reinsurance arrangements.
             This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20273
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyholderBenefitsGross">
             <summary>
             The gross amount of provision in current period for future policyholder benefits, claims, and claims settlement, incurred in the
             claims settlement process before the effects of reinsurance arrangements. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20274
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyholderDividends">
             <summary>
             Payments made or credits extended to the insured by the company, usually at the end of a policy year results in reducing the net
             insurance cost to the policyholder. Such dividends may be paid in cash to the insured or applied by the insured as reductions of the
             premiums due for the next policy year. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20275
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyholderInterest">
             <summary>
             The periodic income payment provided to the annuitant by the insurance company, which is determined by the assumed interest
             rate (AIR) and other factors. This item is usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20276
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PolicyholderAndReinsurerAccounts">
             <summary>
             The aggregate amount of investment income comes from policyholder account and ceded insurance agreements. This item is
             usually only available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20277
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TrustPreferredSecurities">
             <summary>
             This relates to any distributions and earning adjustments due to Trust Preferred Securities issued by the company and its
             subsidiaries.
             </summary>
             <remarks>
             Morningstar DataId: 20278
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PrincipleTransactionRevenue">
             <summary>
             Schedule of revenue by reporting categories or types of financial instruments, including derivatives but excluding dividends and
             interests, from trading for own account by broker dealers. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20279
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ProfessionalExpenseAndContractServicesExpense">
             <summary>
             Professional and contract service expense includes cost reimbursements for support services related to contracted projects,
             outsourced management, technical and staff support. This item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20280
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PromotionAndAdvertising">
             <summary>
             Costs associated with publicizing a good or need for sale. This category includes only expenses, which are specific as promotion, or
             advertising expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20281
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PropertyCasualtyPremiums">
             <summary>
             Premiums earned for all property and casualty insurance assumed from other insurers as a result of reinsurance arrangements. This
             item is usually only available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20282
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ProvisionForDoubtfulAccounts">
             <summary>
             Amount of the current period expense charged against operations, the offset which is generally to the allowance for doubtful
             accounts for the purpose of reducing receivables, including notes receivable, to an amount that approximates their net realizable
             value (the amount expected to be collected). The category includes provision for loan losses, provision for any doubtful account
             receivable, and bad debt expenses. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20283
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ProvisionForGainLossOnDisposal">
             <summary>
             The amount of current expense charged in order to prepare for the disposal of discontinued operations.
             </summary>
             <remarks>
             Morningstar DataId: 20284
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PurchasedTransportationServices">
             <summary>
             Represents the payment or accrual (net of fare revenues) to other transit agencies, public or private, for providing transportation
             service and purchased transportation (PT) fare revenues. This item is usually only available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20285
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RealizedCapitalGain">
             <summary>
             The amount by which an asset's selling price exceeds its initial purchase price is called capital gain. A realized capital gain is when
             it has been sold at a profit. This item is usually not available for bank and insurance industries.
             </summary>
             <remarks>
             Morningstar DataId: 20286
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RentAndLandingFees">
             <summary>
             Rent fees are the cost of occupying space during the accounting period. Landing fees are a change paid to an airport company for
             landing at a particular airport. This item is not available for insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20287
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ResearchExpense">
             <summary>
             Expenses that may be directed toward the discovery of new facts, natural laws, or phenomena without regard to the immediate
             commercial application to which the results may be put or as costs directed toward more specific goals such as product
             improvement or the perfection and improvement of processes or techniques of production.
             </summary>
             <remarks>
             Morningstar DataId: 20288
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RestructuringAndMergernAcquisition">
             <summary>
             Expenses are related to restructuring, merger, or acquisitions. Restructuring expenses are charges associated with the
             consolidation and relocation of operations, disposition or abandonment of operations or productive assets. Merger and acquisition
             expenses are the amount of costs of a business combination including legal, accounting, and other costs that were charged to
             expense during the period.
             </summary>
             <remarks>
             Morningstar DataId: 20289
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RevenuesCargo">
             <summary>
             Revenue is from transporting cargo and freight between locations. This item is usually only available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20290
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RevenuesPassenger">
             <summary>
             A transportation carrier's fare revenue is recognized in the period from carrying passengers between destinations. This item is
             usually only available for transportation industry.
             </summary>
             <remarks>
             Morningstar DataId: 20291
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SalariesAndWages">
             <summary>
             All salary, wages, compensation, management fees, and employee benefit expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20292
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SecuritiesActivities">
             <summary>
             Income/Loss from Securities and Activities
             </summary>
             <remarks>
             Morningstar DataId: 20293
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SellingExpense">
             <summary>
             Expenses recognized in the period that are directly related to the selling and distribution of products or services.
             </summary>
             <remarks>
             Morningstar DataId: 20294
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ServiceChargeOnDepositorAccounts">
             <summary>
             Includes any service charges on following accounts: Demand Deposit; Checking account; Savings account; Deposit in foreign
             offices; ESCROW accounts; Money Market Certificates &amp; Deposit accounts, CDs (Negotiable Certificates of Deposits); NOW
             Accounts (Negotiable Order of Withdrawal); IRAs (Individual Retirement Accounts). This item is usually only available for bank
             industry.
             </summary>
             <remarks>
             Morningstar DataId: 20295
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ShareInNetIncomeOfUnconsolidatedEntities">
             <summary>
             On the Income Statement; The portion of a firm that is either directly or indirectly controlled by the parent, but not consolidated
             with the parent for purposes of the financial statements.
             </summary>
             <remarks>
             Morningstar DataId: 20296
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TimeDepositsPlaced">
             <summary>
             This item is typically available for bank industry. On the balance sheet, the aggregate amount of time deposits, including certificates
             of deposits, individual retirement accounts and open accounts. On the income statement, it represents interest earned on deposits
             that have to stay in the bank for a certain period of time before they can be collected without sustaining a penalty. Usually includes
             certificates of deposits, individual retirement accounts and open accounts.
             </summary>
             <remarks>
             Morningstar DataId: 20297
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TradingGainLoss">
             <summary>
             A broker-dealer or other financial entity may buy and sell securities exclusively for its own account, sometimes referred to as
             proprietary trading. The profit or loss is measured by the difference between the acquisition cost and the selling price or current
             market or fair value. The net gain or loss, includes both realized and unrealized, from trading cash instruments, equities and
             derivative contracts (including commodity contracts) that has been recognized during the accounting period for the broker dealer or
             other financial entity's own account. This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20298
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TransportationRevenue">
             <summary>
             Revenue from operations of public mass transportation systems (rapid transit, subway, bus, street railway, and commuter rail
             services), such as fares, charter fees, advertising income, and other operations revenues.
             </summary>
             <remarks>
             Morningstar DataId: 20299
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TrustFeesbyCommissions">
             <summary>
             Bank manages funds on behalf of its customers through the operation of various trust accounts. Any fees earned through managing
             those funds are called trust fees, which are recognized when earned. This item is typically available for bank industry.
             </summary>
             <remarks>
             Morningstar DataId: 20300
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.UnderwritingExpenses">
             <summary>
             Also known as Policy Acquisition Costs; and reported by insurance companies.  The cost incurred by an insurer when deciding
             whether to accept or decline a risk; may include meetings with the insureds or brokers, actuarial review of loss history, or physical
             inspections of exposures. Also, expenses deducted from insurance company revenues (including incurred losses and acquisition
             costs) to determine underwriting profit.
             </summary>
             <remarks>
             Morningstar DataId: 20301
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.WriteDown">
             <summary>
             Reducing the book value of an asset because it is overvalued compared to the current market value.
             </summary>
             <remarks>
             Morningstar DataId: 20302
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherWriteDown">
             <summary>
             Reducing the book value of an asset because it is overvalued compared to the current market value.
             </summary>
             <remarks>
             Morningstar DataId: 20303
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.WriteOff">
             <summary>
             A reduction in the value of an asset or earnings by the amount of an expense or loss.
             </summary>
             <remarks>
             Morningstar DataId: 20304
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherWriteOff">
             <summary>
             A reduction in the value of an asset or earnings by the amount of an expense or loss.
             </summary>
             <remarks>
             Morningstar DataId: 20305
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherNonInterestIncome">
             <summary>
             Usually available for the banking industry.  This is Non-Interest Income that is not otherwise classified.
             </summary>
             <remarks>
             Morningstar DataId: 20306
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PremiumTaxesCredit">
             <summary>
             Insurance premium tax is a tax paid by some insurance companies and insurance brokers that sell taxable insurance within the
             united kingdom. This item is typically available for the insurance industry.
             </summary>
             <remarks>
             Morningstar DataId: 20307
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AmortizationOfIntangibles">
             <summary>
             The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
             production) in a systematic and rational manner to the periods expected to benefit from such assets.
             </summary>
             <remarks>
             Morningstar DataId: 20308
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeFromContinuingAndDiscontinuedOperation">
             <summary>
             Net Income from Continuing Operations and Discontinued Operations, added together.
             </summary>
             <remarks>
             Morningstar DataId: 20309
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeFromOtherGainsLosses">
             <summary>
             Any gains or loss not otherwise attributable to Continuing Operations, Discontinued Operations, Extraordinary Items, Accumulated
             Effects of Accounting Changes or Income from Tax Loss Carryforward.
             </summary>
             <remarks>
             Morningstar DataId: 20310
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeFromTaxLossCarryforward">
             <summary>
             Occurs if a company has had a net loss from operations on a previous year that can be carried forward to reduce net income for tax
             purposes.
             </summary>
             <remarks>
             Morningstar DataId: 20311
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherOperatingExpenses">
             <summary>
             The aggregate amount of operating expenses associated with normal operations. Will not include any gain, loss, benefit, or income;
             and its value reported by the company should be &lt;0.
             </summary>
             <remarks>
             Morningstar DataId: 20312
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalMoneyMarketInvestments">
             <summary>
             The sum of the money market investments held by a bank's depositors, which are FDIC insured.
             </summary>
             <remarks>
             Morningstar DataId: 20313
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ReconciledCostOfRevenue">
             <summary>
             The Cost Of Revenue plus Depreciation, Depletion &amp; Amortization from the IncomeStatement; minus Depreciation, Depletion &amp;
             Amortization from the Cash Flow Statement
             </summary>
             <remarks>
             Morningstar DataId: 20314
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ReconciledDepreciation">
             <summary>
             Is Depreciation, Depletion &amp; Amortization from the Cash Flow Statement
             </summary>
             <remarks>
             Morningstar DataId: 20315
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NormalizedIncome">
             <summary>
             This is calculation that reverses the effects of extraordinary income or charges on Net Income, by adding back (extraordinary
             expense) or subtracting (extraordinary income) the value from Net Income.
             </summary>
             <remarks>
             Morningstar DataId: 20316
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NonOperatingExpenses">
             <summary>
             Expenses incurred in performance of activities not directly related to the main business of a firm, such as for the insurance or
             maintenance of the assets.
             </summary>
             <remarks>
             Morningstar DataId: 20317
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NonOperatingIncome">
             <summary>
             The portion of an organization's income that is derived from activities not related to its core operations; such as as dividend income,
             profits (and losses) from investments, gains (or losses) incurred due to foreign exchange, asset write-downs and other non-
             operating revenues and expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20318
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeFromContinuingOperationNetMinorityInterest">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
             Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
             Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
             </summary>
             <remarks>
             Morningstar DataId: 20331
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PrincipleInvestmentGainLoss">
             <summary>
             Gain/Loss on the disposal of the investment.
             </summary>
             <remarks>
             Morningstar DataId: 20332
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossonSaleofAssets">
             <summary>
             Any gain (loss) recognized on the sale of assets or a sale which generates profit or loss, which is a difference between sales price
             and net book value at the disposal time.
             </summary>
             <remarks>
             Morningstar DataId: 20333
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonSaleofLoans">
             <summary>
             Gain on sale of any loans investment.
             </summary>
             <remarks>
             Morningstar DataId: 20334
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonSaleofInvestmentProperty">
             <summary>
             Gain on the disposal of investment property.
             </summary>
             <remarks>
             Morningstar DataId: 20335
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SpecialIncome">
             <summary>
             Special income that is either infrequent or unusual.
             </summary>
             <remarks>
             Morningstar DataId: 20336
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AcquiredinProcessRnDIncomeBanks">
             <summary>
             Income earned through R&amp;D department. This data point applies to the bank and insurance industry only.
             </summary>
             <remarks>
             Morningstar DataId: 20337
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.RestructuringAndMergerAndAcquisitionIncome">
             <summary>
             Relates to restructuring, merger, or acquisitions for non-operating activities. A restructuring charge might be incurred in the process
             of laying off employees, closing manufacturing plants, or shifting production to a new location.
             Merger - When two firms, often of about the same size, agree to go forward as a single new company rather than remain
             separately owned and operated.
             Acquisition - When one company takes over another and clearly establishes itself as the new owner.
             </summary>
             <remarks>
             Morningstar DataId: 20338
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ImpairmentofCapitalAssetsIncome">
             <summary>
             Downward revaluation of fixed assets. Any impairment related with Fixed Assets &amp; Fixed Asset Investments comes under this
             exceptional data item.
             </summary>
             <remarks>
             Morningstar DataId: 20339
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonExtinguishmentofDebt">
             <summary>
             Gain on extinguishment of debt is the accounting gain that results from a debt extinguishment. A debt shall be accounted for as
             having been extinguished in a number of circumstances, including when it has been settled through repayment or replacement by
             another liability. It generally results in an accounting gain or loss. Amount represents the difference between the fair value of the
             payments made and the carrying amount of the debt at the time of its extinguishment.
             </summary>
             <remarks>
             Morningstar DataId: 20340
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SpecialCharge">
             <summary>
             Special expenses that are either infrequent or unusual.
             </summary>
             <remarks>
             Morningstar DataId: 20342
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LossonExtinguishmentofDebt">
             <summary>
             Loss on extinguishment of debt is the accounting loss that results from a debt extinguishment. A debt shall be accounted for as
             having been extinguished in a number of circumstances, including when it has been settled through repayment or replacement by
             another liability. It generally results in an accounting gain or loss. Amount represents the difference between the fair value of the
             payments made and the carrying amount of the debt at the time of its extinguishment.
             </summary>
             <remarks>
             Morningstar DataId: 20343
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EarningsfromEquityInterestNetOfTax">
             <summary>
             Income from other equity interest reported after Provision of Tax. This applies to all industries.
             </summary>
             <remarks>
             Morningstar DataId: 20345
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetIncomeIncludingNoncontrollingInterests">
             <summary>
             Net income of the group after the adjustment of all expenses and benefit.
             </summary>
             <remarks>
             Morningstar DataId: 20346
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherunderPreferredStockDividend">
             <summary>
             Dividend paid to the preferred shareholders before the common stock shareholders.
             </summary>
             <remarks>
             Morningstar DataId: 20347
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.EarningsfromEquityInterestRevenue">
             <summary>
             Earnings from equity interest, accounted for in the Revenue section. An equity interest is a proportion of ownership, typically
             through the investment in a business.
             </summary>
             <remarks>
             Morningstar DataId: 20348
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossfromDisposalSaleofAssets">
             <summary>
             Gain/loss on the disposal of assets.
             </summary>
             <remarks>
             Morningstar DataId: 20349
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossfromDisposalSaleofAssetsOther">
             <summary>
             Gain/loss on the disposal of assets in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20350
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonSaleofOtherRealEstateOwned">
             <summary>
             Gain on disposal of real estate by the bank.
             </summary>
             <remarks>
             Morningstar DataId: 20351
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeRevenue">
             <summary>
             Interest income, accounted for in the Revenue section.
             </summary>
             <remarks>
             Morningstar DataId: 20352
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.LitigationExpense">
             <summary>
             Expenses incurred by the company in relation to legal matters.
             </summary>
             <remarks>
             Morningstar DataId: 20353
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherthanTemporaryImpairmentLossesInvestments">
             <summary>
             Adjustments to the value of investments, excluding temporary write-downs.
             </summary>
             <remarks>
             Morningstar DataId: 20354
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.UnrealizedGainorLoss">
             <summary>
             Unrealized gains/losses incurred by the company in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20355
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangesinInventoriesofFinishedGoodsandWorkinProgress">
             <summary>
             Income/expense due to changes between periods in inventory.
             </summary>
             <remarks>
             Morningstar DataId: 20356
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.WorkPerformedbyEntityandCapitalized">
             <summary>
             An amount paid in respect of work performed by entity.
             </summary>
             <remarks>
             Morningstar DataId: 20357
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DistributionCosts">
             <summary>
             Expenditures occurred on the distribution of the products.
             </summary>
             <remarks>
             Morningstar DataId: 20358
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.StaffCosts">
             <summary>
             Total staff cost which is paid to the employees that is not part of Selling, General, and Administration expense.
             </summary>
             <remarks>
             Morningstar DataId: 20359
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.SocialSecurityCosts">
             <summary>
             Benefits paid to the employees in respect of their work.
             </summary>
             <remarks>
             Morningstar DataId: 20360
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.PensionCosts">
             <summary>
             The expense that a company incurs each year by providing a pension plan for its employees. Major expenses in the pension cost
             include employer matching contributions and management fees.
             </summary>
             <remarks>
             Morningstar DataId: 20361
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherOperatingIncomeTotal">
             <summary>
             Total Other Operating Income- including interest income, dividend income and other types of operating income.
             </summary>
             <remarks>
             Morningstar DataId: 20363
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ShareofOperatingProfitLossfromJointVenturesAndAssociates">
             <summary>
             Share of profit from joint ventures and associates, accounted for in the Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20364
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ExceptionalItems">
             <summary>
             Total value of non-recurring items in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20365
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.IncomefromSharesinSubsidiariesGroupUndertakings">
             <summary>
             Income from the related companies- subsidiaries and other equity holdings, accounted for in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20366
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.IncomefromAssociatesandOtherParticipatingInterests">
             <summary>
             Total income from the associates and joint venture via investment, accounted for in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20367
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalOtherFinanceCost">
             <summary>
             Any other finance cost which is not clearly defined in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20368
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GrossDividendPayment">
             <summary>
             Total amount paid in dividends to investors- this includes dividends paid on equity and non-equity shares.
             </summary>
             <remarks>
             Morningstar DataId: 20371
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestandSimilarIncome">
             <summary>
             Income from cash and cash equivalents, short-term securities, debt securities, mortgage and loans, derivative investments, policy
             loans and other interest income.
             </summary>
             <remarks>
             Morningstar DataId: 20376
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.FeesandCommissionIncome">
             <summary>
             Fees and commission income earned by bank and insurance companies on the rendering services.
             </summary>
             <remarks>
             Morningstar DataId: 20377
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.FeesandCommissionExpense">
             <summary>
             Cost incurred by bank and insurance companies for fees and commission income.
             </summary>
             <remarks>
             Morningstar DataId: 20378
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NetTradingIncome">
             <summary>
             Any trading income on the securities.
             </summary>
             <remarks>
             Morningstar DataId: 20379
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OutwardReinsurancePremiums">
             <summary>
             Payment of reinsurance premium.
             </summary>
             <remarks>
             Morningstar DataId: 20380
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherStaffCosts">
             <summary>
             Other costs in incurred in lieu of the employees that cannot be identified by other specific items in the Staff Costs section.
             </summary>
             <remarks>
             Morningstar DataId: 20381
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ShareBasedPayments">
             <summary>
             Stock based expenses that occur in normal activities.
             </summary>
             <remarks>
             Morningstar DataId: 20382
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonInvestmentProperties">
             <summary>
             Gain on disposal and change in fair value of investment properties.
             </summary>
             <remarks>
             Morningstar DataId: 20383
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.AverageDilutionEarnings">
             <summary>
             Adjustments to reported net income to calculate Diluted EPS, by assuming that all convertible instruments are converted to
             Common Equity. The adjustments usually include the interest expense of debentures when assumed converted and preferred
             dividends of convertible preferred stock when assumed converted.
             </summary>
             <remarks>
             Morningstar DataId: 20385
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainonRedemptionandExtinguishmentofDebt">
             <summary>
             Gain on the redemption of the loan or repayment of the loan.
             </summary>
             <remarks>
             Morningstar DataId: 20389
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.MiscellaneousOtherOperatingIncome">
             <summary>
             Other income of the company that cannot be identified by other specific items in the Operating Income section.
             </summary>
             <remarks>
             Morningstar DataId: 20390
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossonFinancialInstrumentsDesignatedasCashFlowHedges">
             <summary>
             Gain/Loss through hedging activities.
             </summary>
             <remarks>
             Morningstar DataId: 20391
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossonDerecognitionofAvailableForSaleFinancialAssets">
             <summary>
             Gain/loss on the write-off of financial assets available-for-sale.
             </summary>
             <remarks>
             Morningstar DataId: 20392
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotal">
             <summary>
             Gain/loss on the write-off of any non-current assets.
             </summary>
             <remarks>
             Morningstar DataId: 20393
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NegativeGoodwillImmediatelyRecognized">
             <summary>
             Negative Goodwill recognized in the Income Statement. Negative Goodwill arises where the net assets at the date of acquisition,
             fairly valued, falls below the cost of acquisition.
             </summary>
             <remarks>
             Morningstar DataId: 20394
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotal">
             <summary>
             Gain or loss on derivatives investment due to the fair value adjustment.
             </summary>
             <remarks>
             Morningstar DataId: 20395
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ImpairmentLossesReversalsFinancialInstrumentsNet">
             <summary>
             Impairment or reversal of impairment on financial instrument such as derivative. This is a contra account under Total Revenue in
             banks.
             </summary>
             <remarks>
             Morningstar DataId: 20396
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ShareofProfitLossfromEquityAccountedInvestments">
             <summary>
             Income from equity investments in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20397
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ClaimsandPaidIncurred">
             <summary>
             All reported claims arising out of incidents in that year are considered incurred grouped with claims paid out.
             </summary>
             <remarks>
             Morningstar DataId: 20400
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ReinsuranceRecoveriesClaimsandBenefits">
             <summary>
             Claim on the reinsurance company and take the benefits.
             </summary>
             <remarks>
             Morningstar DataId: 20401
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangeinInsuranceLiabilitiesNetofReinsurance">
             <summary>
             Income/Expense due to changes between periods in insurance liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 20402
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangeinInvestmentContract">
             <summary>
             Income/Expense due to changes between periods in Investment Contracts.
             </summary>
             <remarks>
             Morningstar DataId: 20405
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangeinReinsuranceAssets">
             <summary>
             Income/Expense due to changes between periods in Reinsurance Assets.
             </summary>
             <remarks>
             Morningstar DataId: 20408
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.CreditRiskProvisions">
             <summary>
             Provision for the risk of loss of principal or loss of a financial reward stemming from a borrower's failure to repay a loan or otherwise
             meet a contractual obligation. Credit risk arises whenever a borrower is expecting to use future cash flows to pay a current debt.
             Investors are compensated for assuming credit risk by way of interest payments from the borrower or issuer of a debt obligation.
             This is a contra account under Total Revenue in banks.
             </summary>
             <remarks>
             Morningstar DataId: 20409
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.WagesandSalaries">
             <summary>
             This is the portion under Staff Costs that represents salary paid to the employees in respect of their work.
             </summary>
             <remarks>
             Morningstar DataId: 20411
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherNonOperatingIncomeExpenses">
             <summary>
             Total other income and expense of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20412
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InterestIncomeOtherOperatingIncome">
             <summary>
             Interest income earned by normal operating activities.
             </summary>
             <remarks>
             Morningstar DataId: 20413
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherNonOperatingIncome">
             <summary>
             Other income of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20414
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.OtherNonOperatingExpenses">
             <summary>
             Other expenses of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
             <remarks>
             Morningstar DataId: 20415
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalUnusualItems">
             <summary>
             Total unusual items including Negative Goodwill.
             </summary>
             <remarks>
             Morningstar DataId: 20416
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalUnusualItemsExcludingGoodwill">
             <summary>
             The sum of all the identifiable operating and non-operating unusual items.
             </summary>
             <remarks>
             Morningstar DataId: 20417
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TaxRateForCalcs">
             <summary>
             Tax rate used for Morningstar calculations.
             </summary>
             <remarks>
             Morningstar DataId: 20418
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TaxEffectOfUnusualItems">
             <summary>
             Tax effect of the usual items
             </summary>
             <remarks>
             Morningstar DataId: 20419
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.NormalizedEBITDA">
             <summary>
             EBITDA - Total Unusual Items
             </summary>
             <remarks>
             Morningstar DataId: 20420
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCosts">
             <summary>
             Gain or loss resulting from an appreciation or devaluation of the non-local currency from borrowings related interest income or
             expenses.
             </summary>
             <remarks>
             Morningstar DataId: 20421
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.StockBasedCompensation">
             <summary>
             The cost to the company for granting stock options to reward employees.
             </summary>
             <remarks>
             Morningstar DataId: 20422
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ISFileDate">
             <summary>
             Filing date of the Income Statement.
             </summary>
             <remarks>
             Morningstar DataId: 20423
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.DilutedNIAvailtoComStockholders">
             <summary>
             Net income to calculate Diluted EPS, accounting for adjustments assuming that all the convertible instruments are being converted
             to Common Equity.
             </summary>
             <remarks>
             Morningstar DataId: 20424
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.InvestmentContractLiabilitiesIncurred">
             <summary>
             Income/Expenses due to the insurer's liabilities incurred in Investment Contracts.
             </summary>
             <remarks>
             Morningstar DataId: 20425
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ReinsuranceRecoveriesofInvestmentContract">
             <summary>
             Income/Expense due to recoveries from reinsurers for Investment Contracts.
             </summary>
             <remarks>
             Morningstar DataId: 20426
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalDividendPaymentofEquityShares">
             <summary>
             Total amount paid in dividends to equity securities investors.
             </summary>
             <remarks>
             Morningstar DataId: 20429
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.TotalDividendPaymentofNonEquityShares">
             <summary>
             Total amount paid in dividends to Non-Equity securities investors.
             </summary>
             <remarks>
             Morningstar DataId: 20430
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangeinTheGrossProvisionforUnearnedPremiums">
             <summary>
             The change in the amount of the unearned premium reserves maintained by insurers.
             </summary>
             <remarks>
             Morningstar DataId: 20431
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShare">
             <summary>
             The change in the amount of unearned premium reserve to be covered by reinsurers.
             </summary>
             <remarks>
             Morningstar DataId: 20432
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ClaimsandChangeinInsuranceLiabilities">
             <summary>
             Income/Expense due to the insurer's changes in insurance liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 20433
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeStatement.ReinsuranceRecoveriesofInsuranceLiabilities">
             <summary>
             Income/Expense due to recoveries from reinsurers for insurance liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 20434
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeStatement.#ctor">
             <summary>
             Creates an instance of the IncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeStatement.UpdateValues(QuantConnect.Data.Fundamental.IncomeStatement)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MultiPeriodField">
             <summary>
             Abstract base class for multi-period fields
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.MultiPeriodField.Store">
             <summary>
             The dictionary store containing all values for the multi-period field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MultiPeriodField.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.GetPeriodValue(System.String)">
             <summary>
             Gets the value of the field for the requested period
             </summary>
             <param name="period">The requested period</param>
             <returns>The value for the period</returns>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MultiPeriodField.Value">
             <summary>
             Returns the default value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.op_Implicit(QuantConnect.Data.Fundamental.MultiPeriodField)~System.Decimal">
             <summary>
             Returns the default value for the field
             </summary>
             <param name="field"></param>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.SetPeriodValue(System.String,System.Decimal)">
             <summary>
             Sets the value of the field for the specified period
             </summary>
             <param name="period">The period</param>
             <param name="value">The value to be set</param>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.HasValues">
             <summary>
             Returns true if the field has at least one value for one period
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.UpdateValues(QuantConnect.Data.Fundamental.MultiPeriodField)">
             <summary>
             Sets period values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MultiPeriodField.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationIncomeStatement">
             <summary>
             Used to reduce the value of intangible fixed assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement">
             <summary>
             The gradual elimination of a liability, such as a mortgage, in regular payments over a specified period of time. Such payments must
             be sufficient to cover both principal and interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SecuritiesAmortizationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesAmortizationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesAmortizationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement">
             <summary>
             The aggregate cost of goods produced and sold and services rendered during the reporting period. It excludes all operating
             expenses such as depreciation, depletion, amortization, and SG&amp;A. For the must have cost industry, if the number is not reported
             by the company, it will be calculated based on accounting equation.
             Cost of Revenue = Revenue - Operating Expenses - Operating Profit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CostOfRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CostOfRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CostOfRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement">
             <summary>
             Any cumulative gains or losses from change in accounting principles. A change in accounting principle constitutes a change from
             one generally accepted accounting principle to another generally accepted accounting principle. This may also include a change in
             the method of applying an accounting principle, such as depreciation or inventory methods.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CumulativeEffectOfAccountingChangeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CumulativeEffectOfAccountingChangeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepletionIncomeStatement">
             <summary>
             Used to reduce the value of natural resource.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepletionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DepletionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepletionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepletionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationIncomeStatement">
             <summary>
             Used to reduce the value of tangible fixed assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement">
             <summary>
             The current period expense charged against earnings on long-lived, physical assets used in the normal conduct of business and not
             intended for resale to allocate or recognize the cost of assets over their useful lives; or to record the reduction in book value of an
             intangible asset over the benefit period of such asset. Examples include buildings, production and equipment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationAndAmortizationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAndAmortizationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationAndAmortizationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement">
             <summary>
             It is a non-cash charge that represents a reduction in the value of fixed assets due to wear, age, or obsolescence. This figure also
             includes amortization of leased property, intangibles, and goodwill, and depletion.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationAmortizationDepletionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationAmortizationDepletionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement">
             <summary>
             To be classified as discontinued operations, if both of the following conditions are met:
             1: The operations and cash flow of the component have been or will be removed from the ongoing operations of the entity as a
             result of the disposal transaction, and
             2: The entity will have no significant continuing involvement in the operations of the component after the disposal transaction.
             The discontinued operation is reported net of tax.
             Gains/Loss on Disposal of Discontinued Operations: Any gains or loss recognized on disposal of discontinued operations,
             which is the difference between the carrying value of the division and its fair value less costs to sell.
             Provision for Gain/Loss on Disposal: The amount of current expense charged in order to prepare for the disposal of
             discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeDiscontinuousOperationsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeDiscontinuousOperationsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeDiscontinuousOperationsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement">
             <summary>
             Excise taxes are taxes paid when purchases are made on a specific good, such as gasoline. Excise taxes are often included in the
             price of the product. There are also excise taxes on activities, such as on wagering or on highway usage by trucks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ExciseTaxesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExciseTaxesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ExciseTaxesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement">
             <summary>
             Gains (losses), whether arising from extinguishment of debt, prior period adjustments, or from other events or transactions, that are
             both unusual in nature and infrequent in occurrence thereby meeting the criteria for an event or transaction to be classified as an
             extraordinary item.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeExtraordinaryIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeExtraordinaryIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeExtraordinaryIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement">
             <summary>
             The aggregate amount of fees, commissions, and other income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FeeRevenueAndOtherIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeeRevenueAndOtherIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FeeRevenueAndOtherIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement">
             <summary>
             The aggregate total of general managing and administering expenses for the company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GeneralAndAdministrativeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralAndAdministrativeExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GeneralAndAdministrativeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement">
             <summary>
             Total revenue less cost of revenue. The number is as reported by the company on the income statement; however, the number will
             be calculated if it is not reported. This field is null if the cost of revenue is not given.
             Gross Profit = Total Revenue - Cost of Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GrossProfitIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossProfitIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossProfitIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement">
             <summary>
             Relates to the general cost of borrowing money. It is the price that a lender charges a borrower for the use of the lender's money.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement">
             <summary>
             Interest expense caused by long term financing activities; such as interest expense incurred on trading liabilities, commercial paper,
             long-term debt, capital leases, deposits, and all other borrowings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseNonOperatingIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseNonOperatingIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseNonOperatingIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement">
             <summary>
             Interest expense caused by normal operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseOperatingIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseOperatingIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseOperatingIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement">
             <summary>
             Net interest and dividend income or expense, including any amortization and accretion (as applicable) of discounts and premiums,
             including consideration of the provisions for loan, lease, credit, and other related losses, if any.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeAfterProvisionForLoanLossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeAfterProvisionForLoanLossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeAfterProvisionForLoanLossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement">
             <summary>
             Interest income earned from long term financing activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeNonOperatingIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeNonOperatingIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeNonOperatingIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement">
             <summary>
             Interest income earned by normal operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeOperatingIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeOperatingIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeOperatingIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement">
             <summary>
             Net-Non Operating interest income or expenses caused by financing activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetNonOperatingInterestIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetNonOperatingInterestIncomeExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetNonOperatingInterestIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement">
             <summary>
             Net operating interest income or expense caused by normal operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetOperatingInterestIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOperatingInterestIncomeExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOperatingInterestIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement">
             <summary>
             Losses generally refer to (1) the amount of reduction in the value of an insured's property caused by an insured peril, (2) the amount
             sought through an insured's claim, or (3) the amount paid on behalf of an insured under an insurance contract.  Loss Adjustment
             Expenses is expenses incurred in the course of investigating and settling claims that includes any legal and adjusters' fees and the
             costs of paying claims and all related expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LossAdjustmentExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossAdjustmentExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LossAdjustmentExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement">
             <summary>
             Represents par or stated value of the subsidiary stock not owned by the parent company plus the minority interest's equity in the
             surplus of the subsidiary. This item includes preferred dividend averages on the minority preferred stock (preferred shares not
             owned by the reporting parent company). Minority interest also refers to stockholders who own less than 50% of a subsidiary's
             outstanding voting common stock. The minority stockholders hold an interest in the subsidiary's net assets and share earnings with
             the parent company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the MinorityInterestsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MinorityInterestsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement">
             <summary>
             Includes all the operations (continuing and discontinued) and all the other income or charges (extraordinary, accounting changes,
             tax loss carry forward, and other gains and losses).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement">
             <summary>
             Net income minus the preferred dividends paid as presented in the Income Statement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeCommonStockholdersIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeCommonStockholdersIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeCommonStockholdersIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from: Preferred Dividends;
             Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing Operation; Income from Tax
             Loss Carry forward; Other Gains/Losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeContinuousOperationsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeContinuousOperationsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement">
             <summary>
             Total interest income minus total interest expense. It represents the difference between interest and dividends earned on interest-
             bearing assets and interest paid to depositors and other creditors.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInterestIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement">
             <summary>
             Total of interest, dividends, and other earnings derived from the insurance company's invested assets minus the expenses
             associated with these investments. Excluded from this income are capital gains or losses as the result of the sale of assets, as well
             as any unrealized capital gains or losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetInvestmentIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInvestmentIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetInvestmentIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement">
             <summary>
             All revenues, sales and income that the company deems as a total sum of all of their income as reported in the company's income
             statement.
             Bank:  Total Revenue = Net Interest Income + Non-Interest Income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement">
             <summary>
             Any expenses that not related to interest. It includes labor and related expense, occupancy and equipment, commission,
             professional expense and contract services expenses, selling, general and administrative, research and development depreciation,
             amortization and depletion, and any other special income/charges.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NonInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement">
             <summary>
             The total amount of non-interest income which may be derived from: (1) fees and commissions; (2) premiums earned; (3) equity
             investment; (4) the sale or disposal of assets; and (5) other sources not otherwise
             specified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NonInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement">
             <summary>
             Operating expenses are primary recurring costs associated with central operations (other than cost of goods sold) that are incurred
             in order to generate sales.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OperatingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement">
             <summary>
             Income from normal business operations after deducting cost of revenue and operating expenses. It does not include income from
             any investing activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement">
             <summary>
             The operating revenue for transportation industry can be divided into three parts: revenue-passenger, revenue-cargo, and other
             operating revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OperatingRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement">
             <summary>
             Income or expense that comes from miscellaneous sources.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherIncomeExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherIncomeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement">
             <summary>
             Costs that vary with and are primarily related to the acquisition of new and renewal insurance contracts. Also referred to as
             underwriting expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyAcquisitionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyAcquisitionExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyAcquisitionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement">
             <summary>
             The net provision in current period for future policy benefits, claims, and claims settlement expenses incurred in the claims
             settlement process before the effects of reinsurance arrangements. The value is net of the effects of contracts assumed and
             ceded.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetPolicyholderBenefitsAndClaimsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPolicyholderBenefitsAndClaimsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetPolicyholderBenefitsAndClaimsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement">
             <summary>
             The amount of dividends declared or paid in the period to preferred shareholders, or the amount for which the obligation to pay
             them dividends arose in the period. Preferred dividends are the amount required for the current year only, and not for any amount
             required in past years.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PreferredStockDividendsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockDividendsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockDividendsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement">
             <summary>
             Premiums earned is the portion of an insurance written premium which is considered "earned" by the insurer, based on the part of
             the policy period that the insurance has been in effect, and during which the insurer has been exposed to loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalPremiumsEarnedIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalPremiumsEarnedIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalPremiumsEarnedIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement">
             <summary>
             Reported income before the deduction or benefit of income taxes.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PretaxIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PretaxIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PretaxIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement">
             <summary>
             Include any taxes on income, net of any investment tax credits for the current accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TaxProvisionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxProvisionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxProvisionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement">
             <summary>
             A charge to income which represents an expense deemed adequate by management given the composition of a bank's credit
             portfolios, their probability of default, the economic environment and the allowance for credit losses already established. Specific
             provisions are established to reduce the book value of specific assets (primarily loans) to establish the amount expected to be
             recovered on the loans.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CreditLossesProvisionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditLossesProvisionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CreditLossesProvisionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement">
             <summary>
             The aggregate amount of research and development expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ResearchAndDevelopmentIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ResearchAndDevelopmentIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ResearchAndDevelopmentIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement">
             <summary>
             The aggregate total amount of expenses directly related to the marketing or selling of products or services.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SellingAndMarketingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingAndMarketingExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SellingAndMarketingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement">
             <summary>
             The aggregate total costs related to selling a firm's product and services, as well as all other general and administrative expenses.
             Selling expenses are those directly related to the company's efforts to generate sales (e.g., sales salaries, commissions,
             advertising, delivery expenses). General and administrative expenses are expenses related to general administration of the
             company's operation (e.g., officers and office salaries, office supplies, telephone, accounting and legal services, and business
             licenses and fees).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SellingGeneralAndAdministrationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingGeneralAndAdministrationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SellingGeneralAndAdministrationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement">
             <summary>
             Earnings or losses attributable to occurrences or actions by the firm that is either infrequent or unusual.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SpecialIncomeChargesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialIncomeChargesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SpecialIncomeChargesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement">
             <summary>
             The sum of operating expense and cost of revenue. If the company does not give the reported number, it will be calculated by
             adding operating expense and cost of revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement">
             <summary>
             Financial Accounting Standard (FAS) requires that expenses associated with the sale or acquisition of an insurance policy should be
             deferred to future periods to match the premium income stream from that policy over its lifetime. Hence, the acquisition costs
             incurred in the year of sale is capitalized in order to create the deferred acquisition costs asset and be amortized over the life of the
             policy.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationOfDeferredAcquisitionCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfDeferredAcquisitionCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationOfDeferredAcquisitionCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement">
             <summary>
             Income generated from interest-bearing deposits or accounts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement">
             <summary>
             The claims made under the liability insurance in order to protect the assets of a business when it is caused by an injury or damage.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PropertyLiabilityInsuranceClaimsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertyLiabilityInsuranceClaimsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PropertyLiabilityInsuranceClaimsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EBITIncomeStatement">
             <summary>
             Earnings minus expenses (excluding interest and tax expenses).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EBITIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EBITIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EBITDAIncomeStatement">
             <summary>
             Earnings minus expenses (excluding interest, tax, depreciation, and amortization expenses).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EBITDAIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITDAIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EBITDAIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
             Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
             Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement">
             <summary>
             Two situations may lead to accretion on a preferred stock - accretion related redemption premium and interest-like returns on
             accrued, but unpaid dividends that accumulated from accumulated preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AccretionOnPreferredStockIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccretionOnPreferredStockIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccretionOnPreferredStockIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement">
             <summary>
             An accrued preferred stock dividend is remuneration owed by a company to its preferred stock holders. Forms of accrued preferred
             stock dividends can be either cash or additional shares of preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AccruedPreferredStockDividendsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedPreferredStockDividendsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedPreferredStockDividendsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement">
             <summary>
             In-process research and development that is acquired through a merger or acquisition during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AcquiredInProcessRnDIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AcquiredInProcessRnDIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement">
             <summary>
             Costs that vary with and are primarily related to the acquisition of new and renewal insurance contracts. Also referred to as
             underwriting expenses. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AcquisitionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquisitionExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AcquisitionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement">
             <summary>
             The expenses that an organization incurs not directly tied to a specific function such as manufacturing/production or sales. These
             expenses are related to the organization as a whole as opposed to an individual department
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AdministrativeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdministrativeExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdministrativeExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement">
             <summary>
             Fees earned during the period for providing insurance service as an agent. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AgencyFeesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AgencyFeesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AgencyFeesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement">
             <summary>
             Total agency fees and commissions collected by the insurance company as a part of revenue. This item is usually only available for
             insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AgencyFeesAndCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AgencyFeesAndCommissionsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AgencyFeesAndCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement">
             <summary>
             The establishment of allowances in construction contracts is a convenient method of allocating construction funds to portions of
             the work that cannot be specified with sufficient particularity for competitive bidding at the time of contracting. This item is usually
             not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AllowancesForConstructionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowancesForConstructionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllowancesForConstructionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement">
             <summary>
             A tax imposed in some countries on the severance and production of coal, oil or gas from the earth or water for sale, transport,
             storage, profit or commercial use. Exemptions from the tax are provided for specific circumstances. This item is usually only
             available for mining industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CapitalnBusinessTaxesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalnBusinessTaxesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapitalnBusinessTaxesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement">
             <summary>
             The amount of premiums paid and payable to another insurer as a result of reinsurance arrangements in order to exchange for that
             company accepting all or part of insurance on a risk or exposure. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CededPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CededPremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CededPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement">
             <summary>
             Fees paid to another entity or agent based on commission contracts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CommissionExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommissionExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement">
             <summary>
             The service charge by the insurance company in return for providing advice and handling investment. This item is usually only
             available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CommissionRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommissionRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CreditCardIncomeStatement">
             <summary>
             Income earned from credit card services including late, over limit, and annual fees. This item is usually only available for bank
             industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CreditCardIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditCardIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CreditCardIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement">
             <summary>
             The costs associated with transitioning research to a commercially useful and marketable stage.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DevelopmentExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DevelopmentExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DevelopmentExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement">
             <summary>
             Dividends earned from equity investment securities. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DividendIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement">
             <summary>
             The earning or loss resulting from the proportional part of the associated company's net income. This item is usually only available
             for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EarningLossOfEquityInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningLossOfEquityInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EarningLossOfEquityInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement">
             <summary>
             The earnings from equity interest can be a result of any of the following: Income from earnings distribution of the business, either
             as dividends paid to corporate shareholders or as drawings in a partnership; Capital gain realized upon sale of the business; Capital
             gain realized from selling his or her interest to other partners. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EarningsFromEquityInterestIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsFromEquityInterestIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EarningsFromEquityInterestIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement">
             <summary>
             Revenue from operations of public electric power supply systems, such as sale of electricity to residential, commercial, and
             industrial customers (including electricity for resale by other private or public electric utilities). This item is usually only available for
             utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ElectricRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ElectricRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ElectricRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EquipmentIncomeStatement">
             <summary>
             Equipment expenses include depreciation, repairs, rentals, and service contract costs. This also includes equipment purchases
             which do not qualify for capitalization in accordance with the entity's accounting policy. This item may also include furniture
             expenses. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EquipmentIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquipmentIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EquipmentIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement">
             <summary>
             Costs incurred in identifying areas that may warrant examination and in examining specific areas that are considered to have
             prospects of containing energy or metal reserves, including costs of drilling exploratory wells. Development expense is the
             capitalized costs incurred to obtain access to proved reserves and to provide facilities for extracting, treating, gathering and storing
             the energy and metal. Mineral property includes oil and gas wells, mines, and other natural deposits (including geothermal
             deposits). The payment for leasing those properties is called mineral property lease expense. Exploration expense is included in
             operation expenses for mining industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FeesIncomeStatement">
             <summary>
             Total fees earned from providing services. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FeesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FeesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement">
             <summary>
             Total fees and commissions earned from providing services such as leasing of space or maintaining: (1) depositor accounts; (2)
             transfer agent; (3) fiduciary and trust; (4) brokerage and underwriting; (5) mortgage; (6) credit cards; (7) correspondent clearing;
             and (8) other such services and activities performed for others. This item is usually available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FeesAndCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesAndCommissionsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FeesAndCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement">
             <summary>
             Trading revenues that result from foreign exchange exposures such as cash instruments and off-balance sheet derivative
             instruments. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ForeignExchangeTradingGainsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignExchangeTradingGainsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ForeignExchangeTradingGainsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FuelIncomeStatement">
             <summary>
             The aggregate amount of fuel cost for current period associated with the revenue generation. This item is usually only available for
             transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FuelIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FuelIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement">
             <summary>
             Cost of fuel, purchase power and gas associated with revenue generation. This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FuelAndPurchasePowerIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelAndPurchasePowerIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FuelAndPurchasePowerIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement">
             <summary>
             The amount of excess earned in comparison to fair value when selling a business. This item is usually not available for insurance
             industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainOnSaleOfBusinessIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfBusinessIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainOnSaleOfBusinessIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement">
             <summary>
             The amount of excess earned in comparison to the net book value for sale of property, plant, equipment. This item is usually not
             available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainOnSaleOfPPEIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfPPEIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainOnSaleOfPPEIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement">
             <summary>
             The amount of excess earned in comparison to the original purchase value of the security.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainOnSaleOfSecurityIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnSaleOfSecurityIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainOnSaleOfSecurityIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement">
             <summary>
             Any gain or loss recognized on disposal of discontinued operations, which is the difference between the carrying value of the
             division and its fair value less costs to sell.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainsLossOnDisposalOfDiscontinuedOperationsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement">
             <summary>
             Revenue from operations of public gas supply systems, such as sale of natural gas to residential, commercial, and industrial
             customers (including natural gas for resale by other private or public gas supply utilities); connection fees; and other operations
             revenues. This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GasRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GasRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GasRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement">
             <summary>
             An undivided investment account in which insurers maintain funds that support contractual obligations for guaranteed insurance
             products such as whole life insurance or fixed-rate annuities. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GeneralAccountAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralAccountAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GeneralAccountAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement">
             <summary>
             Expense incurred for operations other than selling, administrative, or cost of goods sold
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GeneralExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GeneralExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement">
             <summary>
             Total premiums generated from all policies written by an insurance company within a given period of time. This item is usually only
             available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GrossPremiumsWrittenIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossPremiumsWrittenIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossPremiumsWrittenIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement">
             <summary>
             Impairments are considered to be permanent, which is a downward revaluation of fixed assets. If the sum of all estimated future
             cash flows is less than the carrying value of the asset, then the asset would be considered impaired and would have to be written
             down to its fair value. Once an asset is written down, it may only be written back up under very few circumstances. Usually the
             company uses the sum of undiscounted future cash flows to determine if the impairment should occur, and uses the sum of
             discounted future cash flows to make the impairment judgment. The impairment decision emphasizes on capital assets' future
             profit collection ability.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ImpairmentOfCapitalAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentOfCapitalAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ImpairmentOfCapitalAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement">
             <summary>
             Impairments are considered to be permanent, which is a downward revaluation of fixed assets. If the sum of all estimated future
             cash flows is less than the carrying value of the asset, then the asset would be considered impaired and would have to be written
             down to its fair value. Once an asset is written down, it may only be written back up under very few circumstances. Usually the
             company uses the sum of undiscounted future cash flows to determine if the impairment should occur, and uses the sum of
             discounted future cash flows to make the impairment judgment. The impairment decision emphasizes on capital assets' future
             profit collection ability; This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherImpairmentOfCapitalAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherImpairmentOfCapitalAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherImpairmentOfCapitalAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement">
             <summary>
             Company will report the income earned on the investment on its income statement and the reported value is based on the firm's
             share of the company assets. The reported profit is proportional to the size of the equity investment. This is the standard technique
             used when one company has significant influence over another.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the IncomeFromEquityMethodInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeFromEquityMethodInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomeFromEquityMethodInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement">
             <summary>
             The in-process research and development acquired through a merger or acquisition during the period, which is related to non-
             operating activity. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AcquiredInProcessRnDIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredInProcessRnDIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AcquiredInProcessRnDIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement">
             <summary>
             Income related to restructuring, merger, or acquisitions. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RestructringAndMnAIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructringAndMnAIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestructringAndMnAIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement">
             <summary>
             Premium might contain a portion of the amount that has been paid in advance for insurance that has not yet been provided, which
             is called unearned premium. If either party cancels the contract, the insurer must have the unearned premium ready to refund.
             Hence, the amount of premium reserve maintained by insurers is called unearned premium reserves, which is prepared for
             liquidation.  This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement">
             <summary>
             Insurance and claims are the expenses in the period incurred with respect to protection provided by insurance entities against risks
             other than risks associated with production (which is allocated to cost of sales). This item is usually not available for insurance
             industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InsuranceAndClaimsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceAndClaimsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceAndClaimsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement">
             <summary>
             Premiums and Income / Loss from Insurance Activities
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InsuranceAndPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceAndPremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceAndPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement">
             <summary>
             This includes Checking account; Savings account; Deposit in foreign offices; Money Market Certificates &amp; Deposit Accounts. This
             item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromInterestBearingDepositsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromInterestBearingDepositsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromInterestBearingDepositsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement">
             <summary>
             Aggregate interest expenses incurred on long-term capital lease obligation. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForCapitalizedLeaseObligationsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForCapitalizedLeaseObligationsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForCapitalizedLeaseObligationsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement">
             <summary>
             Includes interest expense on the following deposit accounts: Interest-bearing Demand deposit; Checking account; Savings account;
             Deposit in foreign offices; Money Market Certificates &amp; Deposit Accounts. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForDepositIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForDepositIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForDepositIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement">
             <summary>
             Gross expenses on the purchase of Federal funds at a specified price with a simultaneous agreement to sell the same to the same
             counterparty at a fixed or determinable price at a future date. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement">
             <summary>
             The aggregate interest expenses incurred on long-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased for more than one year. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForLongTermDebtIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForLongTermDebtIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement">
             <summary>
             The aggregate interest expenses incurred on long-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased due longer than one year. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement">
             <summary>
             The aggregate interest expenses incurred on short-term borrowings and any interest expenses on fixed assets (property, plant,
             equipment) that are leased within one year. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestExpenseForShortTermDebtIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestExpenseForShortTermDebtIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestExpenseForShortTermDebtIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement">
             <summary>
             Interest income generated from all deposit accounts. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromDepositsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromDepositsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromDepositsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement">
             <summary>
             The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
             resell the identical security purchased or a security that meets the definition of ""substantially the same"" in the case of a dollar roll.
             Also includes purchases of participations in pools of securities that are subject to a resale agreement; This category includes all
             interest income generated from federal funds sold and securities purchases under agreements to resell; This category includes all
             interest income generated from federal funds sold and securities purchases under agreements to resell.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement">
             <summary>
             Includes any interest and dividends on investment securities that are not part of money market investments. This item is usually
             only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromInvestmentSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromInvestmentSecuritiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromInvestmentSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement">
             <summary>
             Includes interest and fee income generated by direct lease financing. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromLeasesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLeasesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromLeasesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement">
             <summary>
             Loan is a common field to banks. Interest Income from Loans is interest and fee income generated from all loans, which includes
             Commercial loans; Credit loans; Other consumer loans; Real Estate - Construction; Real Estate - Mortgage; Foreign loans. Banks
             earn interest from loans. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromLoansIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLoansIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromLoansIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement">
             <summary>
             Total interest and fee income generated by loans and lease. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromLoansAndLeaseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromLoansAndLeaseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromLoansAndLeaseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement">
             <summary>
             Represents total interest and dividend income from U.S. Treasury securities, U.S. government agency and corporation obligations,
             securities issued by states and political subdivisions, other domestic debt securities, foreign debt securities, and equity securities
             (including investments in mutual funds). Excludes interest income from securities held in trading accounts. This item is usually only
             available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromSecuritiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement">
             <summary>
             Interest income from assets held in trading accounts. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromTradingAccountSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromTradingAccountSecuritiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromTradingAccountSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement">
             <summary>
             Includes (1) underwriting revenue (the spread between the resale price received and the cost of the securities and related
             expenses) generated through the purchasing, distributing and reselling of new issues of securities (alternatively, could be a
             secondary offering of a large block of previously issued securities); and (2) fees earned for mergers, acquisitions, divestitures,
             restructurings, and other types of financial advisory services. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InvestmentBankingProfitIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentBankingProfitIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentBankingProfitIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement">
             <summary>
             Premiums earned from life and annuity insurance. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LifeAnnuityPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LifeAnnuityPremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LifeAnnuityPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement">
             <summary>
             Includes the loans that the bank is going to sell at a discount. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LoansHeldForResellIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansHeldForResellIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoansHeldForResellIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement">
             <summary>
             Expenses incurred in the course of investigating and settling claims. This item is usually not available for bank and insurance
             industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LossAndLossAdjustmentExpectedIncurredIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossAndLossAdjustmentExpectedIncurredIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LossAndLossAdjustmentExpectedIncurredIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement">
             <summary>
             The aggregate amount of maintenance and repair expenses in the current period associated with the revenue generation. Mainly
             for fixed assets. This item is usually only available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the MaintenanceAndRepairsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MaintenanceAndRepairsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MaintenanceAndRepairsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement">
             <summary>
             Expenditures for planning and executing the conception, pricing, promotion, and distribution of ideas, goods, and services.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the MarketingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MarketingExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MarketingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement">
             <summary>
             Includes any interest income collects from money market investments. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeFromOtherMoneyMarketInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement">
             <summary>
             The aggregate foreign currency translation gain or loss (both realized and unrealized) included as part of revenue. This item is
             usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetForeignExchangeGainLossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetForeignExchangeGainLossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetForeignExchangeGainLossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement">
             <summary>
             Occupancy expense may include items, such as depreciation of facilities and equipment, lease expenses, property taxes and
             property and casualty insurance expense. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetOccupancyExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOccupancyExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOccupancyExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement">
             <summary>
             Net premiums written are gross premiums written less ceded premiums. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetPremiumsWrittenIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPremiumsWrittenIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetPremiumsWrittenIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement">
             <summary>
             Gain or loss realized during the period of time for all kinds of investment securities. In might include trading, available-for-sale, or
             held-to-maturity securities. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetRealizedGainLossOnInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetRealizedGainLossOnInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetRealizedGainLossOnInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement">
             <summary>
             A one-time change expense that the company does not expect to encounter again.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NonRecurringOperationExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonRecurringOperationExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonRecurringOperationExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement">
             <summary>
             Includes total expenses of occupancy and equipment. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OccupancyAndEquipmentIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OccupancyAndEquipmentIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OccupancyAndEquipmentIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingTaxesnLicensesIncomeStatement">
             <summary>
             Taxes and licenses expenses incurred and are directly related to goods produced and sold and services rendered during the
             reporting period. This item is usually only available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingTaxesnLicensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingTaxesnLicensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingTaxesnLicensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OperatingTaxesnLicensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingTaxesnLicensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingTaxesnLicensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement">
             <summary>
             The aggregate amount of operation and maintenance expenses, which is the one important operating expense for the utility
             industry. It includes any costs related to production and maintenance cost of the property during the revenue generation process.
             This item is usually only available for mining and utility industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OperationAndMaintenanceIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationAndMaintenanceIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperationAndMaintenanceIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement">
             <summary>
             Represents fees and commissions earned from provide other services. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherCustomerServicesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCustomerServicesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCustomerServicesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement">
             <summary>
             All other gain/loss from disposition of discontinued operations that are not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherGainLossFromDispositionOfDiscontinuedOperationsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement">
             <summary>
             All other interest expense that is not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement">
             <summary>
             All other interest income that is not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement">
             <summary>
             All other non interest expense that is not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonInterestExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonInterestExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement">
             <summary>
             For transportation industry, this represents revenue from operation business excluding revenue of cargo and passengers. For utility
             industry, this represents any revenue generated other than electric, gas, and transportation. This item is usually available for
             transportation and utility industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherOperatingRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherOperatingRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement">
             <summary>
             All other special charges that are not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherSpecialChargesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherSpecialChargesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherSpecialChargesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement">
             <summary>
             All other miscellaneous special charges that are not otherwise classified
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the MiscOtherSpecialChargesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MiscOtherSpecialChargesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MiscOtherSpecialChargesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement">
             <summary>
             Any taxes that are not part of income taxes. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherTaxesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherTaxesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherTaxesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement">
             <summary>
             Fees generated from issuing or renewing an auto insurance policy. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyFeesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyFeesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyFeesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderBenefitsCededIncomeStatement">
             <summary>
             The provision in current period for future policy benefits, claims, and claims settlement, which is under reinsurance arrangements.
             This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsCededIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsCededIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderBenefitsCededIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderBenefitsCededIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderBenefitsCededIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderBenefitsCededIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement">
             <summary>
             The gross amount of provision in current period for future policyholder benefits, claims, and claims settlement, incurred in the
             claims settlement process before the effects of reinsurance arrangements. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderBenefitsGrossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderBenefitsGrossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderBenefitsGrossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement">
             <summary>
             Payments made or credits extended to the insured by the company, usually at the end of a policy year results in reducing the net
             insurance cost to the policyholder. Such dividends may be paid in cash to the insured or applied by the insured as reductions of the
             premiums due for the next policy year. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderDividendsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderDividendsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderDividendsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement">
             <summary>
             The periodic income payment provided to the annuitant by the insurance company, which is determined by the assumed interest
             rate (AIR) and other factors. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderInterestIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderInterestIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderInterestIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement">
             <summary>
             The aggregate amount of investment income comes from policyholder account and ceded insurance agreements. This item is
             usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderAndReinsurerAccountsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderAndReinsurerAccountsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderAndReinsurerAccountsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement">
             <summary>
             This relates to any distributions and earning adjustments due to Trust Preferred Securities issued by the company and its
             subsidiaries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TrustPreferredSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TrustPreferredSecuritiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement">
             <summary>
             Schedule of revenue by reporting categories or types of financial instruments, including derivatives but excluding dividends and
             interests, from trading for own account by broker dealers. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PrincipleTransactionRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrincipleTransactionRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PrincipleTransactionRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement">
             <summary>
             Professional and contract service expense includes cost reimbursements for support services related to contracted projects,
             outsourced management, technical and staff support. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ProfessionalExpenseAndContractServicesExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfessionalExpenseAndContractServicesExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProfessionalExpenseAndContractServicesExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement">
             <summary>
             Costs associated with publicizing a good or need for sale. This category includes only expenses, which are specific as promotion, or
             advertising expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PromotionAndAdvertisingIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PromotionAndAdvertisingIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PromotionAndAdvertisingIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement">
             <summary>
             Premiums earned for all property and casualty insurance assumed from other insurers as a result of reinsurance arrangements. This
             item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PropertyCasualtyPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertyCasualtyPremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PropertyCasualtyPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement">
             <summary>
             Amount of the current period expense charged against operations, the offset which is generally to the allowance for doubtful
             accounts for the purpose of reducing receivables, including notes receivable, to an amount that approximates their net realizable
             value (the amount expected to be collected). The category includes provision for loan losses, provision for any doubtful account
             receivable, and bad debt expenses. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ProvisionForDoubtfulAccountsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForDoubtfulAccountsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProvisionForDoubtfulAccountsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement">
             <summary>
             The amount of current expense charged in order to prepare for the disposal of discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ProvisionForGainLossOnDisposalIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForGainLossOnDisposalIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProvisionForGainLossOnDisposalIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement">
             <summary>
             Represents the payment or accrual (net of fare revenues) to other transit agencies, public or private, for providing transportation
             service and purchased transportation (PT) fare revenues. This item is usually only available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PurchasedTransportationServicesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchasedTransportationServicesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchasedTransportationServicesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement">
             <summary>
             The amount by which an asset's selling price exceeds its initial purchase price is called capital gain. A realized capital gain is when
             it has been sold at a profit. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RealizedCapitalGainIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealizedCapitalGainIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RealizedCapitalGainIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement">
             <summary>
             Rent fees are the cost of occupying space during the accounting period. Landing fees are a change paid to an airport company for
             landing at a particular airport. This item is not available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RentAndLandingFeesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RentAndLandingFeesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RentAndLandingFeesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement">
             <summary>
             Expenses that may be directed toward the discovery of new facts, natural laws, or phenomena without regard to the immediate
             commercial application to which the results may be put or as costs directed toward more specific goals such as product
             improvement or the perfection and improvement of processes or techniques of production.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ResearchExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ResearchExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ResearchExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement">
             <summary>
             Expenses are related to restructuring, merger, or acquisitions. Restructuring expenses are charges associated with the
             consolidation and relocation of operations, disposition or abandonment of operations or productive assets. Merger and acquisition
             expenses are the amount of costs of a business combination including legal, accounting, and other costs that were charged to
             expense during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RestructuringAndMergernAcquisitionIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructuringAndMergernAcquisitionIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestructuringAndMergernAcquisitionIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement">
             <summary>
             Revenue is from transporting cargo and freight between locations. This item is usually only available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RevenuesCargoIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenuesCargoIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RevenuesCargoIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement">
             <summary>
             A transportation carrier's fare revenue is recognized in the period from carrying passengers between destinations. This item is
             usually only available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RevenuesPassengerIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenuesPassengerIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RevenuesPassengerIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement">
             <summary>
             All salary, wages, compensation, management fees, and employee benefit expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SalariesAndWagesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalariesAndWagesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SalariesAndWagesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement">
             <summary>
             Income/Loss from Securities and Activities
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SecuritiesActivitiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesActivitiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesActivitiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement">
             <summary>
             Expenses recognized in the period that are directly related to the selling and distribution of products or services.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SellingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SellingExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SellingExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement">
             <summary>
             Includes any service charges on following accounts: Demand Deposit; Checking account; Savings account; Deposit in foreign
             offices; ESCROW accounts; Money Market Certificates &amp; Deposit accounts, CDs (Negotiable Certificates of Deposits); NOW
             Accounts (Negotiable Order of Withdrawal); IRAs (Individual Retirement Accounts). This item is usually only available for bank
             industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ServiceChargeOnDepositorAccountsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ServiceChargeOnDepositorAccountsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ServiceChargeOnDepositorAccountsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement">
             <summary>
             On the Income Statement; The portion of a firm that is either directly or indirectly controlled by the parent, but not consolidated
             with the parent for purposes of the financial statements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareInNetIncomeOfUnconsolidatedEntitiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement">
             <summary>
             This item is typically available for bank industry. On the balance sheet, the aggregate amount of time deposits, including certificates
             of deposits, individual retirement accounts and open accounts. On the income statement, it represents interest earned on deposits
             that have to stay in the bank for a certain period of time before they can be collected without sustaining a penalty. Usually includes
             certificates of deposits, individual retirement accounts and open accounts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TimeDepositsPlacedIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TimeDepositsPlacedIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TimeDepositsPlacedIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement">
             <summary>
             A broker-dealer or other financial entity may buy and sell securities exclusively for its own account, sometimes referred to as
             proprietary trading. The profit or loss is measured by the difference between the acquisition cost and the selling price or current
             market or fair value. The net gain or loss, includes both realized and unrealized, from trading cash instruments, equities and
             derivative contracts (including commodity contracts) that has been recognized during the accounting period for the broker dealer or
             other financial entity's own account. This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TradingGainLossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingGainLossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingGainLossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement">
             <summary>
             Revenue from operations of public mass transportation systems (rapid transit, subway, bus, street railway, and commuter rail
             services), such as fares, charter fees, advertising income, and other operations revenues.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TransportationRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TransportationRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TransportationRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement">
             <summary>
             Bank manages funds on behalf of its customers through the operation of various trust accounts. Any fees earned through managing
             those funds are called trust fees, which are recognized when earned. This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TrustFeesbyCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustFeesbyCommissionsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TrustFeesbyCommissionsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement">
             <summary>
             Also known as Policy Acquisition Costs; and reported by insurance companies.  The cost incurred by an insurer when deciding
             whether to accept or decline a risk; may include meetings with the insureds or brokers, actuarial review of loss history, or physical
             inspections of exposures. Also, expenses deducted from insurance company revenues (including incurred losses and acquisition
             costs) to determine underwriting profit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the UnderwritingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnderwritingExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnderwritingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WriteDownIncomeStatement">
             <summary>
             Reducing the book value of an asset because it is overvalued compared to the current market value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.#ctor">
             <summary>
             Creates an instance of the WriteDownIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WriteDownIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WriteDownIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement">
             <summary>
             Reducing the book value of an asset because it is overvalued compared to the current market value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherWriteDownIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherWriteDownIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherWriteDownIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WriteOffIncomeStatement">
             <summary>
             A reduction in the value of an asset or earnings by the amount of an expense or loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.#ctor">
             <summary>
             Creates an instance of the WriteOffIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WriteOffIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WriteOffIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement">
             <summary>
             A reduction in the value of an asset or earnings by the amount of an expense or loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherWriteOffIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherWriteOffIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherWriteOffIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement">
             <summary>
             Usually available for the banking industry.  This is Non-Interest Income that is not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonInterestIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonInterestIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement">
             <summary>
             Insurance premium tax is a tax paid by some insurance companies and insurance brokers that sell taxable insurance within the
             united kingdom. This item is typically available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PremiumTaxesCreditIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumTaxesCreditIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PremiumTaxesCreditIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement">
             <summary>
             The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
             production) in a systematic and rational manner to the periods expected to benefit from such assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationOfIntangiblesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationOfIntangiblesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement">
             <summary>
             Net Income from Continuing Operations and Discontinued Operations, added together.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement">
             <summary>
             Any gains or loss not otherwise attributable to Continuing Operations, Discontinued Operations, Extraordinary Items, Accumulated
             Effects of Accounting Changes or Income from Tax Loss Carryforward.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromOtherGainsLossesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromOtherGainsLossesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromOtherGainsLossesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement">
             <summary>
             Occurs if a company has had a net loss from operations on a previous year that can be carried forward to reduce net income for tax
             purposes.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromTaxLossCarryforwardIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromTaxLossCarryforwardIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromTaxLossCarryforwardIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement">
             <summary>
             The aggregate amount of operating expenses associated with normal operations. Will not include any gain, loss, benefit, or income;
             and its value reported by the company should be &lt;0.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement">
             <summary>
             The sum of the money market investments held by a bank's depositors, which are FDIC insured.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalMoneyMarketInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalMoneyMarketInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalMoneyMarketInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement">
             <summary>
             The Cost Of Revenue plus Depreciation, Depletion &amp; Amortization from the IncomeStatement; minus Depreciation, Depletion &amp;
             Amortization from the Cash Flow Statement
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ReconciledCostOfRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReconciledCostOfRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReconciledCostOfRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement">
             <summary>
             Is Depreciation, Depletion &amp; Amortization from the Cash Flow Statement
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ReconciledDepreciationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReconciledDepreciationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReconciledDepreciationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement">
             <summary>
             This is calculation that reverses the effects of extraordinary income or charges on Net Income, by adding back (extraordinary
             expense) or subtracting (extraordinary income) the value from Net Income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NormalizedIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement">
             <summary>
             Expenses incurred in performance of activities not directly related to the main business of a firm, such as for the insurance or
             maintenance of the assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NonOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonOperatingExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement">
             <summary>
             The portion of an organization's income that is derived from activities not related to its core operations; such as as dividend income,
             profits (and losses) from investments, gains (or losses) incurred due to foreign exchange, asset write-downs and other non-
             operating revenues and expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NonOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonOperatingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
             Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
             Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement">
             <summary>
             Gain/Loss on the disposal of the investment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PrincipleInvestmentGainLossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrincipleInvestmentGainLossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PrincipleInvestmentGainLossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement">
             <summary>
             Any gain (loss) recognized on the sale of assets or a sale which generates profit or loss, which is a difference between sales price
             and net book value at the disposal time.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossonSaleofAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonSaleofAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossonSaleofAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement">
             <summary>
             Gain on sale of any loans investment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonSaleofLoansIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofLoansIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonSaleofLoansIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement">
             <summary>
             Gain on the disposal of investment property.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonSaleofInvestmentPropertyIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofInvestmentPropertyIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonSaleofInvestmentPropertyIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement">
             <summary>
             Special income that is either infrequent or unusual.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SpecialIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SpecialIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement">
             <summary>
             Income earned through R&amp;D department. This data point applies to the bank and insurance industry only.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AcquiredinProcessRnDIncomeBanksIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AcquiredinProcessRnDIncomeBanksIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AcquiredinProcessRnDIncomeBanksIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement">
             <summary>
             Relates to restructuring, merger, or acquisitions for non-operating activities. A restructuring charge might be incurred in the process
             of laying off employees, closing manufacturing plants, or shifting production to a new location.
             Merger - When two firms, often of about the same size, agree to go forward as a single new company rather than remain
             separately owned and operated.
             Acquisition - When one company takes over another and clearly establishes itself as the new owner.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the RestructuringAndMergerAndAcquisitionIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestructuringAndMergerAndAcquisitionIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestructuringAndMergerAndAcquisitionIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement">
             <summary>
             Downward revaluation of fixed assets. Any impairment related with Fixed Assets &amp; Fixed Asset Investments comes under this
             exceptional data item.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ImpairmentofCapitalAssetsIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentofCapitalAssetsIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ImpairmentofCapitalAssetsIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement">
             <summary>
             Gain on extinguishment of debt is the accounting gain that results from a debt extinguishment. A debt shall be accounted for as
             having been extinguished in a number of circumstances, including when it has been settled through repayment or replacement by
             another liability. It generally results in an accounting gain or loss. Amount represents the difference between the fair value of the
             payments made and the carrying amount of the debt at the time of its extinguishment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonExtinguishmentofDebtIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement">
             <summary>
             Special expenses that are either infrequent or unusual.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SpecialChargeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SpecialChargeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SpecialChargeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement">
             <summary>
             Loss on extinguishment of debt is the accounting loss that results from a debt extinguishment. A debt shall be accounted for as
             having been extinguished in a number of circumstances, including when it has been settled through repayment or replacement by
             another liability. It generally results in an accounting gain or loss. Amount represents the difference between the fair value of the
             payments made and the carrying amount of the debt at the time of its extinguishment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LossonExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LossonExtinguishmentofDebtIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LossonExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement">
             <summary>
             Income from other equity interest reported after Provision of Tax. This applies to all industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EarningsfromEquityInterestNetOfTaxIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsfromEquityInterestNetOfTaxIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EarningsfromEquityInterestNetOfTaxIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement">
             <summary>
             Net income of the group after the adjustment of all expenses and benefit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeIncludingNoncontrollingInterestsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeIncludingNoncontrollingInterestsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeIncludingNoncontrollingInterestsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement">
             <summary>
             Dividend paid to the preferred shareholders before the common stock shareholders.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherunderPreferredStockDividendIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherunderPreferredStockDividendIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherunderPreferredStockDividendIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement">
             <summary>
             Earnings from equity interest, accounted for in the Revenue section. An equity interest is a proportion of ownership, typically
             through the investment in a business.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the EarningsfromEquityInterestRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsfromEquityInterestRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EarningsfromEquityInterestRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement">
             <summary>
             Gain/loss on the disposal of assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossfromDisposalSaleofAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossfromDisposalSaleofAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement">
             <summary>
             Gain/loss on the disposal of assets in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossfromDisposalSaleofAssetsOtherIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossfromDisposalSaleofAssetsOtherIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossfromDisposalSaleofAssetsOtherIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement">
             <summary>
             Gain on disposal of real estate by the bank.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonSaleofOtherRealEstateOwnedIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonSaleofOtherRealEstateOwnedIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonSaleofOtherRealEstateOwnedIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement">
             <summary>
             Interest income, accounted for in the Revenue section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeRevenueIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeRevenueIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeRevenueIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement">
             <summary>
             Expenses incurred by the company in relation to legal matters.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the LitigationExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LitigationExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LitigationExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement">
             <summary>
             Adjustments to the value of investments, excluding temporary write-downs.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherthanTemporaryImpairmentLossesInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement">
             <summary>
             Unrealized gains/losses incurred by the company in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.#ctor">
             <summary>
             Creates an instance of the UnrealizedGainorLossIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainorLossIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnrealizedGainorLossIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement">
             <summary>
             Income/expense due to changes between periods in inventory.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangesinInventoriesofFinishedGoodsandWorkinProgressIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement">
             <summary>
             An amount paid in respect of work performed by entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.#ctor">
             <summary>
             Creates an instance of the WorkPerformedbyEntityandCapitalizedIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkPerformedbyEntityandCapitalizedIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WorkPerformedbyEntityandCapitalizedIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DistributionCostsIncomeStatement">
             <summary>
             Expenditures occurred on the distribution of the products.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DistributionCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DistributionCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DistributionCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DistributionCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DistributionCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DistributionCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement">
             <summary>
             Total staff cost which is paid to the employees that is not part of Selling, General, and Administration expense.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the StaffCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StaffCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the StaffCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SocialSecurityCostsIncomeStatement">
             <summary>
             Benefits paid to the employees in respect of their work.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SocialSecurityCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SocialSecurityCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SocialSecurityCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the SocialSecurityCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SocialSecurityCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SocialSecurityCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PensionCostsIncomeStatement">
             <summary>
             The expense that a company incurs each year by providing a pension plan for its employees. Major expenses in the pension cost
             include employer matching contributions and management fees.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the PensionCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PensionCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement">
             <summary>
             Total Other Operating Income- including interest income, dividend income and other types of operating income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherOperatingIncomeTotalIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingIncomeTotalIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherOperatingIncomeTotalIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement">
             <summary>
             Share of profit from joint ventures and associates, accounted for in the Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareofOperatingProfitLossfromJointVenturesAndAssociatesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement">
             <summary>
             Total value of non-recurring items in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ExceptionalItemsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExceptionalItemsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ExceptionalItemsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement">
             <summary>
             Income from the related companies- subsidiaries and other equity holdings, accounted for in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomefromSharesinSubsidiariesGroupUndertakingsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement">
             <summary>
             Total income from the associates and joint venture via investment, accounted for in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement">
             <summary>
             Any other finance cost which is not clearly defined in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalOtherFinanceCostIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalOtherFinanceCostIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalOtherFinanceCostIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement">
             <summary>
             Total amount paid in dividends to investors- this includes dividends paid on equity and non-equity shares.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GrossDividendPaymentIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossDividendPaymentIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossDividendPaymentIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement">
             <summary>
             Income from cash and cash equivalents, short-term securities, debt securities, mortgage and loans, derivative investments, policy
             loans and other interest income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestandSimilarIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestandSimilarIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestandSimilarIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement">
             <summary>
             Fees and commission income earned by bank and insurance companies on the rendering services.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FeesandCommissionIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesandCommissionIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FeesandCommissionIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement">
             <summary>
             Cost incurred by bank and insurance companies for fees and commission income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.#ctor">
             <summary>
             Creates an instance of the FeesandCommissionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FeesandCommissionExpenseIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FeesandCommissionExpenseIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetTradingIncomeIncomeStatement">
             <summary>
             Any trading income on the securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTradingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTradingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTradingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NetTradingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTradingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetTradingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement">
             <summary>
             Payment of reinsurance premium.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OutwardReinsurancePremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OutwardReinsurancePremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OutwardReinsurancePremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherStaffCostsIncomeStatement">
             <summary>
             Other costs in incurred in lieu of the employees that cannot be identified by other specific items in the Staff Costs section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherStaffCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherStaffCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherStaffCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherStaffCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherStaffCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherStaffCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement">
             <summary>
             Stock based expenses that occur in normal activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ShareBasedPaymentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareBasedPaymentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareBasedPaymentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement">
             <summary>
             Gain on disposal and change in fair value of investment properties.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonInvestmentPropertiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonInvestmentPropertiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonInvestmentPropertiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement">
             <summary>
             Adjustments to reported net income to calculate Diluted EPS, by assuming that all convertible instruments are converted to
             Common Equity. The adjustments usually include the interest expense of debentures when assumed converted and preferred
             dividends of convertible preferred stock when assumed converted.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the AverageDilutionEarningsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AverageDilutionEarningsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AverageDilutionEarningsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainonRedemptionandExtinguishmentofDebtIncomeStatement">
             <summary>
             Gain on the redemption of the loan or repayment of the loan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonRedemptionandExtinguishmentofDebtIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainonRedemptionandExtinguishmentofDebtIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonRedemptionandExtinguishmentofDebtIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainonRedemptionandExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainonRedemptionandExtinguishmentofDebtIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainonRedemptionandExtinguishmentofDebtIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement">
             <summary>
             Other income of the company that cannot be identified by other specific items in the Operating Income section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the MiscellaneousOtherOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MiscellaneousOtherOperatingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MiscellaneousOtherOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement">
             <summary>
             Gain/Loss through hedging activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement">
             <summary>
             Gain/loss on the write-off of financial assets available-for-sale.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement">
             <summary>
             Gain/loss on the write-off of any non-current assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossonDerecognitionofNonCurrentAssetsNotHeldforSaleTotalIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement">
             <summary>
             Negative Goodwill recognized in the Income Statement. Negative Goodwill arises where the net assets at the date of acquisition,
             fairly valued, falls below the cost of acquisition.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NegativeGoodwillImmediatelyRecognizedIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NegativeGoodwillImmediatelyRecognizedIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NegativeGoodwillImmediatelyRecognizedIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement">
             <summary>
             Gain or loss on derivatives investment due to the fair value adjustment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement">
             <summary>
             Impairment or reversal of impairment on financial instrument such as derivative. This is a contra account under Total Revenue in
             banks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement">
             <summary>
             Income from equity investments in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareofProfitLossfromEquityAccountedInvestmentsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement">
             <summary>
             All reported claims arising out of incidents in that year are considered incurred grouped with claims paid out.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ClaimsandPaidIncurredIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsandPaidIncurredIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClaimsandPaidIncurredIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement">
             <summary>
             Claim on the reinsurance company and take the benefits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement">
             <summary>
             Income/Expense due to changes between periods in insurance liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement">
             <summary>
             Income/Expense due to changes between periods in Investment Contracts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInvestmentContractIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInvestmentContractIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInvestmentContractIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement">
             <summary>
             Income/Expense due to changes between periods in Reinsurance Assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinReinsuranceAssetsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsuranceAssetsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinReinsuranceAssetsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement">
             <summary>
             Provision for the risk of loss of principal or loss of a financial reward stemming from a borrower's failure to repay a loan or otherwise
             meet a contractual obligation. Credit risk arises whenever a borrower is expecting to use future cash flows to pay a current debt.
             Investors are compensated for assuming credit risk by way of interest payments from the borrower or issuer of a debt obligation.
             This is a contra account under Total Revenue in banks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the CreditRiskProvisionsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CreditRiskProvisionsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CreditRiskProvisionsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement">
             <summary>
             This is the portion under Staff Costs that represents salary paid to the employees in respect of their work.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the WagesandSalariesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WagesandSalariesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WagesandSalariesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement">
             <summary>
             Total other income and expense of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonOperatingIncomeExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonOperatingIncomeExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement">
             <summary>
             Interest income earned by normal operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InterestIncomeOtherOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestIncomeOtherOperatingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestIncomeOtherOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement">
             <summary>
             Other income of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingIncomeIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonOperatingIncomeIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement">
             <summary>
             Other expenses of the company that cannot be identified by other specific items in the Non-Operating section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonOperatingExpensesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonOperatingExpensesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement">
             <summary>
             Total unusual items including Negative Goodwill.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalUnusualItemsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalUnusualItemsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalUnusualItemsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement">
             <summary>
             The sum of all the identifiable operating and non-operating unusual items.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalUnusualItemsExcludingGoodwillIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalUnusualItemsExcludingGoodwillIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalUnusualItemsExcludingGoodwillIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement">
             <summary>
             Tax rate used for Morningstar calculations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TaxRateForCalcsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxRateForCalcsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxRateForCalcsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement">
             <summary>
             Tax effect of the usual items
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TaxEffectOfUnusualItemsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxEffectOfUnusualItemsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxEffectOfUnusualItemsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement">
             <summary>
             EBITDA - Total Unusual Items
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.#ctor">
             <summary>
             Creates an instance of the NormalizedEBITDAIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedEBITDAIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedEBITDAIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement">
             <summary>
             Gain or loss resulting from an appreciation or devaluation of the non-local currency from borrowings related interest income or
             expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainOnForeignCurrencyExchangeFromBorrowingsRelatingToInterestCostsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement">
             <summary>
             The cost to the company for granting stock options to reward employees.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.#ctor">
             <summary>
             Creates an instance of the StockBasedCompensationIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockBasedCompensationIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the StockBasedCompensationIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement">
             <summary>
             Net income to calculate Diluted EPS, accounting for adjustments assuming that all the convertible instruments are being converted
             to Common Equity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.#ctor">
             <summary>
             Creates an instance of the DilutedNIAvailtoComStockholdersIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedNIAvailtoComStockholdersIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedNIAvailtoComStockholdersIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement">
             <summary>
             Income/Expenses due to the insurer's liabilities incurred in Investment Contracts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.#ctor">
             <summary>
             Creates an instance of the InvestmentContractLiabilitiesIncurredIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesIncurredIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentContractLiabilitiesIncurredIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement">
             <summary>
             Income/Expense due to recoveries from reinsurers for Investment Contracts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesofInvestmentContractIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInvestmentContractIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesofInvestmentContractIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement">
             <summary>
             Total amount paid in dividends to equity securities investors.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalDividendPaymentofEquitySharesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPaymentofEquitySharesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDividendPaymentofEquitySharesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement">
             <summary>
             Total amount paid in dividends to Non-Equity securities investors.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the TotalDividendPaymentofNonEquitySharesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPaymentofNonEquitySharesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDividendPaymentofNonEquitySharesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement">
             <summary>
             The change in the amount of the unearned premium reserves maintained by insurers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement">
             <summary>
             The change in the amount of unearned premium reserve to be covered by reinsurers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement">
             <summary>
             Income/Expense due to the insurer's changes in insurance liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ClaimsandChangeinInsuranceLiabilitiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsandChangeinInsuranceLiabilitiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClaimsandChangeinInsuranceLiabilitiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement">
             <summary>
             Income/Expense due to recoveries from reinsurers for insurance liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet">
             <summary>
             Any money that a company owes its suppliers for goods and services purchased on credit and is expected to pay within the next
             year or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccountsPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccountsPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccountsPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet">
             <summary>
             Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccountsReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet">
             <summary>
             An expense recognized before it is paid for. Includes compensation, interest, pensions and all other miscellaneous accruals
             reported by the company. Expenses incurred during the accounting period, but not required to be paid until a later date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentAccruedExpensesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet">
             <summary>
             An expense that has occurred but the transaction has not been entered in the accounting records. Accordingly, an adjusting entry
             is made to debit the appropriate expense account and to credit a liability account such as accrued expenses payable or accounts
             payable.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentAccruedExpensesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet">
             <summary>
             Interest, dividends, rents, ancillary and other revenues earned but not yet received by the entity on its investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedInvestmentIncomeBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedInvestmentIncomeBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedInvestmentIncomeBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet">
             <summary>
             The cumulative amount of wear and tear or obsolescence charged against the fixed assets of a company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccumulatedDepreciationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccumulatedDepreciationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccumulatedDepreciationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet">
             <summary>
             The aggregate amount of gains or losses that are not part of retained earnings. It is also called other comprehensive income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GainsLossesNotAffectingRetainedEarningsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainsLossesNotAffectingRetainedEarningsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainsLossesNotAffectingRetainedEarningsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet">
             <summary>
             Excess of issue price over par or stated value of the entity's capital stock and amounts received from other transactions involving
             the entity's stock or stockholders. Includes adjustments to additional paid in capital. There are two major categories of additional
             paid in capital: 1) Paid in capital in excess of par/stated value, which is the difference between the actual issue price of the shares
             and the shares' par/stated value. 2) Paid in capital from other transactions which includes treasury stock, retirement of stock, stock
             dividends recorded at market, lapse of stock purchase warrants, conversion of convertible bonds in excess of the par value of the
             stock, and any other additional capital from the company's own stock transactions.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AdditionalPaidInCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdditionalPaidInCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdditionalPaidInCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet">
             <summary>
             A contra account sets aside as an allowance for bad loans (e.g. customer defaults).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AllowanceForLoansAndLeaseLossesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForLoansAndLeaseLossesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllowanceForLoansAndLeaseLossesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet">
             <summary>
             For an unclassified balance sheet, this item represents equity securities categorized neither as held-to-maturity nor trading. Equity
             securities represent ownership interests or the right to acquire ownership interests in corporations and other legal entities which
             ownership interest is represented by shares of common or preferred stock (which is not mandatory redeemable or redeemable at
             the option of the holder), convertible securities, stock rights, or stock warrants. This category includes preferred stocks, available-
             for-sale and common stock, available-for-sale.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AvailableForSaleSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AvailableForSaleSecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AvailableForSaleSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet">
             <summary>
             The total amount of stock authorized for issue by a corporation, including common and preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CapitalStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapitalStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashBalanceSheet">
             <summary>
             Cash includes currency on hand as well as demand deposits with banks or financial institutions. It also includes other kinds of
             accounts that have the general characteristics of demand deposits in that the customer may deposit additional funds at any time
             and also effectively may withdraw funds at any time without prior notice or penalty.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet">
             <summary>
             Cash equivalents, excluding items classified as marketable securities, include short-term, highly liquid investments that are both
             readily convertible to known amounts of cash, and so near their maturity that they present insignificant risk of changes in value
             because of changes in interest rates.  Generally, only investments with original maturities of three months or less qualify under this
             definition. Original maturity means original maturity to the entity holding the investment. For example, both a three-month US
             Treasury bill and a three-year Treasury note purchased three months from maturity qualify as cash equivalents. However, a Treasury
             note purchased three years ago does not become a cash equivalent when its remaining maturity is three months.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashEquivalentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet">
             <summary>
             Includes unrestricted cash on hand, money market instruments and other debt securities which can be converted to cash
             immediately.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashAndCashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAndCashEquivalentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashAndCashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet">
             <summary>
             Includes cash on hand (currency and coin), cash items in process of collection, non-interest bearing deposits due from other
             financial institutions (including corporate credit unions), and balances with the Federal Reserve Banks, Federal Home Loan Banks
             and central banks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashAndDueFromBanksBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAndDueFromBanksBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashAndDueFromBanksBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet">
             <summary>
             The aggregate amount of cash, cash equivalents, and federal funds sold.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashCashEquivalentsAndFederalFundsSoldBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashCashEquivalentsAndFederalFundsSoldBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashCashEquivalentsAndFederalFundsSoldBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet">
             <summary>
             The aggregate amount of cash, cash equivalents, and marketable securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashCashEquivalentsAndMarketableSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashCashEquivalentsAndMarketableSecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashCashEquivalentsAndMarketableSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStockBalanceSheet">
             <summary>
             Common stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet; i.e. it is one
             component of Common Stockholder's Equity
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommonStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet">
             <summary>
             The total amount of assets considered to be convertible into cash within a relatively short period of time, usually a year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet">
             <summary>
             Represents the total amount of long-term debt such as bank loans and commercial paper, which is due within one year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDebtBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDebtBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDebtBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet">
             <summary>
             All borrowings due within one year including current portions of long-term debt and capital leases as well as short-term debt such
             as bank loans and commercial paper.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDebtAndCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDebtAndCapitalLeaseObligationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDebtAndCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet">
             <summary>
             The debts or obligations of the firm that are due within one year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet">
             <summary>
             Represents the total amount of long-term capital leases that must be paid within the next accounting period. Capital lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentCapitalLeaseObligationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet">
             <summary>
             An amount owed to a firm that is not expected to be received by the firm within one year from the date of the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet">
             <summary>
             An expenditure not recognized as a cost of operation of the period in which incurred, but carried forward to be written off in future
             periods.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredCostsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredCostsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredCostsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet">
             <summary>
             Represents the non-current portion of obligations, which is a liability that usually would have been paid but is now past due.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentDeferredLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentDeferredLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet">
             <summary>
             Represents the current portion of obligations, which is a liability that usually would have been paid but is now past due.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDeferredLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDeferredLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet">
             <summary>
             Net amount of deferred policy acquisition costs capitalized on contracts remaining in force as of the balance sheet date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredPolicyAcquisitionCostsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredPolicyAcquisitionCostsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredPolicyAcquisitionCostsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet">
             <summary>
             Represents collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized.
             Generally, an entity records deferred revenue when it receives consideration from a customer before achieving certain criteria that
             must be met for revenue to be recognized in conformity with GAAP. It can be either current or non-current item. Also called
             unearned revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDeferredRevenueBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredRevenueBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDeferredRevenueBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet">
             <summary>
             The non-current portion of deferred revenue amount as of the balance sheet date. Deferred revenue is a liability related to revenue
             producing activity for which revenue has not yet been recognized, and is not expected be recognized in the next twelve months.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentDeferredRevenueBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredRevenueBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentDeferredRevenueBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet">
             <summary>
             An asset on a company's balance sheet that may be used to reduce any subsequent period's income tax expense. Deferred tax
             assets can arise due to net loss carryovers, which are only recorded as assets if it is deemed more likely than not that the asset
             will be used in future fiscal periods.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredTaxAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredTaxAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet">
             <summary>
             Meaning a future tax asset, resulting from temporary differences between book (accounting) value of assets and liabilities and their
             tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a tax
             computation. It is also called future tax.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDeferredTaxesAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredTaxesAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDeferredTaxesAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet">
             <summary>
             Meaning a future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and
             their tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a
             tax computation. Deferred tax liabilities generally arise where tax relief is provided in advance of an accounting expense, or income
             is accrued but not taxed until received.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDeferredTaxesLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredTaxesLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDeferredTaxesLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet">
             <summary>
             A result of timing differences between taxable incomes reported on the income statement and taxable income from the company's
             tax return. Depending on the positioning of deferred income taxes, the field may be either current (within current assets) or non-
             current (below total current assets). Typically a company will have two deferred income taxes fields.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentDeferredTaxesAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentDeferredTaxesAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet">
             <summary>
             The estimated future tax obligations, which usually arise when different accounting methods are used for financial statements and
             tax statement It is also an add-back to the cash flow statement. Deferred income taxes include accumulated tax deferrals due to
             accelerated depreciation and investment credit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentDeferredTaxesLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredTaxesLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentDeferredTaxesLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet">
             <summary>
             This asset represents equity securities categorized neither as held-to-maturity nor trading.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the EquityInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EquityInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet">
             <summary>
             This liability refers to the amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from
             another bank to meet its reserve requirements; and the amount of securities that an institution sells and agrees to repurchase at a
             specified date for a specified price, net of any reductions or offsets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet">
             <summary>
             This asset refers to very-short-term loans of funds to other banks and securities dealers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet">
             <summary>
             This asset refers to the fair value of investments in debt securities that are deemed to be available for sale that are allocated to the
             segregated group of participating or dividend-paying policies and contracts identified as the closed block. Change in fair value of
             such securities is a component of change in other comprehensive income in the period, which is reflected in the closed block
             disclosure.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FixedMaturitiesAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesAvailableForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FixedMaturitiesAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet">
             <summary>
             This asset represents the total of all debt securities grouped by maturity dates, at fair value, which are categorized as held-to-
             maturity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FixedMaturitiesHeldToMaturityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesHeldToMaturityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FixedMaturitiesHeldToMaturityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet">
             <summary>
             This asset refers the total of all debt securities grouped by maturity dates, at fair value, which are categorized as trading.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FixedMaturitiesTradingBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturitiesTradingBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FixedMaturitiesTradingBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet">
             <summary>
             This asset refers to types of investments that may be contained within the fixed maturity category which securities are having a
             stated final repayment date. Examples of items within this category may include bonds, including convertibles and bonds with
             warrants, and redeemable preferred stocks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FixedMaturityInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixedMaturityInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FixedMaturityInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet">
             <summary>
             Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
             paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
             regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FuturePolicyBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuturePolicyBenefitsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FuturePolicyBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet">
             <summary>
             In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the general
             partners.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GeneralPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GeneralPartnershipCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GeneralPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GoodwillBalanceSheet">
             <summary>
             The excess of the cost of an acquired company over the sum of the fair market value of its identifiable individual assets less the
             liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GoodwillBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GoodwillBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GoodwillBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet">
             <summary>
             Rights or economic benefits, such as patents and goodwill, that is not physical in nature. They are those that are neither physical
             nor financial in nature, nevertheless, have value to the company. Intangibles are listed net of accumulated amortization.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GoodwillAndOtherIntangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GoodwillAndOtherIntangibleAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GoodwillAndOtherIntangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet">
             <summary>
             Represents the sum of all loans (commercial, consumer, mortgage, etc.) as well as leases before any provisions for loan losses or
             unearned discounts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GrossLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet">
             <summary>
             Carrying amount at the balance sheet date for long-lived physical assets used in the normal conduct of business and not intended
             for resale. This can include land, physical structures, machinery, vehicles, furniture, computer equipment, construction in progress,
             and similar items. Amount does not include depreciation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GrossPPEBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossPPEBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossPPEBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet">
             <summary>
             Debt securities that a firm has the ability and intent to hold until maturity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HeldToMaturitySecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HeldToMaturitySecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HeldToMaturitySecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet">
             <summary>
             A current liability account which reflects the amount of income taxes currently due to the federal, state, and local governments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the IncomeTaxPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomeTaxPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet">
             <summary>
             The aggregate of all domestic and foreign deposits in the bank that earns interests.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestBearingDepositsLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingDepositsLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestBearingDepositsLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet">
             <summary>
             Sum of the carrying values as of the balance sheet date of interest payable on all forms of debt, including trade payable that has
             been incurred.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet">
             <summary>
             Deposit of money with a financial institution, in consideration of which the financial institution pays or credits interest, or amounts in the nature
             of interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestBearingDepositsAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingDepositsAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestBearingDepositsAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InventoryBalanceSheet">
             <summary>
             A company's merchandise, raw materials, and finished and unfinished products which have not yet been sold.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoryBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InventoryBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoryBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InventoryBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet">
             <summary>
             All investments in affiliates, real estate, securities, etc. Non-current investment, not including marketable securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsAndAdvancesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsAndAdvancesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsAndAdvancesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet">
             <summary>
             In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the limited
             partners.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LimitedPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LimitedPartnershipCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LimitedPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet">
             <summary>
             Sum of the carrying values as of the balance sheet date of all long-term debt, which is debt initially having maturities due after one
             year or beyond the operating cycle, if longer, but excluding the portions thereof scheduled to be repaid within one year or the
             normal operating cycle, if longer. Long-term debt includes notes payable, bonds payable, mortgage loans, convertible debt,
             subordinated debt and other types of long term debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermDebtBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet">
             <summary>
             All borrowings lasting over one year including long-term debt and long-term portion of capital lease obligations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermDebtAndCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtAndCapitalLeaseObligationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtAndCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet">
             <summary>
             Often referred to simply as "investments". Long-term investments are to be held for many years and are not intended to be
             disposed in the near future. This group usually consists of four types of investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet">
             <summary>
             Represents the total liability for long-term leases lasting over one year. Amount equal to the present value (the principal) at the
             beginning of the lease term less lease payments during the lease term.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermCapitalLeaseObligationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermCapitalLeaseObligationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet">
             <summary>
             Carrying amount of the equity interests owned by non-controlling shareholders, partners, or other equity holders in one or more of
             the entities included in the reporting entity's consolidated financial statements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet">
             <summary>
             Short-term (typical maturity is less than one year), highly liquid government or corporate debt instrument such as bankers'
             acceptance, promissory notes, and treasury bills.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MoneyMarketInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MoneyMarketInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MoneyMarketInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetLoanBalanceSheet">
             <summary>
             Represents the value of all loans after deduction of the appropriate allowances for loan and lease losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetPPEBalanceSheet">
             <summary>
             Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
             administrative purposes and that are expected to provide economic benefit for more than one year; net of accumulated
             depreciation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetPPEBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPPEBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetPPEBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet">
             <summary>
             The aggregate amount of all domestic and foreign deposits in the banks that do not draw interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonInterestBearingDepositsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingDepositsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestBearingDepositsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet">
             <summary>
             Written promises to pay a stated sum at one or more specified dates in the future, within the accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentNotesPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentNotesPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentNotesPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) within one year of the balance sheet date or the normal operating cycle, whichever is longer. Such amount may
             include accrued interest receivable in accordance with the terms of the note. The note also may contain provisions including a
             discount or premium, payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among a myriad of other
             features and characteristics.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NotesReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) , excluding the portion that is expected to be received within one year of the balance sheet date or the normal
             operating cycle, whichever is longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentNoteReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentNoteReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentNoteReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet">
             <summary>
             Other current liabilities = Total current liabilities - Payables and accrued Expenses - Current debt and capital lease obligaton -
             provisions, current - deferred liabilities, current
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet">
             <summary>
             Sum of the carrying amounts of all intangible assets, excluding goodwill.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherIntangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherIntangibleAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherIntangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet">
             <summary>
             The aggregate amount of short term investments, which will be expired within one year that are not specifically classified as
             Available-for-Sale, Held-to-Maturity,  nor Trading investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherShortTermInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherShortTermInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherShortTermInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PayablesBalanceSheet">
             <summary>
             The sum of all payables owed and expected to be paid within one year or one operating cycle, including accounts payables, taxes
             payable, dividends payable and all other current payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PayablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PayablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PayablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PayablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet">
             <summary>
             This balance sheet account includes all current payables and accrued expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PayablesAndAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PayablesAndAccruedExpensesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PayablesAndAccruedExpensesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet">
             <summary>
             Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
             paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
             regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PolicyReservesBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyReservesBenefitsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyReservesBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet">
             <summary>
             The total liability as of the balance sheet date of amounts due to policy holders, excluding future policy benefits and claims,
             including unpaid policy dividends, retrospective refunds, and undistributed earnings on participating business.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PolicyholderFundsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderFundsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderFundsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet">
             <summary>
             Preferred securities that that firm treats as a liability. It includes convertible preferred stock or redeemable preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredSecuritiesOutsideStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredSecuritiesOutsideStockEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredSecuritiesOutsideStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet">
             <summary>
             Preferred stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date due the entity from agents insures, uncollected premiums and others.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PremiumsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumsReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PremiumsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet">
             <summary>
             Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in subsequent periods.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PrepaidAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrepaidAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PrepaidAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet">
             <summary>
             Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in periods after one
             year or beyond the operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentPrepaidAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentPrepaidAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentPrepaidAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet">
             <summary>
             The sum of all receivables owed by customers and affiliates within one year, including accounts receivable, notes receivable,
             premiums receivable, and other current receivables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet">
             <summary>
             Type of preferred stock which may be bought back by the issuing company on a specified date or after a specified period of notice.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RedeemablePreferredStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RedeemablePreferredStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RedeemablePreferredStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet">
             <summary>
             The amount of benefits the ceding insurer expects to recover on insurance policies ceded to other insurance entities as of the
             balance sheet date for all guaranteed benefit types. It includes estimated amounts for claims incurred but not reported, and policy
             benefits, net of any related valuation allowance.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoverableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoverableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet">
             <summary>
             The cumulative net income of the company from the date of its inception (or reorganization) to the date of the financial statement
             less the cumulative distributions to shareholders either directly (dividends) or indirectly (treasury stock).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RetainedEarningsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RetainedEarningsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RetainedEarningsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet">
             <summary>
             The carrying value as of the balance sheet date of the liabilities collateral securities loaned to other broker-dealers. Borrowers of
             securities generally are required to provide collateral to the lenders of securities, commonly cash but sometimes other securities or
             standby letters of credit, with a value slightly higher than that of the securities borrowed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecuritiesLendingCollateralBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLendingCollateralBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesLendingCollateralBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet">
             <summary>
             The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
             resell the identical security purchased or a security that meets the definition of "substantially the same" in the case of a dollar roll.
             Also includes purchases of participations in pools of securities that are subject to a resale agreement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecurityAgreeToBeResellBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityAgreeToBeResellBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecurityAgreeToBeResellBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet">
             <summary>
             Represent obligations of the company to deliver the specified security at the contracted price and, thereby, create a liability to
             purchase the security in the market at prevailing prices.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecuritySoldNotYetRepurchasedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritySoldNotYetRepurchasedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritySoldNotYetRepurchasedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet">
             <summary>
             The fair value of the assets held by the company for the benefit of separate account policyholders.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SeparateAccountAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SeparateAccountAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SeparateAccountAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet">
             <summary>
             Refers to revenue that is generated that is not part of typical operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SeparateAccountBusinessBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SeparateAccountBusinessBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SeparateAccountBusinessBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company holds with the purpose for
             trading.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ShortTermInvestmentsAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsAvailableForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShortTermInvestmentsAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company has made that will expire
             at a fixed date within one year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ShortTermInvestmentsHeldToMaturityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsHeldToMaturityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShortTermInvestmentsHeldToMaturityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet">
             <summary>
             The current assets section of a company's balance sheet that contains the investments that a company can trade at any moment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ShortTermInvestmentsTradingBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermInvestmentsTradingBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShortTermInvestmentsTradingBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet">
             <summary>
             The residual interest in the assets of the enterprise that remains after deducting its liabilities. Equity is increased by owners'
             investments and by comprehensive income, and it is reduced by distributions to the owners.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the StockholdersEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockholdersEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the StockholdersEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet">
             <summary>
             A liability that reflects the taxes owed to federal, state, and local tax authorities. It is the carrying value as of the balance sheet
             date of obligations incurred and payable for statutory income, sales, use, payroll, excise, real, property and other taxes.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalTaxPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalTaxPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalTaxPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet">
             <summary>
             The aggregate amount of probable future economic benefits obtained or controlled by a particular enterprise as a result of past
             transactions or events.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet">
             <summary>
             A liability account which represents the total amount of funds deposited.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalDepositsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDepositsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDepositsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet">
             <summary>
             Asset that refers to the sum of all available for sale securities and other investments often reported on the balance sheet of
             insurance firms.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet">
             <summary>
             Probable future sacrifices of economic benefits arising from present obligations of an enterprise to transfer assets or provide
             services to others in the future as a result of past transactions or events.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet">
             <summary>
             Sum of the carrying amounts as of the balance sheet date of all assets that are expected to be realized in cash, sold or consumed
             after one year or beyond the normal operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalNonCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalNonCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet">
             <summary>
             Total obligations incurred as part of normal operations that is expected to be repaid beyond the following twelve months or one
             business cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet">
             <summary>
             Ownership interest of different classes of partners in the publicly listed limited partnership or master limited partnership. Partners
             include general, limited and preferred partners.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalPartnershipCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalPartnershipCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet">
             <summary>
             Trading account assets are bought and held principally for the purpose of selling them in the near term (thus held for only a short
             period of time). Unrealized holding gains and losses for trading securities are included in earnings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradingAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet">
             <summary>
             The carrying amount of liabilities as of the balance sheet date that pertain to principal and customer trading transactions, or which
             may be incurred with the objective of generating a profit from short-term fluctuations in price as part of an entity's market-making,
             hedging and proprietary trading. Examples include short positions in securities, derivatives and commodities, obligations under
             repurchase agreements, and securities borrowed arrangements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradingLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet">
             <summary>
             The total of financial instruments that are bought and held principally for the purpose of selling them in the near term (thus held for
             only a short period of time) or for debt and equity securities formerly categorized as available-for-sale or held-to-maturity which the
             company held as of the date it opted to account for such securities at fair value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradingSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingSecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet">
             <summary>
             The portion of shares that a company keeps in their own treasury. Treasury stock may have come from a repurchase or buyback
             from shareholders; or it may have never been issued to the public in the first place. These shares don't pay dividends, have no
             voting rights, and are not included in shares outstanding calculations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TreasuryStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasuryStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TreasuryStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet">
             <summary>
             Income received but not yet earned, it represents the unearned amount that is netted against the total loan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnearnedIncomeBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnearnedIncomeBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnearnedIncomeBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet">
             <summary>
             Carrying amount of premiums written on insurance contracts that have not been earned as of the balance sheet date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnearnedPremiumsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnearnedPremiumsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnearnedPremiumsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet">
             <summary>
             Liability amount that reflects claims that are expected based upon statistical projections, but which have not been reported to the
             insurer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnpaidLossAndLossReserveBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnpaidLossAndLossReserveBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnpaidLossAndLossReserveBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet">
             <summary>
             Invested capital = common shareholders' equity + long term debt + current debt
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestedCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestedCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestedCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet">
             <summary>
             Payments that will be assigned as expenses with one accounting period, but that are paid in advance and temporarily set up as
             current assets on the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentDeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentDeferredAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentDeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet">
             <summary>
             Payments that will be assigned as expenses longer than one accounting period, but that are paid in advance and temporarily set up
             as non-current assets on the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentDeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentDeferredAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentDeferredAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet">
             <summary>
             Asset, often applicable to Banks, which refers to the aggregate amount of all securities and investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecuritiesAndInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesAndInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesAndInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet">
             <summary>
             Probable future sacrifices of economic benefits arising from present obligations of an enterprise to transfer assets or provide
             services to others in the future as a result of past transactions or events, excluding minority interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalLiabilitiesNetMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalLiabilitiesNetMinorityInterestBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalLiabilitiesNetMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet">
             <summary>
             Total obligations, net minority interest, incurred as part of normal operations that is expected to be repaid beyond the following
             twelve months or one business cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet">
             <summary>
             Residual interest, gross of minority interest, that remains in the assets of the enterprise after deducting its liabilities. Equity is
             increased by owners' investments and by comprehensive income, and it is reduced by distributions to the owners.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalEquityGrossMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalEquityGrossMinorityInterestBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalEquityGrossMinorityInterestBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet">
             <summary>
             Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GrossAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossAccountsReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet">
             <summary>
             Accounts receivable represents sums owed to the business that the business records as revenue. Gross accounts receivable is
             accounts receivable before the business deducts uncollectable accounts to calculate the true value of accounts receivable.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentAccountsReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet">
             <summary>
             This account shows the amount of unpaid interest accrued to the date of purchase and included in the purchase price of securities
             purchased between interest dates.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedInterestReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedInterestReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedInterestReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet">
             <summary>
             This item is typically available for bank industry. It's the amount of borrowings as of the balance sheet date from the Federal Home
             Loan Bank, which are primarily used to cover shortages in the required reserve balance and liquidity shortages.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AdvanceFromFederalHomeLoanBanksBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdvanceFromFederalHomeLoanBanksBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdvanceFromFederalHomeLoanBanksBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet">
             <summary>
             An Allowance for Doubtful Accounts measures receivables recorded but not expected to be collected.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AllowanceForDoubtfulAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForDoubtfulAccountsReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllowanceForDoubtfulAccountsReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet">
             <summary>
             This item is typically available for bank industry. It represents a provision relating to a written agreement to receive money  with the
             terms of the note (at a specified future date(s) within one year from the reporting date (or the normal operating cycle, whichever is
             longer), consisting of principal as well as any accrued interest) for the portion that is expected to be uncollectible.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AllowanceForNotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForNotesReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllowanceForNotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet">
             <summary>
             This item is typically available for bank industry. It's a part of long-lived assets, which has been decided for sale in the future.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AssetsHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet">
             <summary>
             A portion of a company's business that has been disposed of or sold.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AssetsOfDiscontinuedOperationsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsOfDiscontinuedOperationsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsOfDiscontinuedOperationsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet">
             <summary>
             This item is typically available for bank industry.  It is the carrying amount as of the balance sheet date of drafts and bills of
             exchange that have been accepted by the reporting bank or by others for its own account, as its liability to holders of the drafts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankAcceptanceExecutedAndOutstandingBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankAcceptanceExecutedAndOutstandingBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankAcceptanceExecutedAndOutstandingBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet">
             <summary>
             It means all indebtedness for borrowed money or the deferred purchase price of property or services, including without limitation
             reimbursement and other obligations with respect to surety bonds and letters of credit, all obligations evidenced by notes, bonds
             debentures or similar instruments, all capital lease obligations and all contingent obligations. 
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankIndebtednessBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankIndebtednessBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankIndebtednessBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankLoanBalanceSheet">
             <summary>
             It means an amount of money lent at interest by a bank to a borrower, usually on collateral security, for a certain period of time.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet">
             <summary>
             It means the carrying amount of a life insurance policy on an officer, executive or employee for which the reporting entity (a bank) is
             entitled to proceeds from the policy upon death of the insured or surrender of the insurance policy.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankOwnedLifeInsuranceBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankOwnedLifeInsuranceBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankOwnedLifeInsuranceBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet">
             <summary>
             The securities borrowed or on loan, which is the temporary loan of securities by a lender to a borrower in exchange for cash.  This
             item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecurityBorrowedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityBorrowedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecurityBorrowedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet">
             <summary>
             Fixed assets that specifically deal with the facilities a company owns. Include the improvements associated with buildings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BuildingsAndImprovementsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BuildingsAndImprovementsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BuildingsAndImprovementsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet">
             <summary>
             The aggregate amount of claims made by the company under its casualty insurance policy.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CasualtyClaimsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CasualtyClaimsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CasualtyClaimsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet">
             <summary>
             The amount of unearned premiums paid and payable to another insurer as a result of reinsurance arrangements in order to
             exchange for that company accepting all or part of insurance on a risk or exposure.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CededUnearnedPremiumsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CededUnearnedPremiumsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CededUnearnedPremiumsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet">
             <summary>
             Short-term loan, typically 90 days, used by a company to finance seasonal working capital needs.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommercialLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommercialLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommercialLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet">
             <summary>
             Commercial paper is a money-market security issued by large banks and corporations. It represents the current obligation for the
             company. There are four basic kinds of commercial paper: promissory notes, drafts, checks, and certificates of deposit. The
             maturities of these money market securities generally do not exceed 270 days.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommercialPaperBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommercialPaperBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommercialPaperBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet">
             <summary>
             The portion of the Stockholders' Equity that reflects the amount of common stock, which are units of ownership.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommonStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet">
             <summary>
             Stock, other than an entity's own stock, held and available for sale.  This item is usally available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommonStocksAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStocksAvailableForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStocksAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet">
             <summary>
             It represents carrying amount of long-lived asset under construction that includes construction costs to date on capital projects.
             Assets constructed, but not completed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConstructionInProgressBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConstructionInProgressBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConstructionInProgressBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet">
             <summary>
             A loan that establishes consumer credit that is granted for personal use; usually unsecured and based on the borrower's integrity
             and ability to pay.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConsumerLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConsumerLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConsumerLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet">
             <summary>
             The company's minimum pension obligations to its former employees, paid into a defined pension plan to satisfy all pension
             entitlements that have been earned by employees to date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MinimumPensionLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinimumPensionLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MinimumPensionLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet">
             <summary>
             Amounts receivable from customers on short-term negotiable time drafts drawn on and accepted by the institution (also known as
             banker's acceptance transactions) that are outstanding on the reporting date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CustomerAcceptancesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CustomerAcceptancesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CustomerAcceptancesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet">
             <summary>
             When a company defers the sales costs that are associated with acquiring a new customer over the term of the insurance
             contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredAcquisitionCostsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredAcquisitionCostsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredAcquisitionCostsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet">
             <summary>
             Deferred Finance is created where the purchaser agrees with the vendor to pay some of the purchase price at a future date, as
             opposed to paying the full purchase price in cash on day one.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredFinancingCostsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredFinancingCostsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredFinancingCostsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet">
             <summary>
             The recognition of an asset where pension fund assets exceed promised benefits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DefinedPensionBenefitBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DefinedPensionBenefitBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DefinedPensionBenefitBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet">
             <summary>
             Fair values of all liabilities resulting from contracts that meet the criteria of being accounted for as derivative instruments; and
             which are expected to be extinguished or otherwise disposed of after one year or beyond the normal operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DerivativeProductLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DerivativeProductLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DerivativeProductLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet">
             <summary>
             Fair values of assets resulting from contracts that meet the criteria of being accounted for as derivative instruments, net of the
             effects of master netting arrangements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DerivativeAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DerivativeAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DerivativeAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet">
             <summary>
             Sum of the carrying values of dividends declared but unpaid on equity securities issued and outstanding (also includes dividends
             collected on behalf of another owner of securities that are being held by entity) by the entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DividendsPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendsPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet">
             <summary>
             ESOP Debt Guarantee represents all transactions related to a company's Employee Stock Ownership Plan (ESOP), such as
             shares/debt/loans owned by ESOP.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ESOPDebtGuaranteeBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ESOPDebtGuaranteeBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ESOPDebtGuaranteeBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet">
             <summary>
             Carrying amount as of the balance sheet date of the portion of the obligations recognized for the various benefits provided to former
             or inactive employees, their beneficiaries, and covered dependents after employment but before retirement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the EmployeeBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EmployeeBenefitsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EmployeeBenefitsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet">
             <summary>
             An installation, contrivance, or other facilitates which service for transportation, such as Medical facility; Telecommunications
             facility; Post-production facility. This item is typically available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FacilitiesAndOtherBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FacilitiesAndOtherBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FacilitiesAndOtherBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet">
             <summary>
             The amount borrowed by a bank, at the federal funds rate, from another bank to meet its reserve requirements.  This item is
             typically available for the bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FederalFundsPurchasedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsPurchasedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FederalFundsPurchasedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet">
             <summary>
             Federal funds transactions involve lending (federal funds sold) or borrowing (federal funds purchased) of immediately available
             reserve balances.  This item is typically available for the bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FederalFundsSoldBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalFundsSoldBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FederalFundsSoldBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet">
             <summary>
             Federal Home Loan Bank stock represents an equity interest in a FHLB. It does not have a readily determinable fair value because
             its ownership is restricted and it lacks a market (liquidity).  This item is typically available for the bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FederalHomeLoanBankStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FederalHomeLoanBankStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FederalHomeLoanBankStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet">
             <summary>
             Fair values as of the balance sheet date of all assets resulting from contracts that meet the criteria of being accounted for as
             derivative instruments, net of the effects of master netting arrangements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet">
             <summary>
             The carrying value as of the balance sheet date of securities that an institution sells and agrees to repurchase (the identical or
             substantially the same securities) as a seller-borrower at a specified date for a specified price, also known as a repurchase
             agreement.  This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date of merchandise or goods held by the company that are readily available for sale.
             This item is typically available for mining and manufacturing industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinishedGoodsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinishedGoodsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinishedGoodsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet">
             <summary>
             It is one of the important fixed assets for transportation industry, which includes bicycles, cars, motorcycles, trains, ships, boats,
             and aircraft.  This item is typically available for transportation industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FlightFleetVehicleAndRelatedEquipmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FlightFleetVehicleAndRelatedEquipmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FlightFleetVehicleAndRelatedEquipmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date of all assets obtained in full or partial satisfaction of a debt arrangement through
             foreclosure proceedings or defeasance; includes real and personal property; equity interests in corporations, partnerships, and joint
             ventures; and beneficial interest in trusts.  This item is typically typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ForeclosedAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeclosedAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ForeclosedAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet">
             <summary>
             Loans related to foreign countries.  This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ForeignComponentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignComponentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ForeignComponentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet">
             <summary>
             Changes to accumulated comprehensive income that results from the process of translating subsidiary financial statements and
             foreign equity investments into functional currency of the reporting company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ForeignCurrencyTranslationAdjustmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignCurrencyTranslationAdjustmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ForeignCurrencyTranslationAdjustmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet">
             <summary>
             This item discloses the period end balance sheet amount of fuel and natural gas. It is typically available for the utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FuelAndNaturalGasBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FuelAndNaturalGasBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FuelAndNaturalGasBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet">
             <summary>
             Contracts held by defined benefit pension plans generally provide for a specified return on principal invested over a specified period.
             This item is typically available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GuaranteedInvestmentContractBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GuaranteedInvestmentContractBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GuaranteedInvestmentContractBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet">
             <summary>
             This item represents certain charges made in the current period in inventory resulting from such factors as breakage, spoilage,
             employee theft and shoplifting. This item is typically available for manufacturing, mining and utility industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InventoriesAdjustmentsAllowancesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoriesAdjustmentsAllowancesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InventoriesAdjustmentsAllowancesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet">
             <summary>
             A specified percentage of the amount of certain new investment that a company can deduct as a credit against its income tax bill.
             This item is typically available for the utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentTaxCreditsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentTaxCreditsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentTaxCreditsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet">
             <summary>
             The investments in (1) an entity in which the entity has significant influence, but does not have control; (2) subsidiaries that are
             required to be consolidated and are accounted for using the equity and or cost method; and (3) an entity in which the reporting
             entity shares control of the entity with another party or group.  This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsInAffiliatesSubsidiariesAssociatesAndJointVenturesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet">
             <summary>
             This item represents the carrying amount on the company's balance sheet of its investments in common stock of an equity method.
             This item is typically available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet">
             <summary>
             This item is typically available for bank industry. It means invest in an entity in which the investor holds a controlling interest that is
             not based on the majority of voting rights.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsInVariableInterestEntityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsInVariableInterestEntityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsInVariableInterestEntityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet">
             <summary>
             Fixed Assets that specifically deal with land a company owns. Includes the improvements associated with land. This excludes land
             held for sale.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LandAndImprovementsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LandAndImprovementsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LandAndImprovementsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LeasesBalanceSheet">
             <summary>
             Carrying amount at the balance sheet date of a long-lived, depreciable asset that is an addition or improvement to assets held
             under lease arrangement. This item is usually not available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LeasesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LeasesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LeasesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LeasesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LeasesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet">
             <summary>
             The obligations arising from the sale, disposal, or planned sale in the near future (generally within one year) of a disposal group,
             including a component of the entity (discontinued operation). This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LiabilitiesOfDiscontinuedOperationsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesOfDiscontinuedOperationsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LiabilitiesOfDiscontinuedOperationsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet">
             <summary>
             Two or more partners united to conduct a business jointly, and in which one or more of the partners is liable only to the extent of
             the amount of money that partner has invested. Limited partners do not receive dividends, but enjoy direct access to the flow of
             income and expenses.  This item is typically available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LimitedPartnershipBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LimitedPartnershipBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LimitedPartnershipBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet">
             <summary>
             The carrying value as of the balance sheet date of obligations drawn from a line of credit, which is a bank's commitment to make
             loans up to a specific amount.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LineOfCreditBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LineOfCreditBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LineOfCreditBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet">
             <summary>
             It means the aggregate amount of loans receivable that will be sold to other entities.  This item is typically available for bank
             industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoansHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansHeldForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoansHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet">
             <summary>
             Reflects the carrying amount of unpaid loans issued to other institutions for cash needs or an asset purchase.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoansReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoansReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet">
             <summary>
             Fixed assets specifically dealing with tools, equipment and office furniture. This item is usually not available for the insurance and
             utility industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MachineryFurnitureEquipmentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MachineryFurnitureEquipmentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MachineryFurnitureEquipmentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet">
             <summary>
             Aggregated amount of unprocessed materials to be used in manufacturing or production process and supplies that will be
             consumed. This item is typically available for the utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MaterialsAndSuppliesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MaterialsAndSuppliesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MaterialsAndSuppliesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet">
             <summary>
             A fixed asset that represents strictly mineral type properties.  This item is typically available for mining industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MineralPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MineralPropertiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MineralPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet">
             <summary>
             This is a lien on real estate to protect a lender.  This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MortgageLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MortgageLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MortgageLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet">
             <summary>
             It means the aggregate amount of mortgage and consumer loans.  This item is typically available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet.#ctor">
             <summary>
             Creates an instance of the MortgageAndConsumerloansBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MortgageAndConsumerloansBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MortgageAndConsumerloansBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet">
             <summary>
             It means a material source of wealth, such as timber, fresh water, or a mineral deposit, that occurs in a natural state and has
             economic value.  This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NaturalResourceAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NaturalResourceAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NaturalResourceAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet">
             <summary>
             The amount of net unrealized gain or loss related to the change in fair value, not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetOtherUnrealizedGainLossBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherUnrealizedGainLossBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOtherUnrealizedGainLossBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet">
             <summary>
             The amount of net unrealized gain or loss related to the change in fair value of foreign currency exchange rate.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetUnrealizedGainLossForeignCurrencyBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUnrealizedGainLossForeignCurrencyBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetUnrealizedGainLossForeignCurrencyBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet">
             <summary>
             The aggregate increase (decrease) in the market value of unsold investments at the end of an accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetUnrealizedGainLossInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUnrealizedGainLossInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetUnrealizedGainLossInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet">
             <summary>
             An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
             at a future date(s) within one year of the balance sheet date or the normal operating cycle. Such amount may include accrued
             interest receivable in accordance with the terms of the note. The note also may contain provisions including a discount or premium,
             payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among myriad other features and
             characteristics. This item is typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the GrossNotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossNotesReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossNotesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet">
             <summary>
             Other non-current assets that are not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet">
             <summary>
             Other Capital Stock that is not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherCapitalStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCapitalStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCapitalStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet">
             <summary>
             Other current assets that are not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet">
             <summary>
             Short Term Borrowings that are not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherCurrentBorrowingsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCurrentBorrowingsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCurrentBorrowingsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet">
             <summary>
             A cost that occurred in a transaction, but will not be expensed until a future accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherDeferredCostsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherDeferredCostsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherDeferredCostsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet">
             <summary>
             Other deposits that are not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherDepositsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherDepositsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherDepositsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet">
             <summary>
             Other adjustments to stockholders' equity that is not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherEquityAdjustmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherEquityAdjustmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherEquityAdjustmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet">
             <summary>
             Other investment assets that from which interest is earned, not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherInterestEarningAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInterestEarningAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInterestEarningAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet">
             <summary>
             Other non-current inventories not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherInventoriesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInventoriesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInventoriesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet">
             <summary>
             An item represents all the other investments or/and securities that cannot be defined into any category above. This item is typically
             available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherInvestedAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInvestedAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInvestedAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet">
             <summary>
             Other non-current assets that are not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherNonCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCurrentAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet">
             <summary>
             Other fixed assets not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherPropertiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet">
             <summary>
             The Carrying amount as of the balance sheet date of other real estate, which may include real estate investments, real estate loans
             that qualify as investments in real estate, and premises that are no longer used in operations may also be included in real estate
             owned. This does not include real estate assets taken in settlement of troubled loans through surrender or foreclosure.  This item is
             typically available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherRealEstateOwnedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherRealEstateOwnedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherRealEstateOwnedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet">
             <summary>
             Other non-current receivables not otherwise classified.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PatentsBalanceSheet">
             <summary>
             A type of intangible asset, it provides an exclusive right to the patent holder to product or sell new inventions.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PatentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PatentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PatentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PatentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PatentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet">
             <summary>
             A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral.  This item is usually
             only available in the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet">
             <summary>
             A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral. This item is usually
             only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PolicyLoansBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyLoansBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyLoansBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet">
             <summary>
             A class of ownership in a company that has a higher claim on the assets and earnings than common stock. Preferred stock
             generally has a dividend that must be paid out before dividends to common stockholders and the shares usually do not have voting
             rights.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet">
             <summary>
             This is preferred stock of a subsidiary, which belongs to the company's equity. This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredStockOfSubsidiaryBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockOfSubsidiaryBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockOfSubsidiaryBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet">
             <summary>
             This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredStocksAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStocksAvailableForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStocksAvailableForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet">
             <summary>
             The unexpired portion of premiums paid to another insurer as a result of reinsurance arrangement as of the balance sheet date. This
             item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PrepaidReinsurancePremiumsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PrepaidReinsurancePremiumsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PrepaidReinsurancePremiumsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PropertiesBalanceSheet">
             <summary>
             Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
             administrative purposes and that are expected to provide economic benefit for more than one year. This item is available for
             manufacturing, bank and transportation industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PropertiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PropertiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PropertiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PropertiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
             action or measure. Current provision is expired within one accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CurrentProvisionsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentProvisionsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentProvisionsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
             action or measure. Long-term provision is expired beyond one accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermProvisionsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermProvisionsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermProvisionsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet">
             <summary>
             Individual parts purchased in order to complete a finished product.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PurchasedComponentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchasedComponentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchasedComponentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet">
             <summary>
             Carrying amount as of the balance sheet data of unprocessed items to be consumed in the manufacturing or production process.
             This item is available for manufacturing and mining industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RawMaterialsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RawMaterialsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RawMaterialsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet">
             <summary>
             Held real estate investments with the purpose of being sold.  This includes direct and indirect investments.  This item is usually only
             available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RealEstateHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateHeldForSaleBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RealEstateHeldForSaleBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet">
             <summary>
             The book value of investments in real estate joint ventures including direct and indirect investments.  This item is usually only
             available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RealEstateAndRealEstateJointVenturesHeldForInvestmentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet">
             <summary>
             A provision relating to a written agreement to receive money at a specified future date(s) (within one year from the reporting date
             or the normal operating cycle, whichever is longer), consisting of principal as well as any accrued interest).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReceivablesAdjustmentsAllowancesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivablesAdjustmentsAllowancesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReceivablesAdjustmentsAllowancesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet">
             <summary>
             Carrying amount as of the balance sheet date of capitalized costs of regulated entities that are expected to be recovered through
             revenue sources over one year or beyond the normal operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RegulatoryAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegulatoryAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RegulatoryAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet">
             <summary>
             The amount for the individual regulatory noncurrent liability as itemized in a table of regulatory noncurrent liabilities as of the end of
             the period. Such things as the costs of energy efficiency programs and low-income energy assistances programs and deferred fuel.
             This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RegulatoryLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegulatoryLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RegulatoryLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date of the known and estimated amounts owed to insurers under reinsurance
             treaties or other arrangements. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceBalancesPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceBalancesPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceBalancesPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet">
             <summary>
             The sum for all reinsurance arrangements of the known and estimated amount receivable as of the balance sheet date from a given
             reinsurers for claims paid or incurred by the ceding insurer and associated claims settlement expenses for each reinsurance
             arrangement (or, the sum of all cases determined individually, likely applying different assumptions to each arrangement). This item
             is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet">
             <summary>
             The recoverable currently due from reinsurers for ceded paid losses. This item is usually only available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoverableForPaidLossesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForPaidLossesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoverableForPaidLossesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet">
             <summary>
             The recoverable currently due from reinsurers for unpaid losses. This item is usually only available for the insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceRecoverableForUnpaidLossesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceRecoverableForUnpaidLossesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceRecoverableForUnpaidLossesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet">
             <summary>
             The carrying amounts of cash and cash equivalent items, which are restricted as to withdrawal or usage. Restrictions may include
             legally restricted deposits held as compensating balances against short-term borrowing arrangements, contracts entered into with
             others, or entity statements of intention with regard to particular deposits; however, time deposits and short-term certificates of
             deposit are not generally included in legally restricted deposits. Excludes compensating balance arrangements that are not
             agreements, which legally restrict the use of cash amounts shown on the balance sheet. For a classified balance sheet, represents
             the current portion only (the non-current portion has a separate concept); for an unclassified balance sheet represents the entire
             amount. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RestrictedCashBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestrictedCashBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet">
             <summary>
             The carrying amounts of cash and cash equivalent items which are restricted as to withdrawal or usage. This item is available for
             bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RestrictedCashAndCashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashAndCashEquivalentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestrictedCashAndCashEquivalentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet">
             <summary>
             The cash and investments whose use in whole or in part is restricted for the long-term, generally by contractual agreements or
             regulatory requirements. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RestrictedCashAndInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCashAndInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestrictedCashAndInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet">
             <summary>
             Shares of stock for which sale is contractually or governmentally restricted for a given period of time. Stock that is acquired through
             an employee stock option plan or other private means may not be transferred. Restricted stock must be traded in compliance with
             special SEC regulations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RestrictedCommonStockBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedCommonStockBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestrictedCommonStockBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet">
             <summary>
             Investments whose use is restricted in whole or in part, generally by contractual agreements or regulatory requirements. This item
             is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RestrictedInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RestrictedInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RestrictedInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet">
             <summary>
             The amount payable for lending securities.  This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecuritiesLendingPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLendingPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesLendingPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet">
             <summary>
             Loans made, insured, or guaranteed under any program authorized by the Higher Education Act. This loan is used for education
             purposes. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet.#ctor">
             <summary>
             Creates an instance of the StudentLoanBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StudentLoanBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the StudentLoanBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet">
             <summary>
             Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
             balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes. This item is
             usually not available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TaxesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxesReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet">
             <summary>
             In balance sheet, it means the aggregate amount of time deposits, including certificates of deposits, individual retirement accounts
             and open accounts. In income statement, it represents interest earned on deposits that have to stay in the bank for a certain period
             of time before they can be collected without sustaining a penalty. Usually includes certificates of deposits, individual retirement
             accounts and open accounts. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TimeDepositsPlacedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TimeDepositsPlacedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TimeDepositsPlacedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet">
             <summary>
             Stockholder's Equity plus Long Term Debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalCapitalizationBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalCapitalizationBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalCapitalizationBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet">
             <summary>
             Revenue received by a firm but not yet reported as income.  This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet">
             <summary>
             Revenues that are not currently billed from the customer under the terms of the contract.  This item is usually only available for
             utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnbilledReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnbilledReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnbilledReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet">
             <summary>
             A profit or loss that results from holding onto an asset rather than cashing it in and officially taking the profit or loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnrealizedGainLossBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainLossBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnrealizedGainLossBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet">
             <summary>
             Work, or goods, in the process of being fabricated or manufactured but not yet completed as finished goods. This item is usually
             available for manufacturing and mining industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.#ctor">
             <summary>
             Creates an instance of the WorkInProcessBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkInProcessBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WorkInProcessBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet">
             <summary>
             This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet">
             <summary>
             Current Portion of Capital Lease Obligation plus Long Term Portion of Capital Lease Obligation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CapitalLeaseObligationsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalLeaseObligationsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapitalLeaseObligationsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet">
             <summary>
             This item is available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet">
             <summary>
             Payables and Accrued Expenses that are not defined as Trade, Tax or Dividends related.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherPayableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherPayableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherPayableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet">
             <summary>
             The company's total book value less the value of any intangible assets.
             Methodology: Common Stock Equity minus Goodwill and Other Intangible Assets
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TangibleBookValueBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TangibleBookValueBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TangibleBookValueBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet">
             <summary>
             Total Equity equals Stockholder's Equity+ minority interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet">
             <summary>
             Current Assets minus Current Liabilities.  This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the WorkingCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WorkingCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WorkingCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet">
             <summary>
             All borrowings incurred by the company including debt and capital lease obligations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalDebtBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDebtBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDebtBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date of amounts, which could be received based on the terms of the insurance
             contract upon surrendering life policies owned by the company. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashValueOfLifeInsuranceBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashValueOfLifeInsuranceBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashValueOfLifeInsuranceBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet">
             <summary>
             The amount for the other plant related to the utility industry fix assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CommonUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonUtilityPlantBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet">
             <summary>
             The amount for the electric plant related to the utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ElectricUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ElectricUtilityPlantBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ElectricUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet">
             <summary>
             The amount for the natural gas, fuel and other items related to the utility industry, which might include oil and gas wells, the
             properties to exploit oil and gas or liquefied natural gas sites.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NaturalGasFuelAndOtherBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NaturalGasFuelAndOtherBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NaturalGasFuelAndOtherBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet">
             <summary>
             Net utility plant might include water production, electric utility plan, natural gas, fuel and other, common utility plant and
             accumulated depreciation. This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetUtilityPlantBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetUtilityPlantBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet">
             <summary>
             The amount for a facility and plant that provides water which might include wells, reservoirs, pumping stations, and control
             facilities; and waste water systems which includes the waste treatment and disposal facility and equipment. This item is usually
             only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet.#ctor">
             <summary>
             Creates an instance of the WaterProductionBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.WaterProductionBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the WaterProductionBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet">
             <summary>
             Number of Common or Ordinary Shares.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OrdinarySharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OrdinarySharesNumberBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OrdinarySharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet">
             <summary>
             Number of Preferred Shares.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreferredSharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredSharesNumberBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredSharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet">
             <summary>
             Number of Treasury Shares.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TreasurySharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasurySharesNumberBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TreasurySharesNumberBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet">
             <summary>
             This will serve as the "parent" value to AccountsReceivable (DataId 23001) and OtherReceivables (DataId 23342) for all company
             financials reported in the IFRS GAAP.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradingAndOtherReceivableBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingAndOtherReceivableBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingAndOtherReceivableBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet">
             <summary>
             This item applies only to Non-US companies. It refers to the residual interest in the assets of the enterprise that remains after
             deducting its liabilities and minority interest.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the EquityAttributableToOwnersOfParentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityAttributableToOwnersOfParentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EquityAttributableToOwnersOfParentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet">
             <summary>
             The carrying value as of the balance sheet date of securities loaned to other broker dealers, typically used by such parties to cover
             short sales, secured by cash or other securities furnished by such parties until the borrowing is closed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SecuritiesLoanedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecuritiesLoanedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SecuritiesLoanedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet">
             <summary>
             The sum of money an insurance company will pay to the policyholder or annuity holder in the event his or her policy is voluntarily
             terminated before its maturity or the insured event occurs.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ParticipatingPolicyholderEquityBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ParticipatingPolicyholderEquityBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ParticipatingPolicyholderEquityBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet">
             <summary>
             Net assets in physical form. This is calculated using Stockholders' Equity less Intangible Assets (including Goodwill).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetTangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTangibleAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetTangibleAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet">
             <summary>
             Amounts owed to the company from a non-arm's length entity, due within the company's current operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DuefromRelatedPartiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuefromRelatedPartiesCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DuefromRelatedPartiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet">
             <summary>
             Amounts owed to the company from a non-arm's length entity, due after the company's current operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DuefromRelatedPartiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuefromRelatedPartiesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DuefromRelatedPartiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet">
             <summary>
             Amounts owed by the company to a non-arm's length entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DuetoRelatedPartiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DuetoRelatedPartiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet">
             <summary>
             Amounts owed by the company to a non-arm's length entity that has to be repaid within the company's current operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DuetoRelatedPartiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DuetoRelatedPartiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet">
             <summary>
             Amounts owed by the company to a non-arm's length entity that has to be repaid after the company's current operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DuetoRelatedPartiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DuetoRelatedPartiesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DuetoRelatedPartiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet">
             <summary>
             Total assets less total liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet">
             <summary>
             Company's investments in properties net of accumulated depreciation, which generate a return.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentPropertiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentPropertiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet">
             <summary>
             A stake in any company which is more than 51%.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsinSubsidiariesatCostBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinSubsidiariesatCostBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsinSubsidiariesatCostBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet">
             <summary>
             A stake in any company which is more than 20% but less than 50%.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsinAssociatesatCostBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinAssociatesatCostBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsinAssociatesatCostBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet">
             <summary>
             A 50% stake in any company in which remaining 50% belongs to other company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentsinJointVenturesatCostBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentsinJointVenturesatCostBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentsinJointVenturesatCostBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet">
             <summary>
             Represents the sum of all financial investments (trading securities, available-for-sale securities, held-to-maturity securities, etc.)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentinFinancialAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentinFinancialAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentinFinancialAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet">
             <summary>
             Accounts owed to the bank in relation to capital leases. Capital/ finance lease obligation are contractual obligations that arise from
             obtaining the use of property or equipment via a capital lease contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConvertibleLoansCurrentBalanceSheet">
             <summary>
             This represents loans that entitle the lender (or the holder of loan debenture) to convert the loan to common or preferred stock
             (ordinary or preference shares) within the next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConvertibleLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConvertibleLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet">
             <summary>
             A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time within the next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet">
             <summary>
             Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due within the
             next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherLoansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet">
             <summary>
             Sum of accrued liabilities and deferred income (amount received in advance but the services are not provided in respect of
             amount).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet">
             <summary>
             A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time beyond the current accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet">
             <summary>
             Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due beyond the
             current operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet">
             <summary>
             Other reserves owned by the company that cannot be identified by other specific items in the Reserves section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherReservesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherReservesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherReservesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet">
             <summary>
             The aggregate amount of loans and advances made to a bank or financial institution.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoansandAdvancestoBankBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansandAdvancestoBankBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoansandAdvancestoBankBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet">
             <summary>
             The aggregate amount of loans and advances made to customers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoansandAdvancestoCustomerBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoansandAdvancestoCustomerBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoansandAdvancestoCustomerBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet">
             <summary>
             Investments backed by the central government, it usually carries less risk than other investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TreasuryBillsandOtherEligibleBillsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TreasuryBillsandOtherEligibleBillsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TreasuryBillsandOtherEligibleBillsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet">
             <summary>
             Investments in shares of a company representing ownership in that company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the EquitySharesInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquitySharesInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EquitySharesInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet">
             <summary>
             Banks investment in the ongoing entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DepositsbyBankBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsbyBankBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepositsbyBankBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet">
             <summary>
             Carrying value of amounts transferred by customers to third parties for security purposes that are expected to be returned or
             applied towards payment after one year or beyond the operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CustomerAccountsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CustomerAccountsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CustomerAccountsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet">
             <summary>
             Carrying amount as of the balance sheet date of drafts and bills of exchange that have been accepted by the reporting bank or by
             others for its own account, as its liability to holders of the drafts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet">
             <summary>
             Total carrying amount of total trading, financial liabilities and debt in a non-differentiated balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradingandFinancialLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradingandFinancialLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradingandFinancialLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet">
             <summary>
             Any debt financial instrument issued instead of cash loan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DebtSecuritiesinIssueBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtSecuritiesinIssueBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DebtSecuritiesinIssueBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet">
             <summary>
             The total carrying value of securities loaned to other broker dealers, typically used by such parties to cover short sales, secured by
             cash or other securities furnished by such parties until the borrowing is closed; in a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the SubordinatedLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SubordinatedLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SubordinatedLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet">
             <summary>
             Provisions are created to protect the interests of one or both parties named in a contract or legal document, which is a preparatory
             action or measure. Current provision is expired within one accounting period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ProvisionsTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionsTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProvisionsTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet">
             <summary>
             A contract that allows for the use of an asset, but does not convey rights of ownership of the asset. An operating lease is not
             capitalized; it is accounted for as a rental expense in what is known as "off balance sheet financing." For the lessor, the asset being
             leased is accounted for as an asset and is depreciated as such.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OperatingLeaseAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingLeaseAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingLeaseAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet">
             <summary>
             Amounts owing to policy holders who have filed claims but have not yet been settled or paid.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ClaimsOutstandingBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsOutstandingBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClaimsOutstandingBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet">
             <summary>
             A supply contract in the physical market covering energy deliveries of more than 18 months, accounted for as part of Inventories.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LongTermContractsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermContractsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermContractsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RealEstateBalanceSheet">
             <summary>
             Land and buildings which are held as inventory, normally by real estate companies or income trusts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealEstateBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateBalanceSheet.#ctor">
             <summary>
             Creates an instance of the RealEstateBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealEstateBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RealEstateBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet">
             <summary>
             A bill or invoice is a document requesting payment for an order previously supplied.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PaymentofBillsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentofBillsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentofBillsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet">
             <summary>
             Liabilities due within the next 12 months related from an asset classified as Held for Sale.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet">
             <summary>
             Liabilities related to an asset classified as held for sale excluding the portion due the next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet">
             <summary>
             Other current assets owned by the company that cannot be identified by other specific items in the Current Assets section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnclassifiedCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnclassifiedCurrentAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnclassifiedCurrentAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet">
             <summary>
             Debt securities held as investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DebtSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtSecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DebtSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet">
             <summary>
             Represents the total amount of long-term capital leases that must be paid within the next accounting period for a Non-
             Differentiated Balance Sheet. Capital lease obligations are contractual obligations that arise from obtaining the use of property or
             equipment via a capital lease contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TotalFinancialLeaseObligationsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalFinancialLeaseObligationsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalFinancialLeaseObligationsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet">
             <summary>
             Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
             amount) due within 1 year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet">
             <summary>
             Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
             amount) due after 1 year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedandDeferredIncomeNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedandDeferredIncomeNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet">
             <summary>
             Accounts owed to the bank in relation to capital leases to be received within the next accounting period. Capital/ finance lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet">
             <summary>
             Accounts owed to the bank in relation to capital leases to be received beyond the next accounting period. Capital/ finance lease
             obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinanceLeaseReceivablesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinanceLeaseReceivablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet">
             <summary>
             Financial related liabilities due within one year, including short term and current portions of long-term debt, capital leases and
             derivative liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialLiabilitiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialLiabilitiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet">
             <summary>
             Financial related liabilities due beyond one year, including long term debt, capital leases and derivative liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialLiabilitiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialLiabilitiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet">
             <summary>
             Financial assets that are held at fair value through profit or loss comprise assets held for trading and those financial assets
             designated as being held at fair value through profit or loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet">
             <summary>
             Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
             balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes, and current
             deferred tax assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TaxesAssetsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesAssetsCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxesAssetsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet">
             <summary>
             Other equity instruments issued by the company that cannot be identified by other specific items in the Equity section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherEquityInterestBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherEquityInterestBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherEquityInterestBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet">
             <summary>
             Carrying amount of any interest-bearing loan which is due after one year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestBearingBorrowingsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestBearingBorrowingsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet">
             <summary>
             Non-interest bearing borrowings due after a year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet">
             <summary>
             Sum of all non-current payables and accrued expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradeandOtherPayablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradeandOtherPayablesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradeandOtherPayablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet">
             <summary>
             Carrying amount of any interest-bearing loan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestBearingBorrowingsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestBearingBorrowingsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet">
             <summary>
             Non-interest bearing deposits in other financial institutions for short periods of time, usually less than 12 months.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet">
             <summary>
             Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
             to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet">
             <summary>
             The sum of cash and cash equivalents plus Federal Funds Sold. Including cash, petty cash/revolving funds/demand deposits with
             central banks and other kinds of accounts that have the general characteristics of demand deposits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashandBalanceswithCentralBanksBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashandBalanceswithCentralBanksBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashandBalanceswithCentralBanksBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet">
             <summary>
             Deposit accounts and placements that are deposited in a bank or other financial institution.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PlacementwithBanksandOtherFinancialInstitutionsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet">
             <summary>
             Reflects the carrying amount of any other unpaid loans, an asset of the bank.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherLoanAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoanAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherLoanAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet">
             <summary>
             An investment that is used to reduce the risk of adverse price movements in an asset, in a Non-Differentiated Balance Sheet.
             Normally, a hedge consists of taking an offsetting position in a related security, such as a futures contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingAssetsTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingAssetsTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet">
             <summary>
             Total value collateral assets pledged to the bank that can be sold or used as collateral for other loans.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet">
             <summary>
             Sum of total tax assets in a Non-Differentiated Balance Sheet, includes Tax Receivables and Deferred Tax Assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TaxAssetsTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxAssetsTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxAssetsTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet">
             <summary>
             Borrowings from the central bank, which are primarily used to cover shortages in the required reserve balance and liquidity
             shortages.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AdvancesfromCentralBanksBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdvancesfromCentralBanksBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdvancesfromCentralBanksBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet">
             <summary>
             The carrying value as of the balance sheet date of all interest bearing promissory notes and certificates issued by a financial
             institution.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CertificatesofDepositsandOtherDebtSecuritiesIssuedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet">
             <summary>
             A savings certificate entitling the bearer to receive interest. A CD bears a maturity date, a specified fixed interest rate and can be
             issued in any denomination.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DepositCertificatesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositCertificatesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepositCertificatesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet">
             <summary>
             Instruments that are not secured by any collateral and are backed only by the creditworthiness and reputation of the financial
             institution.  Debentures and debt certificates usually have terms last longer than a year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DebenturesandDebtCertificatesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebenturesandDebtCertificatesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DebenturesandDebtCertificatesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet">
             <summary>
             Carrying amount of total borrowings on which enterprise paid the interest; on a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InterestBearingBorrowingsTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestBearingBorrowingsTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestBearingBorrowingsTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet">
             <summary>
             Non-interest bearing deposits in other financial institutions for relatively short periods of time; on a Non-Differentiated Balance
             Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NonInterestBearingBorrowingsTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NonInterestBearingBorrowingsTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet">
             <summary>
             Other borrowings by the bank to fund its activities that cannot be identified by other specific items in the Liabilities section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherBorrowedFundsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherBorrowedFundsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherBorrowedFundsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet">
             <summary>
             Financial liabilities that are held at fair value through profit or loss.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet">
             <summary>
             Financial liabilities carried at amortized cost.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet">
             <summary>
             Subordinated loan capital to be repaid at a later date on a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoanCapitalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoanCapitalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoanCapitalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet">
             <summary>
             A liability derived from hedging instruments on a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet">
             <summary>
             Liabilities recognized on hedge.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LiabilitiesRecognizedforFairValueChangesinPortfolioHedgeofInterestRateRiskBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet">
             <summary>
             Liabilities which have occurred, but have not been paid or logged under accounts payable during an accounting period. In other
             words, obligations for goods and services provided to a company for which invoices have not yet been received; on a Non-
             Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AccruedLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AccruedLiabilitiesTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AccruedLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet">
             <summary>
             Collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized on a Non-
             Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredIncomeTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredIncomeTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredIncomeTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet">
             <summary>
             A future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and their tax
             value or timing differences between the recognition of gains and losses in financial statements, on a Non-Differentiated Balance
             Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredTaxLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxLiabilitiesTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredTaxLiabilitiesTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet">
             <summary>
             Reinsurance asset is insurance that is purchased by an insurance company from another insurance company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet">
             <summary>
             Accumulated share of insurance contract of reinsurance.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceShareofInsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceShareofInsuranceContractBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceShareofInsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet">
             <summary>
             Accrued claims with reinsurance companies.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceShareofAccruedPolicyholderClaimsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet">
             <summary>
             Deposits made under reinsurance.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DepositsMadeunderAssumedReinsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsMadeunderAssumedReinsuranceContractBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepositsMadeunderAssumedReinsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet">
             <summary>
             A contract under which one party (the insurer) accepts significant insurance risk from another party (the policyholder) by agreeing
             to compensate the policyholder if a specified uncertain future event (the insured event) adversely affects the policyholder. This
             includes Insurance Receivables and Premiums Receivables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsuranceContractAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceContractAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceContractAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet">
             <summary>
             Receivables from policyholders, agencies, and other operating parties in insurance companies, but excludes receivables from
             reinsurers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsuranceReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet">
             <summary>
             Any type of insurance policy that protects an individual or business from the risk that they may be sued and held legally liable for
             something such as malpractice, injury or negligence. Liability insurance policies cover both legal costs and any legal payouts for
             which the insured would be responsible if found legally liable. Intentional damage and contractual liabilities are typically not covered
             in these types of policies.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsuranceContractLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceContractLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceContractLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet">
             <summary>
             The carrying amount as of the balance sheet date of the known and estimated amounts owed to parties under insurance policies or
             other arrangements.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsurancePayablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsurancePayablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsurancePayablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet">
             <summary>
             Deposit received through ceded insurance contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DepositsReceivedunderCededInsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepositsReceivedunderCededInsuranceContractBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepositsReceivedunderCededInsuranceContractBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet">
             <summary>
             Liabilities due on the insurance investment contract.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InvestmentContractLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestmentContractLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestmentContractLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet">
             <summary>
             Government grants awarded to the company for its construction projects. They are capitalized by the company as part of the
             Property, Plant and Equipment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConstructionGrantsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConstructionGrantsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConstructionGrantsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet">
             <summary>
             Payments that will be assigned as expenses with one accounting period, but that are paid in advance and temporarily set up as
             current assets on the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DeferredCostCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredCostCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredCostCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet">
             <summary>
             Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
             to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits. Used to reflect the
             current portion of the liabilities (due within one year or within the normal operating cycle if longer).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet">
             <summary>
             Liabilities related to an asset classified as held for sale.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LiabilitiesHeldforSaleTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LiabilitiesHeldforSaleTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet">
             <summary>
             An asset that is used to reduce the risk of adverse price movements in another asset.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingAssetsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingAssetsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet">
             <summary>
             A security transaction which expires within a 12 month period that reduces the risk on an existing investment position.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingAssetsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingAssetsCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingAssetsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet">
             <summary>
             Loans that entitles the lender (or the holder of loan debenture) to convert the loan to common or preferred stock (ordinary or
             preference shares) at a specified rate conversion rate and a specified time frame; in a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConvertibleLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConvertibleLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet">
             <summary>
             Total debt financing obligation issued by a bank or similar financial institution to a company that entitles the lender or holder of the
             instrument to interest payments and the repayment of principal at a specified time; in a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BankLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BankLoansTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BankLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet">
             <summary>
             Total other loans between the customer and bank which cannot be identified by other specific items in the Debt section; in a Non-
             Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherLoansTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherLoansTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet">
             <summary>
             A liability derived from hedging instruments. The amount due is outside of the next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingLiabilitiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingLiabilitiesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet">
             <summary>
             A liability derived from hedging instruments. The amount is due within the next 12 months or operating cycle.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the HedgingLiabilitiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.HedgingLiabilitiesCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the HedgingLiabilitiesCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet">
             <summary>
             Liabilities related to insurance funds that are dissolved after one year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsuranceFundsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceFundsNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceFundsNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet">
             <summary>
             Liabilities related to insurance funds that are dissolved within the year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the InsuranceFundsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InsuranceFundsCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InsuranceFundsCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet">
             <summary>
             The total aggregate of all written promises and/or agreements to repay a stated amount of borrowed funds at a specified date in
             the future; in a Non-Differentiated Balance Sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DebtTotalBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebtTotalBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DebtTotalBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet">
             <summary>
             The treasury stock number of common shares. This represents the number of common shares owned by the company as a result of
             share repurchase programs or donations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ComTreShaNumBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ComTreShaNumBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ComTreShaNumBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet">
             <summary>
             The treasury stock number of preferred shares. This represents the number of preferred shares owned by the company as a result
             of share repurchase programs or donations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet.#ctor">
             <summary>
             Creates an instance of the PreTreShaNumBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreTreShaNumBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreTreShaNumBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetDebtBalanceSheet">
             <summary>
             This is a metric that shows a company's overall debt situation by netting the value of a company's liabilities and
             debts with its cash and other similar liquid assets. It is calculated using [Current Debt] + [Long Term Debt] - [Cash and Cash
             Equivalents].
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.#ctor">
             <summary>
             Creates an instance of the NetDebtBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetDebtBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetDebtBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet">
             <summary>
             The number of authorized shares that is sold to and held by the shareholders of a company, regardless of whether they are insiders,
             institutional investors or the general public. Unlike shares that are held as treasury stock, shares that have been retired are not
             included in this figure. The amount of issued shares can be all or part of the total amount of authorized shares of a corporation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ShareIssuedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareIssuedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareIssuedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet">
             <summary>
             Short term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
             costs to sell.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AssetsHeldForSaleCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsHeldForSaleCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet">
             <summary>
             Long term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
             costs to sell.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the AssetsHeldForSaleNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsHeldForSaleNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsHeldForSaleNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet">
             <summary>
             Biological assets include plants and animals.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the BiologicalAssetsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BiologicalAssetsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BiologicalAssetsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet">
             <summary>
             Cash that the company can use only for specific purposes or cash deposit or placing of owned property by a debtor (the pledger) to
             a creditor (the pledgee) as a security for a loan or obligation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CashRestrictedOrPledgedBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashRestrictedOrPledgedBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashRestrictedOrPledgedBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet">
             <summary>
             A long term loan with a warrant attached that gives the debt holder the option to exchange all or a portion of the loan principal for
             an equity position in the company at a predetermined rate of conversion within a specified period of time.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the ConvertibleLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ConvertibleLoansNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ConvertibleLoansNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet">
             <summary>
             Financial instruments that are linked to a specific financial instrument or indicator or commodity, and through which specific
             financial risks can be traded in financial markets in their own right, such as financial options, futures, forwards, etc.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet">
             <summary>
             An asset account in a bank's general ledger that indicates the amounts owed by borrowers to the bank as of a given date.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the LoanAndLoanReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LoanAndLoanReceivablesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LoanAndLoanReceivablesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet">
             <summary>
             Investments that are neither Investment in Financial Assets nor Long term equity investment, not expected to be cashed within a
             year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet.#ctor">
             <summary>
             Creates an instance of the OtherInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherInvestmentsBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherInvestmentsBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet">
             <summary>
             Amounts due from customers or clients, more than one year from the balance sheet date, for goods or services that have been
             delivered or sold in the normal course of business, or other receivables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TradeAndOtherReceivablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TradeAndOtherReceivablesNonCurrentBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TradeAndOtherReceivablesNonCurrentBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet">
             <summary>
             For an unclassified balance sheet, carrying amount as of the balance sheet date of obligations due all related parties.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the DueFromRelatedPartiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DueFromRelatedPartiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DueFromRelatedPartiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet">
             <summary>
             Preferred security issued by a trust created by the company, that is treated as a long-term liability.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet.#ctor">
             <summary>
             Creates an instance of the TrustPreferredSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TrustPreferredSecuritiesBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TrustPreferredSecuritiesBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet">
             <summary>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet.#ctor">
             <summary>
             Creates an instance of the CooperativesShareCapitalRepayableonDemandBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CooperativesShareCapitalRepayableonDemandBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CooperativesShareCapitalRepayableonDemandBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet">
             <summary>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet.#ctor">
             <summary>
             Creates an instance of the UnallocatedSurplusBalanceSheet class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnallocatedSurplusBalanceSheet.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnallocatedSurplusBalanceSheet class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement">
             <summary>
             The systematic and rational apportionment of the acquisition cost of intangible operational assets to future periods in which the benefits
             contribute to revenue. This field is to include Amortization and any variation where Amortization is the first account listed in the line item,
             excluding Amortization of Intangibles.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement">
             <summary>
             The aggregate amount of cash flow from securities calls, maturities, and redemption.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CallsMaturitiesOfMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CallsMaturitiesOfMaturitySecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CallsMaturitiesOfMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement">
             <summary>
             Funds used by a company to acquire or upgrade physical assets such as property, industrial buildings or equipment. This
             type of outlay is made by companies to maintain or increase the scope of their operations. Capital expenditures are generally
             depreciated or depleted over their useful life, as distinguished from repairs, which are subtracted from the income of the current
             year.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CapitalExpenditureCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalExpenditureCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapitalExpenditureCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement">
             <summary>
             Funds used to (collect from) acquire or upgrade (disposal) physical assets such as property, industrial buildings or equipment.
             Refers to only those transactions which are specifically a capital expenditure or disposal.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetCapitalExpenditureDisposalsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCapitalExpenditureDisposalsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetCapitalExpenditureDisposalsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement">
             <summary>
             Payments for the cash dividends declared by an entity to shareholders during the period. This element includes paid and unpaid
             dividends declared during the period for both common and preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashDividendsPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashDividendsPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashDividendsPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement">
             <summary>
             Cash generated by or used in financing activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowFromContinuingFinancingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingFinancingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFlowFromContinuingFinancingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement">
             <summary>
             Cash generated by or used in investing activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowFromContinuingInvestingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingInvestingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFlowFromContinuingInvestingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement">
             <summary>
             Cash generated by or used in operating activities of continuing operations; excludes cash flows from discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowFromContinuingOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromContinuingOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFlowFromContinuingOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement">
             <summary>
             The aggregate amount of cash flow from discontinued operation, including operating activities, investing activities, and financing
             activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowFromDiscontinuedOperationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowFromDiscontinuedOperationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFlowFromDiscontinuedOperationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement">
             <summary>
             The net cash inflow (outflow) from financing activity for the period, which involve changes to the long-term liabilities and
             stockholders' equity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the FinancingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancingCashFlowCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement">
             <summary>
             An item on the cash flow statement that reports the aggregate change in a company's cash position resulting from any gains (or
             losses) from investments in the financial markets and operating subsidiaries, and changes resulting from amounts spent on
             investments in capital assets such as plant and equipment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InvestingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InvestingCashFlowCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InvestingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement">
             <summary>
             The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity.
             Operating activities include all transactions and events that are not defined as investing or financing activities. Operating activities
             generally involve producing and delivering goods and providing services. Cash flows from operating activities are generally the cash
             effects of transactions and other events that enter into the determination of net income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OperatingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingCashFlowCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement">
             <summary>
             The cash and equivalents balance at the beginning of the accounting period, as indicated on the Cash Flow statement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the BeginningCashPositionCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BeginningCashPositionCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BeginningCashPositionCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement">
             <summary>
             The cash and cash equivalents balance at the end of the accounting period, as indicated on the Cash Flow statement. It is equal to
             the Beginning Cash and Equivalents, plus the Net Change in Cash and Equivalents.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the EndCashPositionCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EndCashPositionCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EndCashPositionCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement">
             <summary>
             Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement">
             <summary>
             Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedFinancingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedFinancingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedFinancingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement">
             <summary>
             The net cash inflow (outflow) from discontinued investing activities over the designated time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedInvestingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedInvestingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement">
             <summary>
             The net cash inflow (outflow) from discontinued investing activities over the designated time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedInvestingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedInvestingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedInvestingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedOperatingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedOperatingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the account payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInAccountPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccountPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInAccountPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the tax payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInTaxPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInTaxPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInTaxPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement">
             <summary>
             The increase or decrease between periods of the accrued expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInAccruedExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccruedExpenseCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInAccruedExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement">
             <summary>
             The net change during the reporting period in investment income that has been earned but not yet received in cash.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInAccruedInvestmentIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInAccruedInvestmentIncomeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInAccruedInvestmentIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement">
             <summary>
             The net change between the beginning and ending balance of cash and cash equivalents.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangesInCashCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesInCashCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangesInCashCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement">
             <summary>
             The change of the unamortized portion as of the balance sheet date of capitalized costs that vary with and are primarily related to
             the acquisition of new and renewal insurance contracts.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInDeferredAcquisitionCostsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDeferredAcquisitionCostsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInDeferredAcquisitionCostsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement">
             <summary>
             The amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from another bank to
             meet its reserve requirements and the amount of securities that an institution sells and agrees to repurchase at a specified date for
             a specified price, net of any reductions or offsets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement">
             <summary>
             The net change during the reporting period associated with funds withheld.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInFundsWithheldCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInFundsWithheldCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInFundsWithheldCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the income tax payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInIncomeTaxPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInIncomeTaxPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInIncomeTaxPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the interest payable. Interest payable means carrying value as of the balance sheet
             date of interest payable on all forms of debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInInterestPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInInterestPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInInterestPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement">
             <summary>
             The increase or decrease between periods of the Inventories. Inventories represent merchandise bought for resale and supplies and
             raw materials purchased for use in revenue producing operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInInventoryCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInInventoryCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInInventoryCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement">
             <summary>
             The net change that a lender gives money or property to a borrower and the borrower agrees to return the property or repay the
             borrowed money, along with interest, at a predetermined date in the future.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement">
             <summary>
             The net change during the reporting period in the reserve account established to account for expected but unspecified losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement">
             <summary>
             The increase or decrease between periods of the payables and accrued expenses. Accrued expenses represent expenses incurred
             at the end of the reporting period but not yet paid; also called accrued liabilities. The accrued liability is shown under current
             liabilities in the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInPayablesAndAccruedExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPayablesAndAccruedExpenseCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInPayablesAndAccruedExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the premium receivables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInPremiumsReceivableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPremiumsReceivableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInPremiumsReceivableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement">
             <summary>
             The increase or decrease between periods of the prepaid assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInPrepaidAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPrepaidAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInPrepaidAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the receivables. Receivables are amounts due to be paid to the company from clients
             and other.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReceivablesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement">
             <summary>
             The net change during the reporting period in the amount of benefits the ceding insurer expects to recover on insurance policies
             ceded to other insurance entities as of the balance sheet date for all guaranteed benefit types.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement">
             <summary>
             The net cash inflow (outflow) for the net change associated with funds that are not available for withdrawal or use (such as funds
             held in escrow).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInRestrictedCashCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInRestrictedCashCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInRestrictedCashCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement">
             <summary>
             The net change during the reporting period associated with trading account assets. Trading account assets are bought and held
             principally for the purpose of selling them in the near term (thus held for only a short period of time). Unrealized holding gains and
             losses for trading securities are included in earnings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInTradingAccountSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInTradingAccountSecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInTradingAccountSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement">
             <summary>
             The increase or decrease between periods of the working capital.  Working Capital is the amount left to the company to finance
             operations and expansion after current liabilities have been covered.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInWorkingCapitalCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInWorkingCapitalCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInWorkingCapitalCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement">
             <summary>
             The effect on net income, net of income taxes, of a change in accounting principle reported on the income statement in the period,
             which occurred before previously adjustments were required.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CumulativeEffectOfAccountingChangeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CumulativeEffectOfAccountingChangeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CumulativeEffectOfAccountingChangeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement">
             <summary>
             The component of income tax expense for the period representing the net change in the entities deferred tax assets and liabilities
             pertaining to continuing operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DeferredIncomeTaxCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredIncomeTaxCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredIncomeTaxCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement">
             <summary>
             Future tax liability or asset, resulting from temporary differences between book (accounting) value of assets and liabilities, and their
             tax value. This arises due to differences between financial accounting for shareholders and tax accounting.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DeferredTaxCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DeferredTaxCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DeferredTaxCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepletionCashFlowStatement">
             <summary>
             Unlike depreciation and amortization, which mainly describe the deduction of expenses due to the aging of equipment and property,
             depletion is the actual physical reduction of natural resources by companies.   For example, coalmines, oil fields and other natural
             resources are depleted on company accounting statements. This reduction in the quantity of resources is meant to assist in
             accurately identifying the value of the asset on the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DepletionCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepletionCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepletionCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement">
             <summary>
             An expense recorded to allocate a tangible asset's cost over its useful life. Since it is a non-cash expense, it increases free cash
             flow while decreasing reported earnings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement">
             <summary>
             The current period expense charged against earnings on long-lived, physical assets used in the normal conduct of business and not
             intended for resale to allocate or recognize the cost of assets over their useful lives; or to record the reduction in book value of an
             intangible asset over the benefit period of such asset.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationAndAmortizationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAndAmortizationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationAndAmortizationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement">
             <summary>
             It is a non cash charge that represents a reduction in the value of fixed assets due to wear, age or obsolescence. This figure also
             includes amortization of leased property, intangibles, and goodwill, and depletion. This non-cash item is an add-back to the cash
             flow statement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DepreciationAmortizationDepletionCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DepreciationAmortizationDepletionCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DepreciationAmortizationDepletionCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement">
             <summary>
             The effect of exchange rate changes on cash balances held in foreign currencies.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the EffectOfExchangeRateChangesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EffectOfExchangeRateChangesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EffectOfExchangeRateChangesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement">
             <summary>
             The aggregate net change during the reporting period in moneys given as security, collateral, or margin deposits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncreaseDecreaseInDepositCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseInDepositCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncreaseDecreaseInDepositCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement">
             <summary>
             The increase or decrease between periods of common stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetCommonStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCommonStockIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetCommonStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement">
             <summary>
             The increase or decrease between periods of debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetIssuancePaymentsOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIssuancePaymentsOfDebtCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIssuancePaymentsOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement">
             <summary>
             The increase or decrease between periods of long term debt. Long term debt includes notes payable, bonds payable, mortgage
             loans, convertible debt, subordinated debt and other types of long term debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetLongTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetLongTermDebtIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetLongTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement">
             <summary>
             The increase or decrease between periods of preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetPreferredStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPreferredStockIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetPreferredStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement">
             <summary>
             The increase or decrease between periods of short term debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetShortTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetShortTermDebtIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetShortTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetCashFromDiscontinuedOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetCashFromDiscontinuedOperationsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetCashFromDiscontinuedOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement">
             <summary>
             The aggregate amount of realized and unrealized gain or loss resulting from changes in exchange rates between currencies.
             (Excludes foreign currency transactions designated as hedges of net investment in a foreign entity and inter-company foreign
             currency transactions that are of a long-term nature, when the entities to the transaction are consolidated, combined, or accounted
             for by the equity method in the reporting entity's financial statements. For certain entities, primarily banks, which are dealers in
             foreign exchange, foreign currency transaction gains or losses, may be disclosed as dealer gains or losses.)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetForeignCurrencyExchangeGainLossCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetForeignCurrencyExchangeGainLossCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetForeignCurrencyExchangeGainLossCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement">
             <summary>
             The profit or loss of the entity net of income taxes for the reporting period calculated and presented in the income statement in
             accordance with GAAP.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement">
             <summary>
             Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from discontinued operations,
             extraordinary items, impact of changes in accounting principles, minority interest, and various other reconciling adjustments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromContinuingOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromContinuingOperationsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromContinuingOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement">
             <summary>
             Payment from a bank or insurance company  to the lender who lends money or property based on the agreement, along with
             interest, at a predetermined date in the future.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentForLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentForLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentForLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement">
             <summary>
             The cash outflow to reacquire common stock during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CommonStockPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockPaymentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStockPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement">
             <summary>
             The cash outflow to reacquire preferred stock during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PreferredStockPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockPaymentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement">
             <summary>
             The cash outflow for debt initially having maturity due after one year or beyond the normal operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the LongTermDebtPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtPaymentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement">
             <summary>
             The cash outflow for a borrowing having initial term of repayment within one year or the normal operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ShortTermDebtPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermDebtPaymentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShortTermDebtPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement">
             <summary>
             The cash inflow from issuance of warrants.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsFromIssuanceOfWarrantsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromIssuanceOfWarrantsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsFromIssuanceOfWarrantsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement">
             <summary>
             The cash inflow from borrowing money or property for a bank or insurance company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsFromLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsFromLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement">
             <summary>
             The cash inflow associated with the amount received from holders exercising their stock options.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsFromStockOptionExercisedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsFromStockOptionExercisedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsFromStockOptionExercisedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement">
             <summary>
             The cash inflow from offering common stock, which is the additional capital contribution to the entity during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CommonStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement">
             <summary>
             The cash inflow from a debt initially having maturity due after one year or beyond the operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the LongTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement">
             <summary>
             The cash inflow from offering preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PreferredStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement">
             <summary>
             The cash inflow from a debt initially having maturity due within one year or the normal operating cycle, if longer.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ShortTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShortTermDebtIssuanceCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShortTermDebtIssuanceCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement">
             <summary>
             The net value of proceeds or payments of loans.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetProceedsPaymentForLoanCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetProceedsPaymentForLoanCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetProceedsPaymentForLoanCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement">
             <summary>
             The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
             certificates of deposits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement">
             <summary>
             Refers to all purchases of equity securities; equity securities includes information about ownership interests or the right to acquire
             ownership interests in corporations and other legal entities. The ownership interest is represented by shares of common or
             preferred stock, convertible securities, stock rights, or stock warrants.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfEquitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfEquitySecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfEquitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement">
             <summary>
             All purchases of fixed maturity securities. Fixed maturity securities represent investments in debt securities having predetermined
             or determinable maturity dates.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfFixedMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfFixedMaturitySecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfFixedMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve intangible assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfIntangiblesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement">
             <summary>
             All purchases of investments, including both long term and short term.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfInvestmentCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfInvestmentCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfInvestmentCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement">
             <summary>
             All purchases of long-term investments that a company intends to hold for more than a year, which may include stocks, bonds, and
             real estate.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfLongTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfLongTermInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfLongTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve capital assets. This category includes property, plant
             equipment, furniture, fixed assets, buildings, and improvement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfPPECashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement">
             <summary>
             All purchases of short-term investments that a company has made that will expire within one year. Examples include marketable
             securities, commodities, money market instruments, and options.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfShortTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfShortTermInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfShortTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement">
             <summary>
             The amount of capital outlays undertaken to increase, construct or improve technology.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfTechnologyCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfTechnologyCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfTechnologyCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement">
             <summary>
             All the purchases of business including business acquisitions, investment in subsidiary; investing in affiliated companies, and join
             venture.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseOfBusinessCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement">
             <summary>
             The net change between Purchases/Sales of Business.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetBusinessPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetBusinessPurchaseAndSaleCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetBusinessPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement">
             <summary>
             The net change between Purchases/Sales of Intangibles.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetIntangiblesPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIntangiblesPurchaseAndSaleCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIntangiblesPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement">
             <summary>
             The net change between Purchases/Sales of Investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetInvestmentPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetInvestmentPurchaseAndSaleCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetInvestmentPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement">
             <summary>
             The net change between Purchases/Sales of PPE.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetPPEPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetPPEPurchaseAndSaleCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetPPEPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement">
             <summary>
             The net change between Purchases/Sales of Technology.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetTechnologyPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetTechnologyPurchaseAndSaleCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetTechnologyPurchaseAndSaleCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement">
             <summary>
             Proceeds received from selling a business including proceeds from a subsidiary, and proceeds from an affiliated company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfBusinessCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement">
             <summary>
             The amount of capital inflow from the sale of all kinds of intangible assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfIntangiblesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement">
             <summary>
             Proceeds received from selling all kind of investments, including both long term and short term.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfInvestmentCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfInvestmentCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfInvestmentCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement">
             <summary>
             Proceeds received from selling long-term investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfLongTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfLongTermInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfLongTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement">
             <summary>
             Proceeds from selling any fixed assets such as property, plant and equipment, which also includes retirement of equipment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfPPECashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement">
             <summary>
             Proceeds received from selling short-term investments; such as marketable securities, treasury bills; certificates of deposit,
             banker's acceptances, money market investments, commercial paper, Eurodollars, repurchase agreements, collateral investments,
             temporary investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfShortTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfShortTermInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfShortTermInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement">
             <summary>
             The amount of capital inflow from the sale of technology.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleOfTechnologyCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleOfTechnologyCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleOfTechnologyCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement">
             <summary>
             Proceeds from the sale of all equity securities, which represent investments in common and preferred stocks and other forms of
             securities that provide ownership interests in a corporation.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SalesOfEquitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesOfEquitySecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SalesOfEquitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement">
             <summary>
             Proceeds from the sale of fixed maturity securities, which represent investments in debt securities having predetermined or
             determinable maturity dates.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SalesOfFixedMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesOfFixedMaturitySecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SalesOfFixedMaturitySecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the accounts receivables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangesInAccountReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangesInAccountReceivablesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangesInAccountReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement">
             <summary>
             The component of interest expense representing the non-cash expenses charged against earnings in the period to allocate debt
             discount and premium, and the costs to issue debt and obtain financing over the related debt instruments. This item is usually only
             available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationOfFinancingCostsAndDiscountsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfFinancingCostsAndDiscountsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationOfFinancingCostsAndDiscountsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement">
             <summary>
             Represents amortization of the allocation of a lump sum amount to different time periods, particularly for securities, debt, loans,
             and other forms of financing. Does not include amortization, amortization of capital expenditure and intangible assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationOfSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfSecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationOfSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement">
             <summary>
             The charge against earnings resulting from the aggregate write down of all assets from their carrying value to their fair value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AssetImpairmentChargeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetImpairmentChargeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetImpairmentChargeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement">
             <summary>
             The increase or decrease between periods of the dividend payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInDividendPayableCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDividendPayableCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInDividendPayableCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement">
             <summary>
             The net change during the reporting period in the value of expenditures made during the current reporting period for benefits that
             will be received over a period of years. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInDeferredChargesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInDeferredChargesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInDeferredChargesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement">
             <summary>
             The increase or decrease between periods of the Other Current Assets. This category typically includes prepayments, deferred
             charges, and amounts (other than trade accounts) due from parents and subsidiaries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInOtherCurrentAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherCurrentAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInOtherCurrentAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the Other Current liabilities. Other Current liabilities is a balance sheet entry used by
             companies to group together current liabilities that are not assigned to common liabilities such as debt obligations or accounts
             payable.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInOtherCurrentLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherCurrentLiabilitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInOtherCurrentLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement">
             <summary>
             The increase or decrease between periods of the other working capital.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInOtherWorkingCapitalCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInOtherWorkingCapitalCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInOtherWorkingCapitalCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement">
             <summary>
             The net cash inflow (outflow) for the net change associated with the unexpired portion of premiums ceded on policies in force as of
             the balance sheet date. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInPrepaidReinsurancePremiumsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInPrepaidReinsurancePremiumsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInPrepaidReinsurancePremiumsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement">
             <summary>
             The net change during the reporting period associated with receivables currently due from reinsurers for ceded paid losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInReinsuranceReceivableOnPaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement">
             <summary>
             The net change during the reporting period associated with receivables currently due from reinsurers for ceded unpaid losses. This
             item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInReinsuranceRecoverableOnUnpaidLossesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement">
             <summary>
             The change during the period in the unearned portion of premiums written, excluding the portion amortized into income. This item is
             usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInUnearnedPremiumsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInUnearnedPremiumsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement">
             <summary>
             The change during the period for unearned premiums pursuant to terms of reinsurance arrangements. This item is usually only
             available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeInUnearnedPremiumsCededCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeInUnearnedPremiumsCededCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeInUnearnedPremiumsCededCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement">
             <summary>
             The cash outflow from the distribution of an entity's earnings in the form of dividends to common shareholders.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CommonStockDividendPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonStockDividendPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonStockDividendPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement">
             <summary>
             This item represents the entity's proportionate share for the period of the net income (loss) of its investee (such as unconsolidated
             subsidiaries and joint ventures) to which the equity method of accounting is applied. The amount typically reflects adjustments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the EarningsLossesFromEquityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EarningsLossesFromEquityInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EarningsLossesFromEquityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement">
             <summary>
             Reductions in the entity's income taxes that arise when compensation cost (from non-qualified share-based compensation)
             recognized on the entities tax return exceeds compensation cost from share-based compensation recognized in financial
             statements. This element reduces net cash provided by operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement">
             <summary>
             Gains (losses), after tax, arising from an event or transaction that is both unusual in nature and infrequent in occurrence when
             considered in relation to the environment in which the entity operates. This amount should be the same as the amount disclosed on
             the income statement. The effect of an extraordinary event or transaction should be classified separately in the income statement if
             it is material in relation to income before extraordinary items or to the trend of annual earnings before extraordinary items, or is
             material by other appropriate criteria. Items should be considered individually and not in the aggregate in determining whether an
             extraordinary event or transaction is material.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ExtraordinaryItemsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ExtraordinaryItemsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ExtraordinaryItemsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement">
             <summary>
             This item represents the net total realized gain (loss) included in earnings for the period as a result of selling or holding marketable
             securities categorized as trading, available-for-sale, or held-to-maturity, including the unrealized holding gain or loss of held-to-
             maturity securities transferred to the trading security category and the cumulative unrealized gain or loss which was included in
             other comprehensive income (a separate component of shareholders' equity) for available-for-sale securities transferred to trading
             securities during the period. Additionally, this item would include any losses recognized for other than temporary impairments of the
             subject investments in debt and equity securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the GainLossOnInvestmentSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnInvestmentSecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossOnInvestmentSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement">
             <summary>
             The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
             period. This element refers to the gain (loss) and not to the cash proceeds of the business. This element is a non-cash adjustment
             to net income when calculating net cash generated by operating activities using the indirect method.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the GainLossOnSaleOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnSaleOfBusinessCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossOnSaleOfBusinessCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement">
             <summary>
             The difference between the sale price or salvage price and the book value of the property, plant and equipment that was sold or
             retired during the reporting period. Includes the amount received from selling any fixed assets such as property, plant and
             equipment. Usually this section also includes any retirement of equipment. Such as Sale of business segments; Sale of credit and
             receivables; Property disposition; Proceeds from sale or disposition of business or investment; Decrease in excess of purchase price
             over acquired net assets; Abandoned project (expenditures) credit; Allowances for other funds during construction.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.#ctor">
             <summary>
             Creates an instance of the GainLossOnSaleOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GainLossOnSaleOfPPECashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GainLossOnSaleOfPPECashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement">
             <summary>
             An expense reported in the income statement and needs to be removed from net income to arrive at cash provided by (used in)
             operations to the extent that such interest has not been paid. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestCreditedOnPolicyholderDepositsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestCreditedOnPolicyholderDepositsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestCreditedOnPolicyholderDepositsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement">
             <summary>
             The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
             reporting entity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFromDiscontinuedOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFromDiscontinuedOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFromDiscontinuedOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement">
             <summary>
             The gain or loss from the entity's ongoing operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OperatingGainsLossesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperatingGainsLossesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperatingGainsLossesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement">
             <summary>
             Miscellaneous charges incurred due to Financing activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetOtherFinancingChargesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherFinancingChargesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOtherFinancingChargesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement">
             <summary>
             Miscellaneous charges incurred due to Investing activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetOtherInvestingChangesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOtherInvestingChangesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOtherInvestingChangesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement">
             <summary>
             Items which adjusted back from net income but without real cash outflow or inflow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherNonCashItemsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherNonCashItemsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherNonCashItemsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement">
             <summary>
             The amount of pension and other (such as medical, dental and life insurance) postretirement benefit costs recognized during the
             period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PensionAndEmployeeBenefitExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PensionAndEmployeeBenefitExpenseCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PensionAndEmployeeBenefitExpenseCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement">
             <summary>
             Pay for the amount of dividends declared or paid in the period to preferred shareholders or the amount for which the obligation to
             pay them dividends rose in the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PreferredStockDividendPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreferredStockDividendPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreferredStockDividendPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement">
             <summary>
             The aggregate amount change of (1) the lending of excess federal funds to another commercial bank requiring such for its legal
             reserve requirements and (2) securities purchased under agreements to resell. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement">
             <summary>
             The sum of the periodic provision charged to earnings, based on an assessment of uncollectible from the counterparty on account
             of loan, lease or other credit losses, to reduce these accounts to the amount that approximates their net realizable value. This item
             is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProvisionForLoanLeaseAndOtherLossesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionForLoanLeaseAndOtherLossesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProvisionForLoanLeaseAndOtherLossesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement">
             <summary>
             The gains and losses included in earnings that represent the difference between the sale price and the carrying value of loans and
             leases that were sold during the reporting period. This element refers to the gain (loss) and not to the cash proceeds of the sales.
             This element is a non-cash adjustment to net income when calculating net cash generated by operating activities using the indirect
             method. This item is usually only available for bank industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement">
             <summary>
             Value of stock issued during the period as a result of any share-based compensation plan other than an employee stock ownership
             plan (ESOP).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the StockBasedCompensationCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.StockBasedCompensationCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the StockBasedCompensationCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement">
             <summary>
             The increases (decreases) in the market value of unsold securities whose gains (losses) were included in earnings.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement">
             <summary>
             The gross gains and losses on derivatives. This item is usually only available for insurance industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the UnrealizedGainsLossesOnDerivativesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.UnrealizedGainsLossesOnDerivativesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the UnrealizedGainsLossesOnDerivativesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement">
             <summary>
             The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
             production) in a systematic and rational manner to the periods expected to benefit from such assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AmortizationOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AmortizationOfIntangiblesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AmortizationOfIntangiblesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement">
             <summary>
             This represents cash inflow due to change during the period in the allowance for other funds used during construction classified as
             an investing activity. This item is usually only available for utility industry.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AllowanceForFundsConstructionCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllowanceForFundsConstructionCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllowanceForFundsConstructionCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement">
             <summary>
             This represents sales attributed to customers who reside inside of the country where the company has its principal executive
             offices. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DomesticSalesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DomesticSalesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DomesticSalesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement">
             <summary>
             This represents sales attributed to customers who reside outside of the country where the company has its principal executive
             offices. This item is usually not available for bank and insurance industries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ForeignSalesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ForeignSalesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ForeignSalesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement">
             <summary>
             The amount of cash paid during the current period to foreign, federal state and local authorities as taxes on income.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncomeTaxPaidSupplementalDataCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxPaidSupplementalDataCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomeTaxPaidSupplementalDataCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement">
             <summary>
             The amount of cash paid during the current period for interest owed on money borrowed; including amount of interest capitalized.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestPaidSupplementalDataCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidSupplementalDataCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestPaidSupplementalDataCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement">
             <summary>
             The cash inflow from offering common stock, which is the additional capital contribution to the entity during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IssuanceOfCapitalStockCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuanceOfCapitalStockCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IssuanceOfCapitalStockCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement">
             <summary>
             The cash inflow due to an increase in long term debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IssuanceOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuanceOfDebtCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IssuanceOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement">
             <summary>
             Payments to Settle Long Term Debt plus Payments to Settle Short Term Debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the RepaymentOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepaymentOfDebtCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RepaymentOfDebtCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement">
             <summary>
             Payments for Common Stock plus Payments for Preferred Stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the RepurchaseOfCapitalStockCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepurchaseOfCapitalStockCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RepurchaseOfCapitalStockCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement">
             <summary>
             Cash Flow Operations minus Capital Expenditures.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the FreeCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FreeCashFlowCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FreeCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement">
             <summary>
             The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
             certificates of deposits.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DecreaseinInterestBearingDepositsinBankCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DecreaseinInterestBearingDepositsinBankCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DecreaseinInterestBearingDepositsinBankCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement">
             <summary>
             Increase in interest-bearing deposits in bank.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncreaseinInterestBearingDepositsinBankCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseinInterestBearingDepositsinBankCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncreaseinInterestBearingDepositsinBankCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement">
             <summary>
             Adjustment of geographical and segment income/expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AdjustedGeographySegmentDataCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdjustedGeographySegmentDataCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdjustedGeographySegmentDataCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement">
             <summary>
             Interest received by the company, in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestReceivedCFOCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedCFOCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestReceivedCFOCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement">
             <summary>
             Interest paid on loans, debt or borrowings, in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestPaidCFOCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidCFOCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestPaidCFOCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement">
             <summary>
             Purchase of subsidiaries or interest in subsidiaries (investments 51% and above).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseofSubsidiariesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseofSubsidiariesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseofSubsidiariesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement">
             <summary>
             Purchase of joint venture/associates (investment below 50%).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PurchaseofJointVentureAssociateCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PurchaseofJointVentureAssociateCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PurchaseofJointVentureAssociateCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement">
             <summary>
             Cash inflow from the disposal of any subsidiaries.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleofSubsidiariesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleofSubsidiariesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleofSubsidiariesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement">
             <summary>
             Cash inflow from the disposal of joint venture/associates (investment below 50%).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the SaleofJointVentureAssociateCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SaleofJointVentureAssociateCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SaleofJointVentureAssociateCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement">
             <summary>
             Change in cash flow resulting from increase/decrease in lease financing.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncreaseDecreaseinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseDecreaseinLeaseFinancingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncreaseDecreaseinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement">
             <summary>
             The cash inflow from increase in lease financing.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncreaseinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncreaseinLeaseFinancingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncreaseinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement">
             <summary>
             The cash outflow to repay lease financing during the period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the RepaymentinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RepaymentinLeaseFinancingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RepaymentinLeaseFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement">
             <summary>
             A non-cash adjustment for share of associates' income in respect of operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ShareofAssociatesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ShareofAssociatesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ShareofAssociatesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement">
             <summary>
             The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
             period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProfitonDisposalsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfitonDisposalsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProfitonDisposalsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement">
             <summary>
             A non-cash adjustment relating to restructuring costs.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ReorganizationOtherCostsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReorganizationOtherCostsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReorganizationOtherCostsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement">
             <summary>
             Other cash flows relating to financing activities in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherFinancingCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherFinancingCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetOutwardLoansCashFlowStatement">
             <summary>
             Adjustments due to net loans to/from outsiders in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOutwardLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetOutwardLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOutwardLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetOutwardLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetOutwardLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetOutwardLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement">
             <summary>
             Cost associated with issuance of debt/equity capital in the Financing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IssueExpensesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssueExpensesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IssueExpensesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement">
             <summary>
             The increase or decrease between periods of the Certificates of Deposits and Debt Securities Issued.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinCertificatesofDepositsandDebtSecuritiesIssuedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement">
             <summary>
             Cash outlay for purchase of held-to-maturity investments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentstoAcquireHeldToMaturityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement">
             <summary>
             Cash outlay for purchase of available-for-sale assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentstoAcquireAvailableForSaleFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement">
             <summary>
             Cash outlay for purchase of financial assets designated at fair value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentstoAcquireFinancialAssetsDesignatedasFairValueCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement">
             <summary>
             Cash inflow from sale of held-to-maturity investment securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromDisposalofHeldToMaturityInvestmentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement">
             <summary>
             Cash inflow from sale of available-for-sale financial assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromDisposalofAvailableForSaleFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement">
             <summary>
             Cash inflow from sale of financial assets designated at fair value.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromDisposalofFinancialAssetsDesignatedasFairValueCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the investment properties
             .
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinFairValueofInvestmentPropertiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFairValueofInvestmentPropertiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinFairValueofInvestmentPropertiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinDepositsbyBanksandCustomersCashFlowStatement">
             <summary>
             The increase or decrease between periods of the deposits by banks and customers.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDepositsbyBanksandCustomersCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDepositsbyBanksandCustomersCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDepositsbyBanksandCustomersCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDepositsbyBanksandCustomersCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement">
             <summary>
             The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity
             under the direct method.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement">
             <summary>
             Sum of total cash receipts in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement">
             <summary>
             Other cash receipts for the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherCashReceiptsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCashReceiptsfromOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCashReceiptsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement">
             <summary>
             Sum of total cash payment in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ClassesofCashPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClassesofCashPaymentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClassesofCashPaymentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement">
             <summary>
             Cash paid to suppliers when purchasing goods or services by the company, in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentstoSuppliersforGoodsandServicesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentstoSuppliersforGoodsandServicesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentstoSuppliersforGoodsandServicesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement">
             <summary>
             Cash received from dealing/trading contacts when the selling price is greater than the book value, in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentsfromContractsHeldforDealingorTradingPurposeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement">
             <summary>
             Cash paid in a form of salaries or other benefits to employees of the company, in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentsonBehalfofEmployeesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsonBehalfofEmployeesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentsonBehalfofEmployeesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement">
             <summary>
             Cash paid for insurance and claims, streams of fixed payments over a specified period of time and other policy benefits, in the
             direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentsforPremiumsandClaimsAnnuitiesandOtherPolicyBenefitsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement">
             <summary>
             Other cash payments for the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherCashPaymentsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherCashPaymentsfromOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherCashPaymentsfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendsPaidDirectCashFlowStatement">
             <summary>
             Dividend paid to the investors, for the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPaidDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsPaidDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsPaidDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DividendsPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsPaidDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendsPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement">
             <summary>
             Dividend received on the investment, for the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DividendsReceivedDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsReceivedDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendsReceivedDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement">
             <summary>
             Interest paid on loans, debt or borrowings, in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement">
             <summary>
             Interest received by the company, in the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestReceivedDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestReceivedDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement">
             <summary>
             Tax paid/refund related to operating activities, for the direct cash flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the TaxesRefundPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesRefundPaidDirectCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxesRefundPaidDirectCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement">
             <summary>
             Sum of all adjustments back from net income but without real cash outflow or inflow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the TotalAdjustmentsforNonCashItemsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalAdjustmentsforNonCashItemsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalAdjustmentsforNonCashItemsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement">
             <summary>
             The difference between the future net cash flows expected to be received from the asset and its book value, recognized in the
             Income Statement.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement">
             <summary>
             Income earned from associates investment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AdjustmentsforUndistributedProfitsofAssociatesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement">
             <summary>
             Other increase or decrease relating to investing or financing activities, in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherAdjustmentsforWhichCashEffectsAreInvestingorFinancingCashFlowCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendPaidCFOCashFlowStatement">
             <summary>
             Dividend paid to the investors, in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPaidCFOCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPaidCFOCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendPaidCFOCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DividendPaidCFOCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendPaidCFOCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendPaidCFOCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement">
             <summary>
             Dividend received on investment, in the Operating Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DividendReceivedCFOCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendReceivedCFOCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendReceivedCFOCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement">
             <summary>
             Total tax paid or received on operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the TaxesRefundPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxesRefundPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxesRefundPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement">
             <summary>
             Any other cash inflows or outflows in the Operating Cash Flow section, not accounted for in the other specified items.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherOperatingInflowsOutflowsofCashCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherOperatingInflowsOutflowsofCashCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherOperatingInflowsOutflowsofCashCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement">
             <summary>
             Any cash received from government in relation to grants, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromGovernmentGrantsCFICashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFICashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromGovernmentGrantsCFICashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement">
             <summary>
             Cash outlay for cash advances and loans made to other parties.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement">
             <summary>
             Cash received from the repayment of advances and loans made to other parties, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement">
             <summary>
             Cash flow associated with the purchase/sale of financial derivative contracts, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromPaymentsforFinancialDerivativeContractsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement">
             <summary>
             Dividend received on investment, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.#ctor">
             <summary>
             Creates an instance of the DividendsReceivedCFICashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendsReceivedCFICashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendsReceivedCFICashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement">
             <summary>
             Interest received by the company, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestReceivedCFICashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestReceivedCFICashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestReceivedCFICashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement">
             <summary>
             Amount of income taxes received as refund or paid related to an investing activity, in the Investing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncomeTaxesRefundPaidCFICashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFICashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomeTaxesRefundPaidCFICashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement">
             <summary>
             The net cash inflow or outflow resulting from the investment.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IssuancePaymentofOtherEquityInstrumentsNetCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement">
             <summary>
             Cash paid for other equity instruments.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PaymentsofOtherEquityInstrumentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentsofOtherEquityInstrumentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentsofOtherEquityInstrumentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement">
             <summary>
             Cash inflow from the issuance of other equity instruments (like common limited partners units) during the financial period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromIssuingOtherEquityInstrumentsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement">
             <summary>
             Any cash received from government in relation to grants, in the Financing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProceedsfromGovernmentGrantsCFFCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProceedsfromGovernmentGrantsCFFCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProceedsfromGovernmentGrantsCFFCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement">
             <summary>
             Interest paid on loans, debt or borrowings, in the Financing Cash Flow section.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestPaidCFFCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestPaidCFFCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestPaidCFFCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement">
             <summary>
             Amount of income taxes received as refund or paid related to a financing activity.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the IncomeTaxesRefundPaidCFFCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.IncomeTaxesRefundPaidCFFCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the IncomeTaxesRefundPaidCFFCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement">
             <summary>
             The increase or decrease between periods in the amount of outstanding money owed by a customer for goods or services provided
             by the company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinAccruedIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinAccruedIncomeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinAccruedIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement">
             <summary>
             The increase or decrease between periods of the deferred expenses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinDeferredIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDeferredIncomeCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinDeferredIncomeCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinFinancialAssetsCashFlowStatement">
             <summary>
             The increase or decrease between periods of the financial assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFinancialAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFinancialAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinFinancialAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement">
             <summary>
             The increase or decrease between periods of the advances from central banks.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinAdvancesfromCentralBanksCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinAdvancesfromCentralBanksCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinAdvancesfromCentralBanksCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the financial liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinFinancialLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinFinancialLiabilitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinFinancialLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement">
             <summary>
             The increase or decrease between periods of the contract assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInsuranceContractAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceContractAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInsuranceContractAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the reinsurance receivable.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinReinsuranceReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsuranceReceivablesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinReinsuranceReceivablesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement">
             <summary>
             The increase or decrease between periods of the deferred acquisition costs.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinDeferredAcquisitionCostsNetCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinDeferredAcquisitionCostsNetCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinDeferredAcquisitionCostsNetCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement">
             <summary>
             The increase or decrease between periods of the insurance funds.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInsuranceFundsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceFundsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInsuranceFundsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the reinsurance payables.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinReinsurancePayablesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinReinsurancePayablesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinReinsurancePayablesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the investment contract liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInvestmentContractLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInvestmentContractLiabilitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInvestmentContractLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement">
             <summary>
             The increase or decrease between periods of the insurance contract liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ChangeinInsuranceContractLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ChangeinInsuranceContractLiabilitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ChangeinInsuranceContractLiabilitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement">
             <summary>
             A non-cash adjustment for total provision and write off on assets &amp; liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ProvisionandWriteOffofAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProvisionandWriteOffofAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProvisionandWriteOffofAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement">
             <summary>
             Payment received from customers in the Direct Cash Flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ReceiptsfromCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceiptsfromCustomersCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReceiptsfromCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement">
             <summary>
             Cash received from governments in the form of grants in the Direct Cash Flow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ReceiptsfromGovernmentGrantsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceiptsfromGovernmentGrantsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReceiptsfromGovernmentGrantsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.MinorityInterestCashFlowStatement">
             <summary>
             Amount of net income (loss) for the period allocated to non-controlling shareholders, partners, or other equity holders in one or
             more of the entities included.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.MinorityInterestCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the MinorityInterestCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.MinorityInterestCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the MinorityInterestCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement">
             <summary>
             Capital expenditure, capitalized software development cost, maintenance capital expenditure, etc. as reported by the company.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CapExReportedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapExReportedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapExReportedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement">
             <summary>
             Cash received as refunds from tax authorities in operating cash flow, using the direct method
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromTaxRefundsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromTaxRefundsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromTaxRefundsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement">
             <summary>
             Cash received from borrowings in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromBorrowingsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromBorrowingsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromBorrowingsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement">
             <summary>
             Cash received from banks and customers deposits in operating cash flow, using the direct method. This item is usually only
             available for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement">
             <summary>
             Cash received from loans in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement">
             <summary>
             Cash received from the trading of securities in operating cash flow, using the direct method. This item is usually only available for
             bank and insurance industries
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement">
             <summary>
             Cash received from assets reduction (usually from sale or disposal) in operating cash flow, using the direct method. This item is
             usually available for bank and insurance industries
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromDecreaseinAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromDecreaseinAssetsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromDecreaseinAssetsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement">
             <summary>
             Cash received from agency fees and commissions in operating cash flow, using the direct method. This item is usually available for
             bank and insurance industries
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceiptsfromFeesandCommissionsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceiptsfromFeesandCommissionsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceiptsfromFeesandCommissionsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement">
             <summary>
             Cash paid for borrowing money from other parties in operating cash flow, using the direct method. This item is usually only available
             for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashPaymentsforBorrowingsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforBorrowingsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashPaymentsforBorrowingsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement">
             <summary>
             Cash paid for deposits by banks and customers in operating cash flow, using the direct method. This item is usually only available
             for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement">
             <summary>
             Cash paid for loans in operating cash flow, using the direct method. This item is usually only available for bank industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashPaymentsforLoansCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaymentsforLoansCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashPaymentsforLoansCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement">
             <summary>
             Cash paid for interest and commission in operating cash flow, using the direct method
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the InterestandCommissionPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestandCommissionPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestandCommissionPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement">
             <summary>
             Cash paid to tax authorities in operating cash flow, using the direct method
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the AllTaxesPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AllTaxesPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AllTaxesPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement">
             <summary>
             Cash received from insurance activities in operating cash flow, using the direct method. This item is usually only available for
             insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashReceivedfromInsuranceActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashReceivedfromInsuranceActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashReceivedfromInsuranceActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement">
             <summary>
             Cash received from premium income in operating cash flow, using the direct method. This item is usually only available for
             insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PremiumReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PremiumReceivedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PremiumReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement">
             <summary>
             Cash received from reinsurance income or other recoveries income in operating cash flow, using the direct method. This item is
             usually only available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ReinsuranceandOtherRecoveriesReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReinsuranceandOtherRecoveriesReceivedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReinsuranceandOtherRecoveriesReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement">
             <summary>
             Cash received from policyholder deposit investment activities in operating cash flow, using the direct method. This item is usually
             only available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the PolicyholderDepositInvestmentReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PolicyholderDepositInvestmentReceivedCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PolicyholderDepositInvestmentReceivedCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement">
             <summary>
             Cash paid out for insurance activities during the period in operating cash flow, using the direct method. This item is usually only
             available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashPaidforInsuranceActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaidforInsuranceActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashPaidforInsuranceActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement">
             <summary>
             Cash paid out for claims by a insurance company during the period in operating cash flow, using the direct method. This item is
             usually only available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the ClaimsPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ClaimsPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ClaimsPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement">
             <summary>
             Cash paid for commissions in operating cash flow, using the direct method
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CommissionPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommissionPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommissionPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement">
             <summary>
             Cash paid out to reinsurers in operating cash flow, using the direct method. This item is usually only available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashPaidtoReinsurersCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashPaidtoReinsurersCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashPaidtoReinsurersCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement">
             <summary>
             Cash paid out for underwriting expenses, such as the acquisition of new and renewal insurance contracts, in operating cash flow,
             using the direct method. This item is usually only available for insurance industry
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the OtherUnderwritingExpensesPaidCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OtherUnderwritingExpensesPaidCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OtherUnderwritingExpensesPaidCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement">
             <summary>
             Cash Distribution of earnings to Minority Stockholders.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashDividendsForMinoritiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashDividendsForMinoritiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashDividendsForMinoritiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement">
             <summary>
             The profit or loss of the entity from discontinued operations, represeted as a cash inflow/outflow within operating cashflow.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the NetIncomeFromDiscontinuedOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeFromDiscontinuedOperationsCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeFromDiscontinuedOperationsCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement">
             <summary>
             The net cash from an entity's operating activities before real cash inflow or outflow for Dividend, Interest, Tax, or other unclassified
             operating activities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.#ctor">
             <summary>
             Creates an instance of the CashGeneratedfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashGeneratedfromOperatingActivitiesCashFlowStatement.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashGeneratedfromOperatingActivitiesCashFlowStatement class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalRiskBasedCapital">
             <summary>
             The sum of Tier 1 and Tier 2 Capital. Tier 1 capital consists of common shareholders equity, perpetual preferred shareholders equity
             with non-cumulative dividends, retained earnings, and minority interests in the equity accounts of consolidated subsidiaries. Tier 2
             capital consists of subordinated debt, intermediate-term preferred stock, cumulative and long-term preferred stock, and a portion of
             a banks allowance for loan and lease losses.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.#ctor">
             <summary>
             Creates an instance of the TotalRiskBasedCapital class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalRiskBasedCapital.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalRiskBasedCapital class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicContinuousOperations">
             <summary>
             Basic EPS from Continuing Operations is the earnings from continuing operations reported by the company divided by the weighted
             average number of common shares outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicContinuousOperations.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicContinuousOperations.#ctor">
             <summary>
             Creates an instance of the BasicContinuousOperations class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicContinuousOperations.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicContinuousOperations class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations">
             <summary>
             Basic EPS from Discontinued Operations is the earnings from discontinued operations reported by the company divided by the
             weighted average number of common shares outstanding. This only includes gain or loss from discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.#ctor">
             <summary>
             Creates an instance of the BasicDiscontinuousOperations class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicDiscontinuousOperations.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicDiscontinuousOperations class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicExtraordinary">
             <summary>
             Basic EPS from the Extraordinary Gains/Losses is the earnings attributable to the gains or losses (during the reporting period) from
             extraordinary items divided by the weighted average number of common shares outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicExtraordinary.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicExtraordinary.#ctor">
             <summary>
             Creates an instance of the BasicExtraordinary class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicExtraordinary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicExtraordinary class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicAccountingChange">
             <summary>
             Basic EPS from the Cumulative Effect of Accounting Change is the earnings attributable to the accounting change (during the
             reporting period) divided by the weighted average number of common shares outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAccountingChange.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAccountingChange.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAccountingChange.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAccountingChange.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAccountingChange.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicAccountingChange.#ctor">
             <summary>
             Creates an instance of the BasicAccountingChange class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicAccountingChange.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicAccountingChange class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicEPS">
             <summary>
             Basic EPS is the bottom line net income divided by the weighted average number of common shares outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicEPS.#ctor">
             <summary>
             Creates an instance of the BasicEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedContinuousOperations">
             <summary>
             Diluted EPS from Continuing Operations is the earnings from continuing operations divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities.  Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContinuousOperations.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedContinuousOperations.#ctor">
             <summary>
             Creates an instance of the DilutedContinuousOperations class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedContinuousOperations.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedContinuousOperations class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations">
             <summary>
             Diluted EPS from Discontinued Operations is the earnings from discontinued operations divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock. This only includes gain or loss from discontinued operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.#ctor">
             <summary>
             Creates an instance of the DilutedDiscontinuousOperations class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedDiscontinuousOperations.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedDiscontinuousOperations class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedExtraordinary">
             <summary>
             Diluted EPS from Extraordinary Gain/Losses is the gain or loss from extraordinary items divided by the common shares outstanding
             adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
             debentures, warrants, options, and convertible preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedExtraordinary.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedExtraordinary.#ctor">
             <summary>
             Creates an instance of the DilutedExtraordinary class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedExtraordinary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedExtraordinary class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedAccountingChange">
             <summary>
             Diluted EPS from Cumulative Effect Accounting Changes is the earnings from accounting changes (in the reporting period) divided
             by the common shares outstanding adjusted for the assumed conversion of all potentially dilutive securities. Securities having a
             dilutive effect may include convertible debentures, warrants, options, and convertible preferred stock.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAccountingChange.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAccountingChange.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAccountingChange.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAccountingChange.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAccountingChange.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedAccountingChange.#ctor">
             <summary>
             Creates an instance of the DilutedAccountingChange class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedAccountingChange.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedAccountingChange class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedEPS">
             <summary>
             Diluted EPS is the bottom line net income divided by the common shares outstanding adjusted for the assumed conversion of all
             potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants, options, and
             convertible preferred stock. This value will be derived when not reported for the fourth quarter and will be less than or equal to
             Basic EPS.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPS.#ctor">
             <summary>
             Creates an instance of the DilutedEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicAverageShares">
             <summary>
             The shares outstanding used to calculate Basic EPS, which is the weighted average common share outstanding through the whole
             accounting period.  Note: If Basic Average Shares are not presented by the firm in the Income Statement, this data point will be
             null.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicAverageShares.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicAverageShares.#ctor">
             <summary>
             Creates an instance of the BasicAverageShares class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicAverageShares.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicAverageShares class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedAverageShares">
             <summary>
             The shares outstanding used to calculate the diluted EPS, assuming the conversion of all convertible securities and the exercise of
             warrants or stock options. It is the weighted average diluted share outstanding through the whole accounting period.  Note: If
             Diluted Average Shares are not presented by the firm in the Income Statement and Basic Average Shares are presented, Diluted
             Average Shares will equal Basic Average Shares.  However, if neither value is presented by the firm, Diluted Average Shares will be
             null.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedAverageShares.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedAverageShares.#ctor">
             <summary>
             Creates an instance of the DilutedAverageShares class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedAverageShares.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedAverageShares class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DividendPerShare">
             <summary>
             The amount of dividend that a stockholder will receive for each share of stock held. It can be calculated by taking the total amount
             of dividends paid and dividing it by the total shares outstanding. Dividend per share = total dividend payment/total number of
             outstanding shares
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DividendPerShare.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendPerShare.#ctor">
             <summary>
             Creates an instance of the DividendPerShare class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DividendPerShare.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DividendPerShare class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses">
             <summary>
             Basic EPS from the Other Gains/Losses is the earnings attributable to the other gains/losses (during the reporting period) divided by
             the weighted average number of common shares outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.#ctor">
             <summary>
             Creates an instance of the BasicEPSOtherGainsLosses class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.BasicEPSOtherGainsLosses.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the BasicEPSOtherGainsLosses class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS">
             <summary>
             Basic EPS from Continuing Operations plus Basic EPS from Discontinued Operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.#ctor">
             <summary>
             Creates an instance of the ContinuingAndDiscontinuedBasicEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedBasicEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ContinuingAndDiscontinuedBasicEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS">
             <summary>
             The earnings attributable to the tax loss carry forward (during the reporting period).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.#ctor">
             <summary>
             Creates an instance of the TaxLossCarryforwardBasicEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxLossCarryforwardBasicEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxLossCarryforwardBasicEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses">
             <summary>
             The earnings from gains and losses (in the reporting period) divided by the common shares outstanding adjusted for the assumed
             conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants,
             options, convertible preferred stock, etc.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.#ctor">
             <summary>
             Creates an instance of the DilutedEPSOtherGainsLosses class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPSOtherGainsLosses.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedEPSOtherGainsLosses class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS">
             <summary>
             Diluted EPS from Continuing Operations plus Diluted EPS from Discontinued Operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.#ctor">
             <summary>
             Creates an instance of the ContinuingAndDiscontinuedDilutedEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ContinuingAndDiscontinuedDilutedEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ContinuingAndDiscontinuedDilutedEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS">
             <summary>
             The earnings from any tax loss carry forward (in the reporting period).
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.#ctor">
             <summary>
             Creates an instance of the TaxLossCarryforwardDilutedEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxLossCarryforwardDilutedEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxLossCarryforwardDilutedEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedBasicEPS">
             <summary>
             The basic normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with a
             more accurate measure of the company's true earnings. Normalized Earnings / Basic Weighted Average Shares Outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedBasicEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedBasicEPS.#ctor">
             <summary>
             Creates an instance of the NormalizedBasicEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedBasicEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedBasicEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedDilutedEPS">
             <summary>
             The diluted normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with
             a more accurate measure of the company's true earnings. Normalized Earnings / Diluted Weighted Average Shares Outstanding.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.#ctor">
             <summary>
             Creates an instance of the NormalizedDilutedEPS class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedDilutedEPS.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedDilutedEPS class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDividendPerShare">
             <summary>
             Total Dividend Per Share is cash dividends and special cash dividends paid per share over a certain period of time
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDividendPerShare.TwelveMonths">
             <summary>
             Gets/sets the TwelveMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPerShare.#ctor">
             <summary>
             Creates an instance of the TotalDividendPerShare class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDividendPerShare.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDividendPerShare class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RevenueGrowth">
             <summary>
             The growth in the company's revenue on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying revenue data reported in the Income Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenueGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenueGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenueGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenueGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RevenueGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenueGrowth.#ctor">
             <summary>
             Creates an instance of the RevenueGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RevenueGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RevenueGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperationIncomeGrowth">
             <summary>
             The growth in the company's operating income on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying operating income data reported in the Income Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationIncomeGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationIncomeGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationIncomeGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationIncomeGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationIncomeGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationIncomeGrowth.#ctor">
             <summary>
             Creates an instance of the OperationIncomeGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationIncomeGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperationIncomeGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeGrowth">
             <summary>
             The growth in the company's net income on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying net income data reported in the Income Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeGrowth.#ctor">
             <summary>
             Creates an instance of the NetIncomeGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth">
             <summary>
             The growth in the company's net income from continuing operati
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.#ctor">
             <summary>
             Creates an instance of the NetIncomeContOpsGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetIncomeContOpsGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetIncomeContOpsGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CFOGrowth">
             <summary>
             The growth in the company's cash flow from operations on a percentage basis. Morningstar calculates the growth percentage
             based on the underlying cash flow from operations data reported in the Cash Flow Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CFOGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CFOGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CFOGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CFOGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CFOGrowth.#ctor">
             <summary>
             Creates an instance of the CFOGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CFOGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CFOGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FCFGrowth">
             <summary>
             The growth in the company's free cash flow on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying cash flow from operations and capital expenditures data reported in the Cash Flow Statement within the company filings
             or reports:   Free Cash Flow = Cash flow from operations - Capital Expenditures.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFGrowth.#ctor">
             <summary>
             Creates an instance of the FCFGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FCFGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg">
             <summary>
             The growth in the company's operating revenue on a percentage basis. Morningstar calculates the growth percentage based on
             the underlying operating revenue data reported in the Income Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.#ctor">
             <summary>
             Creates an instance of the OperationRevenueGrowth3MonthAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationRevenueGrowth3MonthAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperationRevenueGrowth3MonthAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossMargin">
             <summary>
             Refers to the ratio of gross profit to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:   (Revenue - Cost of Goods Sold) / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossMargin.#ctor">
             <summary>
             Creates an instance of the GrossMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperationMargin">
             <summary>
             Refers to the ratio of operating income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Operating Income / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationMargin.#ctor">
             <summary>
             Creates an instance of the OperationMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the OperationMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PretaxMargin">
             <summary>
             Refers to the ratio of pretax income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Pretax Income / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PretaxMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PretaxMargin.#ctor">
             <summary>
             Creates an instance of the PretaxMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PretaxMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PretaxMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NetMargin">
             <summary>
             Refers to the ratio of net income to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:   Net Income / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NetMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetMargin.#ctor">
             <summary>
             Creates an instance of the NetMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NetMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NetMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TaxRate">
             <summary>
             Refers to the ratio of tax provision to pretax income. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Tax Provision / Pretax Income.
             [Note: Valid only when positive pretax income, and  positive tax expense (not tax benefit)]
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TaxRate.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxRate.#ctor">
             <summary>
             Creates an instance of the TaxRate class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TaxRate.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TaxRate class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EBITMargin">
             <summary>
             Refers to the ratio of earnings before interest and taxes to revenue. Morningstar calculates the ratio by using the underlying data
             reported in the company filings or reports:   EBIT / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITMargin.#ctor">
             <summary>
             Creates an instance of the EBITMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EBITMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EBITDAMargin">
             <summary>
             Refers to the ratio of earnings before interest, taxes and depreciation and amortization to revenue. Morningstar calculates the ratio
             by using the underlying data reported in the company filings or reports:   EBITDA / Revenue.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EBITDAMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITDAMargin.#ctor">
             <summary>
             Creates an instance of the EBITDAMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EBITDAMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EBITDAMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SalesPerEmployee">
             <summary>
             Refers to the ratio of Revenue to Employees. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:     Revenue / Employee Number.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SalesPerEmployee.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesPerEmployee.#ctor">
             <summary>
             Creates an instance of the SalesPerEmployee class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SalesPerEmployee.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the SalesPerEmployee class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CurrentRatio">
             <summary>
             Refers to the ratio of Current Assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in
             the Balance Sheet within the company filings or reports:     Current Assets / Current Liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CurrentRatio.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentRatio.#ctor">
             <summary>
             Creates an instance of the CurrentRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CurrentRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CurrentRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.QuickRatio">
             <summary>
             Refers to the ratio of liquid assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    ( Cash, Cash Equivalents, and ShortTerm Investments + Receivables ) /
             Current Liabilities.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.QuickRatio.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.QuickRatio.#ctor">
             <summary>
             Creates an instance of the QuickRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.QuickRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the QuickRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio">
             <summary>
             Refers to the ratio of Long Term Debt to Total Capital. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / (Long-Term Debt And Capital
             Lease Obligation + Total Shareholder's Equity)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.#ctor">
             <summary>
             Creates an instance of the LongTermDebtTotalCapitalRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtTotalCapitalRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtTotalCapitalRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InterestCoverage">
             <summary>
             Refers to the ratio of EBIT to Interest Expense. Morningstar calculates the ratio by using the underlying data reported in the Income
             Statement within the company filings or reports:    EBIT / Interest Expense.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InterestCoverage.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestCoverage.#ctor">
             <summary>
             Creates an instance of the InterestCoverage class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InterestCoverage.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InterestCoverage class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio">
             <summary>
             Refers to the ratio of Long Term Debt to Common Equity. Morningstar calculates the ratio by using the underlying data reported in
             the Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / Common Equity.
             [Note: Common Equity = Total Shareholder's Equity - Preferred Stock]
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.#ctor">
             <summary>
             Creates an instance of the LongTermDebtEquityRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.LongTermDebtEquityRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the LongTermDebtEquityRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FinancialLeverage">
             <summary>
             Refers to the ratio of Total Assets to Common Equity. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    Total Assets / Common Equity.   [Note: Common Equity = Total
             Shareholder's Equity - Preferred Stock]
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FinancialLeverage.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLeverage.#ctor">
             <summary>
             Creates an instance of the FinancialLeverage class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FinancialLeverage.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FinancialLeverage class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.TotalDebtEquityRatio">
             <summary>
             Refers to the ratio of Current Debt and Long Term Debt to Common Equity. Morningstar calculates the ratio by using the underlying
             data reported in the Balance Sheet within the company filings or reports:    (Current Debt And Current Capital Lease Obligation +
             Long-Term Debt And Long-Term Capital Lease Obligation / Common Equity.   [Note: Common Equity = Total Shareholder's Equity -
             Preferred Stock]
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.#ctor">
             <summary>
             Creates an instance of the TotalDebtEquityRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.TotalDebtEquityRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the TotalDebtEquityRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin">
             <summary>
             Normalized Income / Total Revenue. A measure of profitability of the company calculated by finding Normalized Net Profit as a
             percentage of Total Revenues.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.#ctor">
             <summary>
             Creates an instance of the NormalizedNetProfitMargin class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedNetProfitMargin.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedNetProfitMargin class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DaysInSales">
             <summary>
             365 / Receivable Turnover
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInSales.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInSales.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInSales.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInSales.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInSales.#ctor">
             <summary>
             Creates an instance of the DaysInSales class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInSales.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DaysInSales class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DaysInInventory">
             <summary>
             365 / Inventory turnover
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInInventory.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInInventory.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInInventory.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInInventory.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInInventory.#ctor">
             <summary>
             Creates an instance of the DaysInInventory class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInInventory.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DaysInInventory class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DaysInPayment">
             <summary>
             365 / Payable turnover
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInPayment.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInPayment.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInPayment.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DaysInPayment.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInPayment.#ctor">
             <summary>
             Creates an instance of the DaysInPayment class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DaysInPayment.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DaysInPayment class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CashConversionCycle">
             <summary>
             Days In Inventory + Days In Sales - Days In Payment
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashConversionCycle.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashConversionCycle.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashConversionCycle.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CashConversionCycle.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashConversionCycle.#ctor">
             <summary>
             Creates an instance of the CashConversionCycle class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CashConversionCycle.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CashConversionCycle class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ReceivableTurnover">
             <summary>
             Revenue / Average Accounts Receivables
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivableTurnover.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivableTurnover.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivableTurnover.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ReceivableTurnover.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivableTurnover.#ctor">
             <summary>
             Creates an instance of the ReceivableTurnover class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ReceivableTurnover.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ReceivableTurnover class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.InventoryTurnover">
             <summary>
             Cost Of Goods Sold / Average Inventory
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryTurnover.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryTurnover.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryTurnover.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.InventoryTurnover.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoryTurnover.#ctor">
             <summary>
             Creates an instance of the InventoryTurnover class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.InventoryTurnover.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the InventoryTurnover class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PaymentTurnover">
             <summary>
             Cost of Goods Sold / Average Accounts Payables
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentTurnover.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentTurnover.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentTurnover.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PaymentTurnover.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentTurnover.#ctor">
             <summary>
             Creates an instance of the PaymentTurnover class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PaymentTurnover.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PaymentTurnover class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FixAssetsTuronver">
             <summary>
             Revenue / Average PP&amp;E
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixAssetsTuronver.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixAssetsTuronver.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixAssetsTuronver.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FixAssetsTuronver.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixAssetsTuronver.#ctor">
             <summary>
             Creates an instance of the FixAssetsTuronver class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FixAssetsTuronver.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FixAssetsTuronver class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AssetsTurnover">
             <summary>
             Revenue / Average Total Assets
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsTurnover.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsTurnover.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsTurnover.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AssetsTurnover.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsTurnover.#ctor">
             <summary>
             Creates an instance of the AssetsTurnover class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AssetsTurnover.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AssetsTurnover class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ROE">
             <summary>
             Net Income / Average Total Common Equity
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROE.#ctor">
             <summary>
             Creates an instance of the ROE class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROE.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ROE class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ROA">
             <summary>
             Net Income / Average Total Assets
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROA.#ctor">
             <summary>
             Creates an instance of the ROA class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROA.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ROA class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ROIC">
             <summary>
             Net Income / (Total Equity + Long-term Debt and Capital Lease Obligation + Short-term Debt and Capital Lease Obligation)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROIC.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROIC.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROIC.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROIC.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROIC.#ctor">
             <summary>
             Creates an instance of the ROIC class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROIC.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ROIC class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FCFSalesRatio">
             <summary>
             Free Cash flow / Revenue
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFSalesRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFSalesRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFSalesRatio.#ctor">
             <summary>
             Creates an instance of the FCFSalesRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFSalesRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FCFSalesRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.FCFNetIncomeRatio">
             <summary>
             Free Cash Flow / Net Income
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFNetIncomeRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.FCFNetIncomeRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFNetIncomeRatio.#ctor">
             <summary>
             Creates an instance of the FCFNetIncomeRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.FCFNetIncomeRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the FCFNetIncomeRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapExSalesRatio">
             <summary>
             Capital Expenditure / Revenue
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExSalesRatio.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapExSalesRatio.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapExSalesRatio.#ctor">
             <summary>
             Creates an instance of the CapExSalesRatio class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapExSalesRatio.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapExSalesRatio class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DebttoAssets">
             <summary>
             This is a leverage ratio used to determine how much debt (a sum of long term and current portion of debt) a company has on its
             balance sheet relative to total assets. This ratio examines the percent of the company that is financed by debt.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DebttoAssets.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebttoAssets.#ctor">
             <summary>
             Creates an instance of the DebttoAssets class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DebttoAssets.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DebttoAssets class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CommonEquityToAssets">
             <summary>
             This is a financial ratio of common stock equity to total assets that indicates the relative proportion of equity used to finance a
             company's assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.OneMonth">
             <summary>
             Gets/sets the OneMonth period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.TwoMonths">
             <summary>
             Gets/sets the TwoMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CommonEquityToAssets.NineMonths">
             <summary>
             Gets/sets the NineMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonEquityToAssets.#ctor">
             <summary>
             Creates an instance of the CommonEquityToAssets class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CommonEquityToAssets.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CommonEquityToAssets class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth">
             <summary>
             This is the compound annual growth rate of the company's capital spending over the last 5 years. Capital Spending is the sum of
             the Capital Expenditure items found in the Statement of Cash Flows.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.#ctor">
             <summary>
             Creates an instance of the CapitalExpenditureAnnual5YrGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.CapitalExpenditureAnnual5YrGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the CapitalExpenditureAnnual5YrGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth">
             <summary>
             This is the compound annual growth rate of the company's Gross Profit over the last 5 years.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.#ctor">
             <summary>
             Creates an instance of the GrossProfitAnnual5YrGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossProfitAnnual5YrGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossProfitAnnual5YrGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.GrossMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Gross Margin over the last 5 years. Gross Margin is Total Revenue minus Cost
             of Goods Sold divided by Total Revenue and is expressed as a percentage.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.GrossMargin5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossMargin5YrAvg.#ctor">
             <summary>
             Creates an instance of the GrossMargin5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.GrossMargin5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the GrossMargin5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PostTaxMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Post Tax Margin over the last 5 years. Post tax margin is Post tax divided by
             total revenue for the same period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PostTaxMargin5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PostTaxMargin5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PostTaxMargin5YrAvg.#ctor">
             <summary>
             Creates an instance of the PostTaxMargin5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PostTaxMargin5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PostTaxMargin5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.PreTaxMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Pre Tax Margin over the last 5 years. Pre tax margin is Pre tax divided by total
             revenue for the same period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreTaxMargin5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.PreTaxMargin5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreTaxMargin5YrAvg.#ctor">
             <summary>
             Creates an instance of the PreTaxMargin5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.PreTaxMargin5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the PreTaxMargin5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ProfitMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Net Profit Margin over the last 5 years. Net profit margin is post tax income
             divided by total revenue for the same period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitMargin5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ProfitMargin5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfitMargin5YrAvg.#ctor">
             <summary>
             Creates an instance of the ProfitMargin5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ProfitMargin5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ProfitMargin5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ROE5YrAvg">
             <summary>
             This is the simple average of the company's ROE over the last 5 years. Return on equity reveals how much profit a company has
             earned in comparison to the total amount of shareholder equity found on the balance sheet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROE5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROE5YrAvg.#ctor">
             <summary>
             Creates an instance of the ROE5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROE5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ROE5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ROA5YrAvg">
             <summary>
             This is the simple average of the company's ROA over the last 5 years. Return on asset is calculated by dividing a company's annual
             earnings by its average total assets.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA5YrAvg.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ROA5YrAvg.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROA5YrAvg.#ctor">
             <summary>
             Creates an instance of the ROA5YrAvg class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ROA5YrAvg.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the ROA5YrAvg class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.AVG5YrsROIC">
             <summary>
             This is the simple average of the company's ROIC over the last 5 years. Return on invested capital is calculated by taking net
             operating profit after taxes and dividends and dividing by the total amount of capital invested and expressing the result as a
             percentage.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AVG5YrsROIC.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.AVG5YrsROIC.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AVG5YrsROIC.#ctor">
             <summary>
             Creates an instance of the AVG5YrsROIC class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.AVG5YrsROIC.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the AVG5YrsROIC class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.NormalizedROIC">
             <summary>
             [Normalized Income + (Interest Expense * (1-Tax Rate))]  / Invested Capital
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedROIC.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedROIC.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedROIC.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.NormalizedROIC.SixMonths">
             <summary>
             Gets/sets the SixMonths period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedROIC.#ctor">
             <summary>
             Creates an instance of the NormalizedROIC class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.NormalizedROIC.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the NormalizedROIC class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RegressionGrowthOperatingRevenue5Years">
             <summary>
             The five-year growth rate of operating revenue, calculated using regression analysis.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegressionGrowthOperatingRevenue5Years.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegressionGrowthOperatingRevenue5Years.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegressionGrowthOperatingRevenue5Years.#ctor">
             <summary>
             Creates an instance of the RegressionGrowthOperatingRevenue5Years class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegressionGrowthOperatingRevenue5Years.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RegressionGrowthOperatingRevenue5Years class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedEPSGrowth">
             <summary>
             The growth in the company's diluted earnings per share (EPS) on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying diluted EPS reported in the Income Statement within the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedEPSGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPSGrowth.#ctor">
             <summary>
             Creates an instance of the DilutedEPSGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedEPSGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedEPSGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DilutedContEPSGrowth">
             <summary>
             The growth in the company's diluted EPS from continuing operations on a percentage basis. Morningstar calculates the annualized
             growth percentage based on the underlying diluted EPS from continuing operations reported in the Income Statement within the
             company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.#ctor">
             <summary>
             Creates an instance of the DilutedContEPSGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DilutedContEPSGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DilutedContEPSGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.DPSGrowth">
             <summary>
             The growth in the company's dividends per share (DPS) on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying DPS from its dividend database.  Morningstar collects its DPS from company filings and
             reports, as well as from third party sources.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DPSGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DPSGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DPSGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DPSGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.DPSGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DPSGrowth.#ctor">
             <summary>
             Creates an instance of the DPSGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.DPSGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the DPSGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.EquityPerShareGrowth">
             <summary>
             The growth in the company's book value per share on a percentage basis. Morningstar calculates the annualized growth
             percentage based on the underlying equity and end of period shares outstanding reported in the company filings or reports.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityPerShareGrowth.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityPerShareGrowth.OneYear">
             <summary>
             Gets/sets the OneYear period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityPerShareGrowth.ThreeMonths">
             <summary>
             Gets/sets the ThreeMonths period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityPerShareGrowth.ThreeYears">
             <summary>
             Gets/sets the ThreeYears period value for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.EquityPerShareGrowth.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityPerShareGrowth.#ctor">
             <summary>
             Creates an instance of the EquityPerShareGrowth class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.EquityPerShareGrowth.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the EquityPerShareGrowth class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.RegressionGrowthofDividends5Years">
             <summary>
             The five-year growth rate of dividends per share, calculated using regression analysis.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegressionGrowthofDividends5Years.DefaultPeriod">
             <summary>
             Gets the default period for the field
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.RegressionGrowthofDividends5Years.FiveYears">
             <summary>
             Gets/sets the FiveYears period value for the field
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegressionGrowthofDividends5Years.#ctor">
             <summary>
             Creates an instance of the RegressionGrowthofDividends5Years class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.RegressionGrowthofDividends5Years.#ctor(System.Collections.Generic.IDictionary{System.String,System.Decimal})">
             <summary>
             Creates an instance of the RegressionGrowthofDividends5Years class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.OperationRatios">
             <summary>
             Definition of the OperationRatios class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.RevenueGrowth">
             <summary>
             The growth in the company's revenue on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying revenue data reported in the Income Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 10001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.OperationIncomeGrowth">
             <summary>
             The growth in the company's operating income on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying operating income data reported in the Income Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 10002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.NetIncomeGrowth">
             <summary>
             The growth in the company's net income on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying net income data reported in the Income Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 10003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.NetIncomeContOpsGrowth">
             <summary>
             The growth in the company's net income from continuing operati
             </summary>
             <remarks>
             Morningstar DataId: 10004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CFOGrowth">
             <summary>
             The growth in the company's cash flow from operations on a percentage basis. Morningstar calculates the growth percentage
             based on the underlying cash flow from operations data reported in the Cash Flow Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 10005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.FCFGrowth">
             <summary>
             The growth in the company's free cash flow on a percentage basis. Morningstar calculates the growth percentage based on the
             underlying cash flow from operations and capital expenditures data reported in the Cash Flow Statement within the company filings
             or reports:   Free Cash Flow = Cash flow from operations - Capital Expenditures.
             </summary>
             <remarks>
             Morningstar DataId: 10006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.OperationRevenueGrowth3MonthAvg">
             <summary>
             The growth in the company's operating revenue on a percentage basis. Morningstar calculates the growth percentage based on
             the underlying operating revenue data reported in the Income Statement within the company filings or reports.
             </summary>
             <remarks>
             Morningstar DataId: 10007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.GrossMargin">
             <summary>
             Refers to the ratio of gross profit to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:   (Revenue - Cost of Goods Sold) / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.OperationMargin">
             <summary>
             Refers to the ratio of operating income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Operating Income / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.PretaxMargin">
             <summary>
             Refers to the ratio of pretax income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Pretax Income / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.NetMargin">
             <summary>
             Refers to the ratio of net income to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:   Net Income / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.TaxRate">
             <summary>
             Refers to the ratio of tax provision to pretax income. Morningstar calculates the ratio by using the underlying data reported in the
             company filings or reports:   Tax Provision / Pretax Income.
             [Note: Valid only when positive pretax income, and  positive tax expense (not tax benefit)]
             </summary>
             <remarks>
             Morningstar DataId: 11005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.EBITMargin">
             <summary>
             Refers to the ratio of earnings before interest and taxes to revenue. Morningstar calculates the ratio by using the underlying data
             reported in the company filings or reports:   EBIT / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.EBITDAMargin">
             <summary>
             Refers to the ratio of earnings before interest, taxes and depreciation and amortization to revenue. Morningstar calculates the ratio
             by using the underlying data reported in the company filings or reports:   EBITDA / Revenue.
             </summary>
             <remarks>
             Morningstar DataId: 11007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.SalesPerEmployee">
             <summary>
             Refers to the ratio of Revenue to Employees. Morningstar calculates the ratio by using the underlying data reported in the company
             filings or reports:     Revenue / Employee Number.
             </summary>
             <remarks>
             Morningstar DataId: 11008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CurrentRatio">
             <summary>
             Refers to the ratio of Current Assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in
             the Balance Sheet within the company filings or reports:     Current Assets / Current Liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 11009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.QuickRatio">
             <summary>
             Refers to the ratio of liquid assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    ( Cash, Cash Equivalents, and ShortTerm Investments + Receivables ) /
             Current Liabilities.
             </summary>
             <remarks>
             Morningstar DataId: 11010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.LongTermDebtTotalCapitalRatio">
             <summary>
             Refers to the ratio of Long Term Debt to Total Capital. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / (Long-Term Debt And Capital
             Lease Obligation + Total Shareholder's Equity)
             </summary>
             <remarks>
             Morningstar DataId: 11011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.InterestCoverage">
             <summary>
             Refers to the ratio of EBIT to Interest Expense. Morningstar calculates the ratio by using the underlying data reported in the Income
             Statement within the company filings or reports:    EBIT / Interest Expense.
             </summary>
             <remarks>
             Morningstar DataId: 11012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.LongTermDebtEquityRatio">
             <summary>
             Refers to the ratio of Long Term Debt to Common Equity. Morningstar calculates the ratio by using the underlying data reported in
             the Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / Common Equity.
             [Note: Common Equity = Total Shareholder's Equity - Preferred Stock]
             </summary>
             <remarks>
             Morningstar DataId: 11013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.FinancialLeverage">
             <summary>
             Refers to the ratio of Total Assets to Common Equity. Morningstar calculates the ratio by using the underlying data reported in the
             Balance Sheet within the company filings or reports:    Total Assets / Common Equity.   [Note: Common Equity = Total
             Shareholder's Equity - Preferred Stock]
             </summary>
             <remarks>
             Morningstar DataId: 11014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.TotalDebtEquityRatio">
             <summary>
             Refers to the ratio of Current Debt and Long Term Debt to Common Equity. Morningstar calculates the ratio by using the underlying
             data reported in the Balance Sheet within the company filings or reports:    (Current Debt And Current Capital Lease Obligation +
             Long-Term Debt And Long-Term Capital Lease Obligation / Common Equity.   [Note: Common Equity = Total Shareholder's Equity -
             Preferred Stock]
             </summary>
             <remarks>
             Morningstar DataId: 11015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.NormalizedNetProfitMargin">
             <summary>
             Normalized Income / Total Revenue. A measure of profitability of the company calculated by finding Normalized Net Profit as a
             percentage of Total Revenues.
             </summary>
             <remarks>
             Morningstar DataId: 11016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.DaysInSales">
             <summary>
             365 / Receivable Turnover
             </summary>
             <remarks>
             Morningstar DataId: 12001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.DaysInInventory">
             <summary>
             365 / Inventory turnover
             </summary>
             <remarks>
             Morningstar DataId: 12002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.DaysInPayment">
             <summary>
             365 / Payable turnover
             </summary>
             <remarks>
             Morningstar DataId: 12003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CashConversionCycle">
             <summary>
             Days In Inventory + Days In Sales - Days In Payment
             </summary>
             <remarks>
             Morningstar DataId: 12004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ReceivableTurnover">
             <summary>
             Revenue / Average Accounts Receivables
             </summary>
             <remarks>
             Morningstar DataId: 12005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.InventoryTurnover">
             <summary>
             Cost Of Goods Sold / Average Inventory
             </summary>
             <remarks>
             Morningstar DataId: 12006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.PaymentTurnover">
             <summary>
             Cost of Goods Sold / Average Accounts Payables
             </summary>
             <remarks>
             Morningstar DataId: 12007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.FixAssetsTuronver">
             <summary>
             Revenue / Average PP&amp;E
             </summary>
             <remarks>
             Morningstar DataId: 12008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.AssetsTurnover">
             <summary>
             Revenue / Average Total Assets
             </summary>
             <remarks>
             Morningstar DataId: 12009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ROE">
             <summary>
             Net Income / Average Total Common Equity
             </summary>
             <remarks>
             Morningstar DataId: 12010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ROA">
             <summary>
             Net Income / Average Total Assets
             </summary>
             <remarks>
             Morningstar DataId: 12011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ROIC">
             <summary>
             Net Income / (Total Equity + Long-term Debt and Capital Lease Obligation + Short-term Debt and Capital Lease Obligation)
             </summary>
             <remarks>
             Morningstar DataId: 12012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.FCFSalesRatio">
             <summary>
             Free Cash flow / Revenue
             </summary>
             <remarks>
             Morningstar DataId: 12013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.FCFNetIncomeRatio">
             <summary>
             Free Cash Flow / Net Income
             </summary>
             <remarks>
             Morningstar DataId: 12014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CapExSalesRatio">
             <summary>
             Capital Expenditure / Revenue
             </summary>
             <remarks>
             Morningstar DataId: 12015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.DebttoAssets">
             <summary>
             This is a leverage ratio used to determine how much debt (a sum of long term and current portion of debt) a company has on its
             balance sheet relative to total assets. This ratio examines the percent of the company that is financed by debt.
             </summary>
             <remarks>
             Morningstar DataId: 12016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CommonEquityToAssets">
             <summary>
             This is a financial ratio of common stock equity to total assets that indicates the relative proportion of equity used to finance a
             company's assets.
             </summary>
             <remarks>
             Morningstar DataId: 12017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.CapitalExpenditureAnnual5YrGrowth">
             <summary>
             This is the compound annual growth rate of the company's capital spending over the last 5 years. Capital Spending is the sum of
             the Capital Expenditure items found in the Statement of Cash Flows.
             </summary>
             <remarks>
             Morningstar DataId: 12018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.GrossProfitAnnual5YrGrowth">
             <summary>
             This is the compound annual growth rate of the company's Gross Profit over the last 5 years.
             </summary>
             <remarks>
             Morningstar DataId: 12019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.GrossMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Gross Margin over the last 5 years. Gross Margin is Total Revenue minus Cost
             of Goods Sold divided by Total Revenue and is expressed as a percentage.
             </summary>
             <remarks>
             Morningstar DataId: 12020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.PostTaxMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Post Tax Margin over the last 5 years. Post tax margin is Post tax divided by
             total revenue for the same period.
             </summary>
             <remarks>
             Morningstar DataId: 12021
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.PreTaxMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Pre Tax Margin over the last 5 years. Pre tax margin is Pre tax divided by total
             revenue for the same period.
             </summary>
             <remarks>
             Morningstar DataId: 12022
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ProfitMargin5YrAvg">
             <summary>
             This is the simple average of the company's Annual Net Profit Margin over the last 5 years. Net profit margin is post tax income
             divided by total revenue for the same period.
             </summary>
             <remarks>
             Morningstar DataId: 12023
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ROE5YrAvg">
             <summary>
             This is the simple average of the company's ROE over the last 5 years. Return on equity reveals how much profit a company has
             earned in comparison to the total amount of shareholder equity found on the balance sheet.
             </summary>
             <remarks>
             Morningstar DataId: 12024
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.ROA5YrAvg">
             <summary>
             This is the simple average of the company's ROA over the last 5 years. Return on asset is calculated by dividing a company's annual
             earnings by its average total assets.
             </summary>
             <remarks>
             Morningstar DataId: 12025
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.AVG5YrsROIC">
             <summary>
             This is the simple average of the company's ROIC over the last 5 years. Return on invested capital is calculated by taking net
             operating profit after taxes and dividends and dividing by the total amount of capital invested and expressing the result as a
             percentage.
             </summary>
             <remarks>
             Morningstar DataId: 12026
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.NormalizedROIC">
             <summary>
             [Normalized Income + (Interest Expense * (1-Tax Rate))]  / Invested Capital
             </summary>
             <remarks>
             Morningstar DataId: 12027
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.OperationRatios.RegressionGrowthOperatingRevenue5Years">
             <summary>
             The five-year growth rate of operating revenue, calculated using regression analysis.
             </summary>
             <remarks>
             Morningstar DataId: 12028
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationRatios.#ctor">
             <summary>
             Creates an instance of the OperationRatios class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.OperationRatios.UpdateValues(QuantConnect.Data.Fundamental.OperationRatios)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.Period">
             <summary>
             Period constants for multi-period fields
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.OneMonth">
             <summary>
             Period constant for one month
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.TwoMonths">
             <summary>
             Period constant for two months
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.ThreeMonths">
             <summary>
             Period constant for three months
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.SixMonths">
             <summary>
             Period constant for six months
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.NineMonths">
             <summary>
             Period constant for nine months
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.TwelveMonths">
             <summary>
             Period constant for twelve months
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.OneYear">
             <summary>
             Period constant for one year
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.TwoYears">
             <summary>
             Period constant for two years
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.ThreeYears">
             <summary>
             Period constant for three years
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.FiveYears">
             <summary>
             Period constant for five years
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Fundamental.Period.TenYears">
             <summary>
             Period constant for ten years
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.SecurityReference">
             <summary>
             Definition of the SecurityReference class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.SecuritySymbol">
             <summary>
             An arrangement of characters (often letters) representing a particular security listed on an exchange or otherwise traded publicly.
             Note: Morningstar's multi-share class symbols will often contain a "period" within the symbol; e.g. BRK.B for Berkshire Hathaway
             Class B.
             </summary>
             <remarks>
             Morningstar DataId: 1001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.ExchangeId">
             <summary>
             The Id representing the stock exchange that the particular share class is trading.  See separate reference document for Exchange
             Mappings.
             </summary>
             <remarks>
             Morningstar DataId: 1002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.CurrencyId">
             <summary>
             3 Character ISO code of the currency that the exchange price is denominated in; i.e. the trading currency of the security.  See
             separate reference document for Currency Mappings.
             </summary>
             <remarks>
             Morningstar DataId: 1004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.Valoren">
             <summary>
             An identification number assigned to financial instruments in Switzerland. These numbers are similar to the CUSIP numbers that are
             used in Canada and the U.S. A typical valoren number is between six to nine digits in length.
             </summary>
             <remarks>
             Morningstar DataId: 1005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.CUSIP">
             <summary>
             The acronym for the Committee for Uniform Security Identification Procedures. The Committee is appointed by the National
             Association of Securities Dealers (NASD) to assign identification numbers to nearly all publicly traded stock and bond certificates.
             CUSIPs are 9-digit numbers designed to be unique numerical identifiers for traded securities.
             NOTE: CUSIPS are proprietary to Standard &amp; Poor's CUSIP Service Bureau through an exclusive agreement with American Bankers
             Association.  CUSIP number is provided for matching purposes only; no redistribution rights apply.
             </summary>
             <remarks>
             Morningstar DataId: 1006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.ISIN">
             <summary>
             The acronym for International Securities Identification Number.  A code that uniquely identifies a specific securities issue. The
             organization that allocates ISINs in any particular country is the country's respective National Numbering Agency (NNA). All
             internationally traded securities issuers are urged to use this numbering scheme, which is now the accepted standard by virtually
             all countries. The United States and Canada primarily use a similar scheme known as a CUSIP number.
             </summary>
             <remarks>
             Morningstar DataId: 1007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.SEDOL">
             <summary>
             The acronym for Stock Exchange Daily Official List. An identification code, consisting of at least seven alphanumeric characters,
             that is assigned to all securities trading on the London Stock Exchange and on other smaller exchanges in the U.K....U.K. stocks
             that do not trade in the U.S. can be identified by their SEDOL code.
             </summary>
             <remarks>
             Morningstar DataId: 1008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IPODate">
             <summary>
             The initial day that the share begins trading on a public exchange.
             </summary>
             <remarks>
             Morningstar DataId: 1009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IsDepositaryReceipt">
             <summary>
             Indicator to denote if the share class is a depository receipt. 1 denotes it is an ADR or GDR; otherwise 0.
             </summary>
             <remarks>
             Morningstar DataId: 1010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.DepositaryReceiptRatio">
             <summary>
             The number of underlying common shares backing each American Depository Receipt traded.
             </summary>
             <remarks>
             Morningstar DataId: 1011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.SecurityType">
             <summary>
             Each security will be assigned to one of the below security type classifications;
             - Common Stock (ST00000001)
             - Preferred Stock (ST00000002)
             </summary>
             <remarks>
             Morningstar DataId: 1012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.ShareClassDescription">
             <summary>
             Provides information when applicable such as whether the share class is Class A or Class B, an ADR, GDR, or a business
             development company (BDC).  For preferred stocks, this field provides more detail about the preferred share class.
             </summary>
             <remarks>
             Morningstar DataId: 1013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.ShareClassStatus">
             <summary>
             At the ShareClass level; each share is assigned to 1 of 4 possible status classifications; (A) Active, (D) Deactive, (I) Inactive, or (O)
             Obsolete:
             - Active-Share class is currently trading in a public market, and we have fundamental data available.
             - Deactive-Share class was once Active, but is no longer trading due to share being delisted from the exchange.
             - Inactive-Share class is currently trading in a public market, but no fundamental data is available.
             - Obsolete-Share class was once Inactive, but is no longer trading due to share being delisted from the exchange.
             </summary>
             <remarks>
             Morningstar DataId: 1014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IsPrimaryShare">
             <summary>
             This indicator will denote if the indicated share is the primary share for the company. A "1" denotes the primary share, a "0"
             denotes a share that is not the primary share. The primary share is defined as the first share that a company IPO'd with and is still
             actively trading. If this share is no longer trading, we will denote the primary share as the share with the highest volume.
             </summary>
             <remarks>
             Morningstar DataId: 1015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IsDividendReinvest">
             <summary>
             Shareholder election plan to re-invest cash dividend into additional shares.
             </summary>
             <remarks>
             Morningstar DataId: 1016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IsDirectInvest">
             <summary>
             A plan to make it possible for individual investors to invest in public companies without going through a stock broker.
             </summary>
             <remarks>
             Morningstar DataId: 1017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.InvestmentId">
             <summary>
             Identifier assigned to each security Morningstar covers.
             </summary>
             <remarks>
             Morningstar DataId: 1018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IPOOfferPrice">
             <summary>
             IPO offer price indicates the price at which an issuer sells its shares under an initial public offering (IPO). The offer price is set by
             issuer and its underwriters.
             </summary>
             <remarks>
             Morningstar DataId: 1019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.DelistingDate">
             <summary>
             The date on which an inactive security was delisted from an exchange.
             </summary>
             <remarks>
             Morningstar DataId: 1020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.DelistingReason">
             <summary>
             The reason for an inactive security's delisting from an exchange. The full list of Delisting Reason codes can be found within the Data
             Definitions- Appendix A DelistingReason Codes tab.
             </summary>
             <remarks>
             Morningstar DataId: 1021
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.MIC">
             <summary>
             The MIC (market identifier code) of the related shareclass of the company. See Data Appendix A for the relevant MIC to exchange
             name mapping.
             </summary>
             <remarks>
             Morningstar DataId: 1022
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.CommonShareSubType">
             <summary>
             Refers to the type of securities that can be found within the equity database. For the vast majority, this value will populate as null
             for regular common shares. For a minority of shareclasses, this will populate as either "Participating Preferred" or "Closed-End
             Fund", which reflects our limited coverage of these types of securities within our equity database.
             </summary>
             <remarks>
             Morningstar DataId: 1023
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.IPOOfferPriceRange">
             <summary>
             The estimated offer price range (low-high) for a new IPO. The field should be used until the final IPO price becomes available, as
             populated in the data field "IPOPrice".
             </summary>
             <remarks>
             Morningstar DataId: 1024
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.SecurityReference.ExchangeSubMarketGlobalId">
             <summary>
             Classification to denote different Marketplace or Market tiers within a stock exchange.
             </summary>
             <remarks>
             Morningstar DataId: 1025
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityReference.#ctor">
             <summary>
             Creates an instance of the SecurityReference class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.SecurityReference.UpdateValues(QuantConnect.Data.Fundamental.SecurityReference)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.Fundamental.ValuationRatios">
             <summary>
             Definition of the ValuationRatios class
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PayoutRatio">
             <summary>
             Dividend per share / Diluted earnings per share
             </summary>
             <remarks>
             Morningstar DataId: 14000
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.SustainableGrowthRate">
             <summary>
             ROE * (1 - Payout Ratio)
             </summary>
             <remarks>
             Morningstar DataId: 14001
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.CashReturn">
             <summary>
             Refers to the ratio of free cash flow to enterprise value. Morningstar calculates the ratio by using the underlying data reported in
             the company filings or reports:   FCF /Enterprise Value.
             </summary>
             <remarks>
             Morningstar DataId: 14002
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.SalesPerShare">
             <summary>
             Sales / Average Diluted Shares Outstanding
             </summary>
             <remarks>
             Morningstar DataId: 14003
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.BookValuePerShare">
             <summary>
             Common Shareholder's Equity / Diluted Shares Outstanding
             </summary>
             <remarks>
             Morningstar DataId: 14004
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.CFOPerShare">
             <summary>
             Cash Flow from Operations / Average Diluted Shares Outstanding
             </summary>
             <remarks>
             Morningstar DataId: 14005
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.FCFPerShare">
             <summary>
             Free Cash Flow / Average Diluted Shares Outstanding
             </summary>
             <remarks>
             Morningstar DataId: 14006
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.EarningYield">
             <summary>
             Diluted EPS / Price
             </summary>
             <remarks>
             Morningstar DataId: 14007
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PERatio">
             <summary>
             Adjusted Close Price/ EPS. If the result is negative, zero, &gt;10,000 or &lt;0.001, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14008
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.SalesYield">
             <summary>
             SalesPerShare / Price
             </summary>
             <remarks>
             Morningstar DataId: 14009
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PSRatio">
             <summary>
             Adjusted close price / Sales Per Share. If the result is negative or zero, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14010
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.BookValueYield">
             <summary>
             BookValuePerShare / Price
             </summary>
             <remarks>
             Morningstar DataId: 14011
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PBRatio">
             <summary>
             Adjusted close price / Book Value Per Share. If the result is negative or zero, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14012
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.CFYield">
             <summary>
             CFOPerShare / Price
             </summary>
             <remarks>
             Morningstar DataId: 14013
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PCFRatio">
             <summary>
             Adjusted close price /Cash Flow Per Share. If the result is negative or zero, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14014
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.FCFYield">
             <summary>
             FCFPerShare / Price
             </summary>
             <remarks>
             Morningstar DataId: 14015
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.FCFRatio">
             <summary>
             Adjusted close price/ Free Cash Flow Per Share. If the result is negative or zero, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14016
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TrailingDividendYield">
             <summary>
             Dividends Per Share over the trailing 12 months / Price
             </summary>
             <remarks>
             Morningstar DataId: 14017
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ForwardDividendYield">
             <summary>
             (Current Dividend Per Share * Payout Frequency) / Price
             </summary>
             <remarks>
             Morningstar DataId: 14018
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ForwardEarningYield">
             <summary>
             Estimated Earnings Per Share / Price
             Note:
             a) The "Next" Year's EPS Estimate is used; For instance, if today's actual date is March 1, 2009, the "Current" EPS Estimate for
             MSFT is June 2009, and the "Next" EPS Estimate for MSFT is June 2010; the latter is used.
             b) The eps estimated data is sourced from a third party.
             </summary>
             <remarks>
             Morningstar DataId: 14019
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ForwardPERatio">
             <summary>
             1 / ForwardEarningYield
             If result is negative, then null
             </summary>
             <remarks>
             Morningstar DataId: 14020
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PEGRatio">
             <summary>
             ForwardPERatio / Long-term Average Earning Growth Rate
             </summary>
             <remarks>
             Morningstar DataId: 14021
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PEGPayback">
             <summary>
             The number of years it would take for a company's cumulative earnings to equal the stock's current trading price, assuming that the
             company continues to increase its annual earnings at the growth rate used to calculate the PEG ratio.
             [ Log (PG/E + 1)  / Log (1 + G) ] - 1
             Where
             P=Price
             E=Next Fiscal Year's Estimated EPS
             G=Long-term Average Earning Growth
             </summary>
             <remarks>
             Morningstar DataId: 14022
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TangibleBookValuePerShare">
             <summary>
             The company's total book value less the value of any intangible assets dividend by number of shares.
             </summary>
             <remarks>
             Morningstar DataId: 14023
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TangibleBVPerShare3YrAvg">
             <summary>
             The three year average for tangible book value per share.
             </summary>
             <remarks>
             Morningstar DataId: 14024
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TangibleBVPerShare5YrAvg">
             <summary>
             The five year average for tangible book value per share.
             </summary>
             <remarks>
             Morningstar DataId: 14025
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ForwardDividend">
             <summary>
             Latest Dividend * Frequency
             </summary>
             <remarks>
             Morningstar DataId: 14026
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.WorkingCapitalPerShare">
             <summary>
             (Current Assets - Current Liabilities)/number of shares
             </summary>
             <remarks>
             Morningstar DataId: 14027
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.WorkingCapitalPerShare3YrAvg">
             <summary>
             The three year average for working capital per share.
             </summary>
             <remarks>
             Morningstar DataId: 14028
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.WorkingCapitalPerShare5YrAvg">
             <summary>
             The five year average for working capital per share.
             </summary>
             <remarks>
             Morningstar DataId: 14029
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.EVToEBITDA">
             <summary>
             This reflects the fair market value of a company, and allows comparability to other companies as this is capital structure-neutral.
             </summary>
             <remarks>
             Morningstar DataId: 14030
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.BuyBackYield">
             <summary>
             The net repurchase of shares outstanding over the market capital of the company. It is a measure of shareholder return.
             </summary>
             <remarks>
             Morningstar DataId: 14031
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TotalYield">
             <summary>
             The total yield that shareholders can expect, by summing Dividend Yield and Buyback Yield.
             </summary>
             <remarks>
             Morningstar DataId: 14032
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.RatioPE5YearAverage">
             <summary>
             The five-year average of the company's price-to-earnings ratio.
             </summary>
             <remarks>
             Morningstar DataId: 14033
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PriceChange1M">
             <summary>
             Price change this month, expressed as latest price/last month end price.
             </summary>
             <remarks>
             Morningstar DataId: 14034
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.NormalizedPERatio">
             <summary>
             Adjusted Close Price/ Normalized EPS. Normalized EPS removes onetime and unusual items from net EPS, to provide investors with
             a more accurate measure of the company's true earnings. If the result is negative, zero, &gt;10,000 or &lt;0.001, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14035
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.PricetoEBITDA">
             <summary>
             Adjusted close price/EBITDA Per Share. If the result is negative or zero, then null.
             </summary>
             <remarks>
             Morningstar DataId: 14036
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.DivYield5Year">
             <summary>
             Average of the last 60 monthly observations of trailing dividend yield in the last 5 years.
             </summary>
             <remarks>
             Morningstar DataId: 14037
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ForwardCalculationStyle">
             <summary>
             Indicates the method used to calculate Forward Dividend. There are three options: Annual, Look-back and Manual.
             </summary>
             <remarks>
             Morningstar DataId: 14042
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ActualForwardDividend">
             <summary>
             Used to collect the forward dividend for companies where our formula will not produce the correct value.
             </summary>
             <remarks>
             Morningstar DataId: 14043
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.TrailingCalculationStyle">
             <summary>
             Indicates the method used to calculate Trailing Dividend. There are two options: Look-back and Manual.
             </summary>
             <remarks>
             Morningstar DataId: 14044
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ActualTrailingDividend">
             <summary>
             Used to collect the trailing dividend for companies where our formula will not produce the correct value.
             </summary>
             <remarks>
             Morningstar DataId: 14045
             </remarks>
            </member>
        <member name="P:QuantConnect.Data.Fundamental.ValuationRatios.ExpectedDividendGrowthRate">
             <summary>
             The growth rate from the TrailingDividend to the Forward Dividend: {(Forward Dividend/Trailing Dividend) - 1}*100.
             </summary>
             <remarks>
             Morningstar DataId: 14047
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ValuationRatios.#ctor">
             <summary>
             Creates an instance of the ValuationRatios class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Fundamental.ValuationRatios.UpdateValues(QuantConnect.Data.Fundamental.ValuationRatios)">
             <summary>
             Sets values for non existing periods from a previous instance
             </summary>
             <remarks>Used to fill-forward values from previous dates</remarks>
             <param name="previous">The previous instance</param>
            </member>
        <member name="T:QuantConnect.Data.ISubscriptionEnumeratorFactory">
             <summary>
             Create an <see cref="T:System.Collections.Generic.IEnumerator`1" /> 
             </summary>
            </member>
        <member name="M:QuantConnect.Data.ISubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest,QuantConnect.Interfaces.IDataFileProvider)">
             <summary>
             Creates an enumerator to read the specified request
             </summary>
             <param name="request">The subscription request to be read</param>
             <param name="dataFileProvider">Provider used to get data when it is not present on disk</param>
             <returns>An enumerator reading the subscription request</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.Greeks">
             <summary>
             Defines the greeks
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Delta">
             <summary>
             Gets the delta.
             <para>
             Delta measures the rate of change of the option value with respect to changes in
             the underlying asset'sprice. (∂V/∂S)
             </para>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Gamma">
             <summary>
             Gets the gamma.
             <para>
             Gamma measures the rate of change of Delta with respect to changes in
             the underlying asset'sprice. (∂²V/∂S²)
             </para>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Vega">
             <summary>
             Gets the vega.
             <para>
             Vega measures the rate of change of the option value with respect to changes in
             the underlying's volatility. (∂V/∂σ)
             </para>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Theta">
             <summary>
             Gets the theta.
             <para>
             Theta measures the rate of change of the option value with respect to changes in
             time. This is commonly known as the 'time decay.' (∂V/∂τ)
             </para>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Rho">
             <summary>
             Gets the rho.
             <para>
             Rho measures the rate of change of the option value with respect to changes in
             the risk free interest rate. (∂V/∂r)
             </para>
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Greeks.Lambda">
             <summary>
             Gets the lambda.
             <para>
             Lambda is the percentage change in option value per percentage change in the
             underlying's price, a measure of leverage. Sometimes referred to as gearing.
             (∂V/∂S ✕ S/V)
             </para>
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Greeks.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.Market.Greeks" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Greeks.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Greeks" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Greeks.#ctor(System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Greeks" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Greeks.#ctor(System.Func{System.Tuple{System.Decimal,System.Decimal}},System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal},System.Func{System.Decimal})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Greeks" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.FuturesChain">
             <summary>
             Represents an entire chain of futures contracts for a single underlying 
             This type is <see cref="T:System.Collections.Generic.IEnumerable`1" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.Underlying">
             <summary>
             Gets the most recent trade information for the underlying. This may
             be a <see cref="T:QuantConnect.Data.Market.Tick" /> or a <see cref="T:QuantConnect.Data.Market.TradeBar" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.Ticks">
             <summary>
             Gets all ticks for every futures contract in this chain, keyed by symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.TradeBars">
             <summary>
             Gets all trade bars for every futures contract in this chain, keyed by symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.QuoteBars">
             <summary>
             Gets all quote bars for every futures contract in this chain, keyed by symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.Contracts">
             <summary>
             Gets all contracts in the chain, keyed by symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesChain.FilteredContracts">
             <summary>
             Gets the set of symbols that passed the <see cref="!:Future.ContractFilter" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.Market.FuturesChain" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.#ctor(QuantConnect.Symbol,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesChain" /> class
             </summary>
             <param name="canonicalFutureSymbol">The symbol for this chain.</param>
             <param name="time">The time of this chain</param>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.#ctor(QuantConnect.Symbol,System.DateTime,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},System.Collections.Generic.IEnumerable{QuantConnect.Data.Market.FuturesContract},System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesChain" /> class
             </summary>
             <param name="canonicalFutureSymbol">The symbol for this chain.</param>
             <param name="time">The time of this chain</param>
             <param name="trades">All trade data for the entire futures chain</param>
             <param name="quotes">All quote data for the entire futures chain</param>
             <param name="contracts">All contrains for this futures chain</param>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.GetAux``1(QuantConnect.Symbol)">
             <summary>
             Gets the auxiliary data with the specified type and symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <param name="symbol">The symbol of the auxiliary data</param>
             <returns>The last auxiliary data with the specified type and symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.GetAux``1">
             <summary>
             Gets all auxiliary data of the specified type as a dictionary keyed by symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <returns>A dictionary containing all auxiliary data of the specified type</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.GetAuxList``1">
             <summary>
             Gets all auxiliary data of the specified type as a dictionary keyed by symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <returns>A dictionary containing all auxiliary data of the specified type</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.GetAuxList``1(QuantConnect.Symbol)">
             <summary>
             Gets a list of auxiliary data with the specified type and symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <param name="symbol">The symbol of the auxiliary data</param>
             <returns>The list of auxiliary data with the specified type and symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             An enumerator that can be used to iterate through the collection.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <returns>A clone of the current object</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChain.AddAuxData(QuantConnect.Data.BaseData)">
             <summary>
             Adds the specified auxiliary data to this futures chain
             </summary>
             <param name="baseData">The auxiliary data to be added</param>
            </member>
        <member name="T:QuantConnect.Data.Market.OptionChain">
             <summary>
             Represents an entire chain of option contracts for a single underying security.
             This type is <see cref="T:System.Collections.Generic.IEnumerable`1" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.Underlying">
             <summary>
             Gets the most recent trade information for the underlying. This may
             be a <see cref="T:QuantConnect.Data.Market.Tick" /> or a <see cref="T:QuantConnect.Data.Market.TradeBar" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.Ticks">
             <summary>
             Gets all ticks for every option contract in this chain, keyed by option symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.TradeBars">
             <summary>
             Gets all trade bars for every option contract in this chain, keyed by option symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.QuoteBars">
             <summary>
             Gets all quote bars for every option contract in this chain, keyed by option symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.Contracts">
             <summary>
             Gets all contracts in the chain, keyed by option symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionChain.FilteredContracts">
             <summary>
             Gets the set of symbols that passed the <see cref="!:Option.ContractFilter" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.Market.OptionChain" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.#ctor(QuantConnect.Symbol,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.OptionChain" /> class
             </summary>
             <param name="canonicalOptionSymbol">The symbol for this chain.</param>
             <param name="time">The time of this chain</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.#ctor(QuantConnect.Symbol,System.DateTime,QuantConnect.Data.BaseData,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},System.Collections.Generic.IEnumerable{QuantConnect.Data.Market.OptionContract},System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.OptionChain" /> class
             </summary>
             <param name="canonicalOptionSymbol">The symbol for this chain.</param>
             <param name="time">The time of this chain</param>
             <param name="underlying">The most recent underlying trade data</param>
             <param name="trades">All trade data for the entire option chain</param>
             <param name="quotes">All quote data for the entire option chain</param>
             <param name="contracts">All contrains for this option chain</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.GetAux``1(QuantConnect.Symbol)">
             <summary>
             Gets the auxiliary data with the specified type and symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <param name="symbol">The symbol of the auxiliary data</param>
             <returns>The last auxiliary data with the specified type and symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.GetAux``1">
             <summary>
             Gets all auxiliary data of the specified type as a dictionary keyed by symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <returns>A dictionary containing all auxiliary data of the specified type</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.GetAuxList``1">
             <summary>
             Gets all auxiliary data of the specified type as a dictionary keyed by symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <returns>A dictionary containing all auxiliary data of the specified type</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.GetAuxList``1(QuantConnect.Symbol)">
             <summary>
             Gets a list of auxiliary data with the specified type and symbol
             </summary>
             <typeparam name="T">The type of auxiliary data</typeparam>
             <param name="symbol">The symbol of the auxiliary data</param>
             <returns>The list of auxiliary data with the specified type and symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             An enumerator that can be used to iterate through the collection.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <returns>A clone of the current object</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChain.AddAuxData(QuantConnect.Data.BaseData)">
             <summary>
             Adds the specified auxiliary data to this option chain
             </summary>
             <param name="baseData">The auxiliary data to be added</param>
            </member>
        <member name="T:QuantConnect.Data.Market.OptionChains">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.OptionChain" /> keyed by canonical option symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChains.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.OptionChains" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionChains.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.OptionChains" /> dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.FuturesChains">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.FuturesChain" /> keyed by canonical futures symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChains.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesChains" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesChains.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesChains" /> dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.FuturesContract">
             <summary>
             Defines a single futures contract at a specific expiration 
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.Symbol">
             <summary>
             Gets the futures contract's symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.UnderlyingSymbol">
             <summary>
             Gets the underlying security's symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.Expiry">
             <summary>
             Gets the expiration date
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.Time">
             <summary>
             Gets the local date time this contract's data was last updated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.OpenInterest">
             <summary>
             Gets the open interest
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.LastPrice">
             <summary>
             Gets the last price this contract traded at
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.BidPrice">
             <summary>
             Gets the current bid price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.BidSize">
             <summary>
             Get the current bid size
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.AskPrice">
             <summary>
             Gets the ask price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.FuturesContract.AskSize">
             <summary>
             Gets the current ask size
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesContract.#ctor(QuantConnect.Symbol,QuantConnect.Symbol)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesContract" /> class
             </summary>
             <param name="symbol">The futures contract symbol</param>
             <param name="underlyingSymbol">The symbol of the underlying security</param>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesContract.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
            </member>
        <member name="T:QuantConnect.Data.Market.OptionContract">
             <summary>
             Defines a single option contract at a specific expiration and strike price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Symbol">
             <summary>
             Gets the option contract's symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.UnderlyingSymbol">
             <summary>
             Gets the underlying security's symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Strike">
             <summary>
             Gets the strike price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Expiry">
             <summary>
             Gets the expiration date
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Right">
             <summary>
             Gets the right being purchased (call [right to buy] or put [right to sell])
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.TheoreticalPrice">
             <summary>
             Gets the theoretical price of this option contract as computed by the <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.ImpliedVolatility">
             <summary>
             Gets the implied volatility of the option contract as computed by the <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Greeks">
             <summary>
             Gets the greeks for this contract
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.Time">
             <summary>
             Gets the local date time this contract's data was last updated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.OpenInterest">
             <summary>
             Gets the open interest
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.LastPrice">
             <summary>
             Gets the last price this contract traded at
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.BidPrice">
             <summary>
             Gets the current bid price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.BidSize">
             <summary>
             Get the current bid size
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.AskPrice">
             <summary>
             Gets the ask price
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.AskSize">
             <summary>
             Gets the current ask size
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.OptionContract.UnderlyingLastPrice">
             <summary>
             Gets the last price the underlying security traded at
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionContract.#ctor(QuantConnect.Symbol,QuantConnect.Symbol)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.OptionContract" /> class
             </summary>
             <param name="symbol">The option contract symbol</param>
             <param name="underlyingSymbol">The symbol of the underlying security</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionContract.SetOptionPriceModel(System.Func{QuantConnect.Securities.Option.OptionPriceModelResult})">
             <summary>
             Sets the option price model evaluator function to be used for this contract
             </summary>
             <param name="optionPriceModelEvaluator">Function delegate used to evaluate the option price model</param>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionContract.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
            </member>
        <member name="T:QuantConnect.Data.Market.FuturesContracts">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.FuturesContract" /> keyed by futures symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesContracts.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesContracts" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.FuturesContracts.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.FuturesContracts" /> dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.OptionContracts">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.OptionContract" /> keyed by option symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionContracts.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.OptionContracts" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.OptionContracts.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.OptionContracts" /> dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.QuoteBars">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.QuoteBar" /> keyed by symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBars.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.QuoteBars" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBars.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.QuoteBars" /> dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.IntraDayDividendSplit">
             <summary>
             Represents a intra day divdend split.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.SubscriptionDataConfigList">
             <summary>
             Provides convenient methods for holding several <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /> 
             </summary>
            </member>
        <member name="P:QuantConnect.Data.SubscriptionDataConfigList.Symbol">
             <summary>
             <see cref="T:QuantConnect.Symbol" /> for which this class holds <see cref="T:QuantConnect.Data.SubscriptionDataConfig" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.SubscriptionDataConfigList.IsInternalFeed">
             <summary>
             Assume that the InternalDataFeed is the same for both <see cref="T:QuantConnect.Data.SubscriptionDataConfig" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfigList.#ctor(QuantConnect.Symbol)">
             <summary>
             Default constructor that specifies the <see cref="T:QuantConnect.Symbol" /> that the <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /> represent
             </summary>
             <param name="symbol"></param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfigList.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)">
             <summary>
             Sets the <see cref="T:QuantConnect.DataNormalizationMode" /> for all <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /> contained in the list
             </summary>
             <param name="normalizationMode"></param>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse">
             <summary>
             Defines a universe that reads coarse us equity data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.#ctor(QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.UniverseSelection.CoarseFundamental},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse" /> class
             </summary>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="selector">Returns the symbols that should be included in the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.#ctor(QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.UniverseSelection.CoarseFundamental},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse" /> class
             </summary>
             <param name="symbol">Defines the symbol to use for this universe</param>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="selector">Returns the symbols that should be included in the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)">
             <summary>
             Creates a <see cref="T:QuantConnect.Data.UniverseSelection.CoarseFundamental" /> subscription configuration for the US-equity market
             </summary>
             <param name="symbol">The symbol used in the returned configuration</param>
             <returns>A coarse fundamental subscription configuration with the specified symbol</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse">
             <summary>
             Defines a universe that reads fine us equity data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.#ctor(QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.Fundamental.FineFundamental},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse" /> class
             </summary>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="selector">Returns the symbols that should be included in the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.#ctor(QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.Fundamental.FineFundamental},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse" /> class
             </summary>
             <param name="symbol">Defines the symbol to use for this universe</param>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="selector">Returns the symbols that should be included in the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)">
             <summary>
             Creates a <see cref="T:QuantConnect.Data.Fundamental.FineFundamental" /> subscription configuration for the US-equity market
             </summary>
             <param name="symbol">The symbol used in the returned configuration</param>
             <returns>A fine fundamental subscription configuration with the specified symbol</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator">
             <summary>
             Provides a universe decoration that replaces the implementation of <see cref="M:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)" />
             </summary>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.GetSubscriptionRequestsDelegate">
             <summary>
             Delegate type for the <see cref="M:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)" /> method
             </summary>
             <param name="security">The security to get subscription requests for</param>
             <param name="currentTimeUtc">The current utc frontier time</param>
             <param name="maximumEndTimeUtc"></param>
             <returns>The subscription requests for the security to be given to the data feed</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.#ctor(QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.GetSubscriptionRequestsDelegate)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator" /> class
             </summary>
             <param name="universe">The universe to be decorated</param>
             <param name="getRequests"></param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.GetSubscriptionRequestsUniverseDecorator.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Gets the subscription requests to be added for the specified security
             </summary>
             <param name="security">The security to get subscriptions for</param>
             <param name="currentTimeUtc">The current time in utc. This is the frontier time of the algorithm</param>
             <param name="maximumEndTimeUtc">The max end time</param>
             <returns>All subscriptions required by this security</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse">
             <summary>
             Provides a universe that can be filtered with a <see cref="T:QuantConnect.Data.Fundamental.FineFundamental" /> selection function
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.FineFundamentalUniverse">
             <summary>
             The universe that will be used for fine universe selection
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse.#ctor(QuantConnect.Data.UniverseSelection.Universe,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.Fundamental.FineFundamental},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FineFundamentalFilteredUniverse" /> class
             </summary>
             <param name="universe">The universe to be filtered</param>
             <param name="fineSelector">The fine selection function</param>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverse">
             <summary>
             Defines a universe for a single futures chain
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.#ctor(QuantConnect.Securities.Future.Future,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.ISecurityInitializer)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverse" /> class
             </summary>
             <param name="future">The canonical future chain security</param>
             <param name="universeSettings">The universe settings to be used for new subscriptions</param>
             <param name="subscriptionManager">The subscription manager used to return available data types</param>
             <param name="securityInitializer">The security initializer to use on newly created securities</param>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Gets the subscription requests to be added for the specified security
             </summary>
             <param name="security">The security to get subscriptions for</param>
             <param name="currentTimeUtc">The current time in utc. This is the frontier time of the algorithm</param>
             <param name="maximumEndTimeUtc">The max end time</param>
             <returns>All subscriptions required by this security</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.CreateSecurity(QuantConnect.Symbol,QuantConnect.Interfaces.IAlgorithm,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase)">
             <summary>
             Creates and configures a security for the specified symbol
             </summary>
             <param name="symbol">The symbol of the security to be created</param>
             <param name="algorithm">The algorithm instance</param>
             <param name="marketHoursDatabase">The market hours database</param>
             <param name="symbolPropertiesDatabase">The symbol properties database</param>
             <returns>The newly initialized security object</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverse.CanRemoveMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Determines whether or not the specified security can be removed from
             this universe. This is useful to prevent securities from being taken
             out of a universe before the algorithm has had enough time to make
             decisions on the security
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="security">The security to check if its ok to remove</param>
             <returns>True if we can remove the security, false otherwise</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection">
             <summary>
             Defines the universe selection data type for <see cref="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverse" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.FilteredContracts">
             <summary>
             Gets or sets the contracts selected by the universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection" /> c;ass
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.#ctor(System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection" /> class
             </summary>
             <param name="time">The time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.#ctor(System.DateTime,System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection" /> class
             </summary>
             <param name="time">The start time of this data</param>
             <param name="endTime">The end time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator">
             <summary>
             Provides a univese decoration that replaces the implementation of <see cref="M:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)" />
             </summary>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbolsDelegate">
             <summary>
             Delegate type for the <see cref="M:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)" /> method
             </summary>
             <param name="utcTime">The current utc frontier time</param>
             <param name="data">The universe selection data</param>
             <returns>The symbols selected by the universe</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.#ctor(QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbolsDelegate)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator" /> class
             </summary>
             <param name="universe">The universe to be decorated</param>
             <param name="selectSymbols">The new implementation of <see cref="M:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)" /></param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SelectSymbolsUniverseDecorator.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.SubscriptionRequest">
             <summary>
             Defines the parameters required to add a subscription to a data feed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.IsUniverseSubscription">
             <summary>
             Gets true if the subscription is a universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.Universe">
             <summary>
             Gets the universe this subscription resides in
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.Security">
             <summary>
             Gets the security. This is the destination of data for non-internal subscriptions.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.Configuration">
             <summary>
             Gets the subscription configuration. This defines how/where to read the data.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.StartTimeUtc">
             <summary>
             Gets the beginning of the requested time interval in UTC
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.EndTimeUtc">
             <summary>
             Gets the end of the requested time interval in UTC
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.StartTimeLocal">
             <summary>
             Gets the <see cref="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.StartTimeUtc" /> in the security's exchange time zone
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.EndTimeLocal">
             <summary>
             Gets the <see cref="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.EndTimeUtc" /> in the security's exchange time zone
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SubscriptionRequest.TradableDays">
             <summary>
             Gets the tradable days specified by this request
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SubscriptionRequest.#ctor(System.Boolean,QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Securities.Security,QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.SubscriptionRequest" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SubscriptionRequest.#ctor(QuantConnect.Data.UniverseSelection.SubscriptionRequest,System.Nullable{System.Boolean},QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Securities.Security,QuantConnect.Data.SubscriptionDataConfig,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.SubscriptionRequest" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.UniverseDecorator">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Data.UniverseSelection.Universe" /> that redirects all calls to a
             wrapped (or decorated) universe. This provides scaffolding for other decorators who
             only need to override one or two methods.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseDecorator.Universe">
             <summary>
             The decorated universe instance
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.UniverseDecorator.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.UniverseDecorator.Securities">
             <summary>
             Gets the internal security collection used to define membership in this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseDecorator.#ctor(QuantConnect.Data.UniverseSelection.Universe)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.UniverseDecorator" /> class
             </summary>
             <param name="universe">The decorated universe. All overridable methods delegate to this instance.</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseDecorator.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Gets the subscription requests to be added for the specified security
             </summary>
             <param name="security">The security to get subscriptions for</param>
             <param name="currentTimeUtc">The current time in utc. This is the frontier time of the algorithm</param>
             <param name="maximumEndTimeUtc">The max end time</param>
             <returns>All subscriptions required by this security</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseDecorator.CanRemoveMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Determines whether or not the specified security can be removed from
             this universe. This is useful to prevent securities from being taken
             out of a universe before the algorithm has had enough time to make
             decisions on the security
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="security">The security to check if its ok to remove</param>
             <returns>True if we can remove the security, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseDecorator.CreateSecurity(QuantConnect.Symbol,QuantConnect.Interfaces.IAlgorithm,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase)">
             <summary>
             Creates and configures a security for the specified symbol
             </summary>
             <param name="symbol">The symbol of the security to be created</param>
             <param name="algorithm">The algorithm instance</param>
             <param name="marketHoursDatabase">The market hours database</param>
             <param name="symbolPropertiesDatabase">The symbol properties database</param>
             <returns>The newly initialized security object</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseDecorator.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.UniverseExtensions">
             <summary>
             Provides extension methods for the <see cref="T:QuantConnect.Data.UniverseSelection.Universe" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseExtensions.ChainedTo(QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Data.UniverseSelection.Universe,System.Boolean)">
             <summary>
             Creates a new universe that logically is the result of wiring the two universes together such that
             the first will produce subscriptions for the second and the second will only select on data that has
             passed the first.
             
             NOTE: The <paramref name="first" /> and <paramref name="second" /> universe instances provided
             to this method should not be manually added to the algorithm.
             </summary>
             <param name="first">The first universe in this 'chain'</param>
             <param name="second">The second universe in this 'chain'</param>
             <param name="configurationPerSymbol">True if each symbol as its own configuration, false otherwise</param>
             <returns>A new universe that can be added to the algorithm that represents invoking the first universe
             and then the second universe using the outputs of the first. </returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseExtensions.PrefilterUsing(QuantConnect.Data.UniverseSelection.Universe,QuantConnect.Data.UniverseSelection.Universe)">
             <summary>
             Creates a new universe that restricts the universe selection data to symbols that passed the
             first universe's selection critera
             
             NOTE: The <paramref name="second" /> universe instance provided to this method should not be manually
             added to the algorithm. The <paramref name="first" /> should still be manually (assuming no other changes).
             </summary>
             <param name="second">The universe to be filtere</param>
             <param name="first">The universe providing the set of symbols used for filtered</param>
             <returns>A new universe that can be added to the algorithm that represents invoking the second
             using the selections from the first as a filter.</returns>
            </member>
        <member name="T:QuantConnect.Globals">
             <summary>
             Provides application level constant values
             </summary>
            </member>
        <member name="P:QuantConnect.Globals.DataFolder">
             <summary>
             The root directory of the data folder for this application
             </summary>
            </member>
        <member name="M:QuantConnect.Globals.Reset">
             <summary>
             Resets global values with the Config data.
             </summary>
            </member>
        <member name="F:QuantConnect.Globals.Cache">
             <summary>
             The directory used for storing downloaded remote files
             </summary>
            </member>
        <member name="P:QuantConnect.Globals.Version">
             <summary>
             The version of lean
             </summary>
            </member>
        <member name="T:QuantConnect.Currencies">
             <summary>
             Provides commonly used currency pairs and symbols
             </summary>
            </member>
        <member name="F:QuantConnect.Currencies.CurrencyPairs">
             <summary>
             Gets the listing of currently supported currency pairs.
             </summary>
             <remarks>
             This listing should be in sync with the data available at: https://www.quantconnect.com/data/FOREX#2.1.1
             It must include all currency pairs needed to resolve quote currencies in <see cref="M:QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase,System.Collections.Generic.IReadOnlyDictionary{QuantConnect.SecurityType,System.String},QuantConnect.Securities.CashBook)" />
             </remarks>
            </member>
        <member name="F:QuantConnect.Currencies.CurrencySymbols">
             <summary>
             A mapping of currency codes to their display symbols
             </summary>
             <remarks>
             Now used by Forex and CFD, should probably be moved out into its own class
             </remarks>
            </member>
        <member name="M:QuantConnect.Currencies.GetCurrencySymbol(System.String)">
             <summary>
             Gets the currency symbol for the specified currency code
             </summary>
             <param name="currency">The currency code</param>
             <returns>The currency symbol</returns>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.FactorFile">
             <summary>
             Represents an entire factor file for a specified symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.FactorFile.Permtick">
             <summary>
             Gets the symbol this factor file represents
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.#ctor(System.String,System.Collections.Generic.IEnumerable{QuantConnect.Data.Auxiliary.FactorFileRow})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.FactorFile" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.Read(System.String,System.String)">
             <summary>
             Reads a FactorFile in from the <see cref="P:QuantConnect.Globals.DataFolder" />.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.GetPriceScaleFactor(System.DateTime)">
             <summary>
             Gets the price scale factor that includes dividend and split adjustments for the specified search date
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.GetSplitFactor(System.DateTime)">
             <summary>
             Gets the split factor to be applied at the specified date
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.HasScalingFactors(System.String,System.String)">
             <summary>
             Checks whether or not a symbol has scaling factors
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.HasDividendEventOnNextTradingDay(System.DateTime,System.Decimal@)">
             <summary>
             Returns true if the specified date is the last trading day before a dividend event
             is to be fired
             </summary>
             <remarks>
             NOTE: The dividend event in the algorithm should be fired at the end or AFTER
             this date. This is the date in the file that a factor is applied, so for example,
             MSFT has a 31 cent dividend on 2015.02.17, but in the factor file the factor is applied
             to 2015.02.13, which is the first trading day BEFORE the actual effective date.
             </remarks>
             <param name="date">The date to check the factor file for a dividend event</param>
             <param name="priceFactorRatio">When this function returns true, this value will be populated
             with the price factor ratio required to scale the closing value (pf_i/pf_i+1)</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.HasSplitEventOnNextTradingDay(System.DateTime,System.Decimal@)">
             <summary>
             Returns true if the specified date is the last trading day before a split event
             is to be fired
             </summary>
             <remarks>
             NOTE: The split event in the algorithm should be fired at the end or AFTER this
             date. This is the date in the file that a factor is applied, so for example MSFT
             has a split on 1999.03.29, but in the factor file the split factor is applied on
             1999.03.26, which is the first trading day BEFORE the actual split date.
             </remarks>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFile.WriteToCsv(QuantConnect.Symbol)">
             <summary>
             Write the factor file to the correct place in the default Data folder
             </summary>
             <param name="symbol">The symbol this factor file represents</param>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.FactorFileRow">
             <summary>
             Defines a single row in a factor_factor file. This is a csv file ordered as {date, price factor, split factor}
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.FactorFileRow.Date">
             <summary>
             Gets the date associated with this data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.FactorFileRow.PriceFactor">
             <summary>
             Gets the price factor associated with this data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.FactorFileRow.SplitFactor">
             <summary>
             Gets te split factored associated with the date
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.FactorFileRow.PriceScaleFactor">
             <summary>
             Gets the combined factor used to create adjusted prices from raw prices
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFileRow.#ctor(System.DateTime,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.FactorFileRow" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFileRow.Read(System.String,System.String)">
             <summary>
             Reads in the factor file for the specified equity symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFileRow.Parse(System.String)">
             <summary>
             Parses the specified line as a factor file row
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.FactorFileRow.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Interfaces.IFactorFileProvider" /> that searches the local disk
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.#ctor">
             <summary>
             Initializes a new instance of <see cref="T:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider" /> that uses configuration
             to resolve an instance of <see cref="T:QuantConnect.Interfaces.IMapFileProvider" /> from the <see cref="F:QuantConnect.Util.Composer.Instance" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.#ctor(QuantConnect.Interfaces.IMapFileProvider)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider" /> using the specified
             map file provider
             </summary>
             <param name="mapFileProvider">The map file provider used to resolve permticks of securities</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.Get(QuantConnect.Symbol)">
             <summary>
             Gets a <see cref="T:QuantConnect.Data.Auxiliary.FactorFile" /> instance for the specified symbol, or null if not found
             </summary>
             <param name="symbol">The security's symbol whose factor file we seek</param>
             <returns>The resolved factor file, or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider.GetFactorFile(QuantConnect.Symbol,System.String,System.String)">
             <summary>
             Checks that the factor file exists on disk, and if it does, loads it into memory
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.MapFile">
             <summary>
             Represents an entire map file for a specified symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFile.Permtick">
             <summary>
             Gets the entity's unique symbol, i.e OIH.1
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFile.DelistingDate">
             <summary>
             Gets the last date in the map file which is indicative of a delisting event
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFile.FirstDate">
             <summary>
             Gets the first date in this map file
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.#ctor(System.String,System.Collections.Generic.IEnumerable{QuantConnect.Data.Auxiliary.MapFileRow})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFile" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.GetMappedSymbol(System.DateTime)">
             <summary>
             Memory overload search method for finding the mapped symbol for this date.
             </summary>
             <param name="searchDate">date for symbol we need to find.</param>
             <returns>Symbol on this date.</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.HasData(System.DateTime)">
             <summary>
             Determines if there's data for the requested date
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.Read(System.String,System.String)">
             <summary>
             Reads in an entire map file for the requested symbol from the DataFolder
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.GetMapFilePath(System.String,System.String)">
             <summary>
             Constructs the map file path for the specified market and symbol
             </summary>
             <param name="permtick">The symbol as on disk, OIH or OIH.1</param>
             <param name="market">The market this symbol belongs to</param>
             <returns>The file path to the requested map file</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.GetMapFiles(System.String)">
             <summary>
             Reads all the map files in the specified directory
             </summary>
             <param name="mapFileDirectory">The map file directory path</param>
             <returns>An enumerable of all map files</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFile.SafeMapFileRowRead(System.String)">
             <summary>
             Reads in the map file at the specified path, returning null if any exceptions are encountered
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider">
             <summary>
             Provides a default implementation of <see cref="T:QuantConnect.Interfaces.IMapFileProvider" /> that reads from
             the local disk
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider.Get(System.String)">
             <summary>
             Gets a <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> representing all the map
             files for the specified market
             </summary>
             <param name="market">The equity market, for example, 'usa'</param>
             <returns>A <see cref="T:QuantConnect.Data.Auxiliary.MapFileRow" /> containing all map files for the specified market</returns>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.MapFileResolver">
             <summary>
             Provides a means of mapping a symbol at a point in time to the map file
             containing that share class's mapping information
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Auxiliary.MapFileResolver.Empty">
             <summary>
             Gets an empty <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" />, that is an instance that contains
             zero mappings
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Data.Auxiliary.MapFile})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> by reading
             in all files in the specified directory.
             </summary>
             <param name="mapFiles">The data used to initialize this resolver.</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.Create(System.String,System.String)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> class by reading all map files
             for the specified market into memory
             </summary>
             <param name="dataDirectory">The root data directory</param>
             <param name="market">The equity market to produce a map file collection for</param>
             <returns>The collection of map files capable of mapping equity symbols within the specified market</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.Create(System.String)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> class by reading all map files
             for the specified market into memory
             </summary>
             <param name="mapFileDirectory">The directory containing the map files</param>
             <returns>The collection of map files capable of mapping equity symbols within the specified market</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.GetByPermtick(System.String)">
             <summary>
             Gets the map file matching the specified permtick
             </summary>
             <param name="permtick">The permtick to match on</param>
             <returns>The map file matching the permtick, or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(System.String,System.DateTime)">
             <summary>
             Resolves the map file path containing the mapping information for the symbol defined at <paramref name="date" />
             </summary>
             <param name="symbol">The symbol as of <paramref name="date" /> to be mapped</param>
             <param name="date">The date associated with the <paramref name="symbol" /></param>
             <returns>The map file responsible for mapping the symbol, if no map file is found, null is returned</returns>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry">
             <summary>
             Combines the map file row with the map file path that produced the row
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry.MapFileRow">
             <summary>
             Gets the map file row
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry.EntitySymbol">
             <summary>
             Gets the full path to the map file that produced this row
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry.#ctor(System.String,QuantConnect.Data.Auxiliary.MapFileRow)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry" /> class
             </summary>
             <param name="entitySymbol">The map file that produced this row</param>
             <param name="mapFileRow">The map file row data</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry.Equals(QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.MapFileRowEntry.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileResolver.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.MapFileRow">
             <summary>
             Represents a single row in a map_file. This is a csv file ordered as {date, mapped symbol}
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFileRow.Date">
             <summary>
             Gets the date associated with this data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Auxiliary.MapFileRow.MappedSymbol">
             <summary>
             Gets the mapped symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.#ctor(System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Auxiliary.MapFileRow" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.Read(System.String,System.String)">
             <summary>
             Reads in the map_file for the specified equity symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.Read(System.String)">
             <summary>
             Reads in the map_file at the specified path
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.Parse(System.String)">
             <summary>
             Parses the specified line into a MapFileRow
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.Equals(QuantConnect.Data.Auxiliary.MapFileRow)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.Equals(System.Object)">
             <summary>
             Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.GetHashCode">
             <summary>
             Serves as a hash function for a particular type. 
             </summary>
             <returns>
             A hash code for the current <see cref="T:System.Object" />.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.op_Equality(QuantConnect.Data.Auxiliary.MapFileRow,QuantConnect.Data.Auxiliary.MapFileRow)">
             <summary>
             Determines whether or not the two instances are equal
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.MapFileRow.op_Inequality(QuantConnect.Data.Auxiliary.MapFileRow,QuantConnect.Data.Auxiliary.MapFileRow)">
             <summary>
             Determines whether or not the two instances are not equal
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Auxiliary.ZipEntryName">
             <summary>
             Defines a data type that just produces data points from the zip entry names in a zip file
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. The returned object is assumed to be time stamped in the config.ExchangeTimeZone.
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.BaseDataConsolidator">
             <summary>
             Type capable of consolidating trade bars from any base data instance
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.BaseDataConsolidator.FromResolution(QuantConnect.Resolution)">
             <summary>
             Create a new TickConsolidator for the desired resolution
             </summary>
             <param name="resolution">The resoluton desired</param>
             <returns>A consolidator that produces data on the resolution interval</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.BaseDataConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.BaseDataConsolidator.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.BaseDataConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.BaseDataConsolidator.AggregateBar(QuantConnect.Data.Market.TradeBar@,QuantConnect.Data.BaseData)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new trade bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.DynamicDataConsolidator">
             <summary>
             A data csolidator that can make trade bars from DynamicData derived types. This is useful for
             aggregating Quandl and other highly flexible dynamic custom data types.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DynamicDataConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the period.
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DynamicDataConsolidator.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data.
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DynamicDataConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data or the period, whichever comes first.
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DynamicDataConsolidator.AggregateBar(QuantConnect.Data.Market.TradeBar@,QuantConnect.Data.DynamicData)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new trade bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2">
             <summary>
             Provides a base class for consolidators that emit data based on the passing of a period of time
             or after seeing a max count of data points.
             </summary>
             <typeparam name="T">The input type of the consolidator</typeparam>
             <typeparam name="TConsolidated">The output type of the consolidator</typeparam>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new <typeparamref name="TConsolidated" /> instance representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new <typeparamref name="TConsolidated" /> instance representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new <typeparamref name="TConsolidated" /> instance representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.OutputType">
             <summary>
             Gets the type produced by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="E:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced. We define this as a 'new'
             event so we can expose it as a <typeparamref name="TConsolidated" /> instead of a <see cref="T:QuantConnect.Data.BaseData" /> instance
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.Update(`0)">
             <summary>
             Updates this consolidator with the specified data. This method is
             responsible for raising the DataConsolidated event
             In time span mode, the bar range is closed on the left and open on the right: [T, T+TimeSpan).
             For example, if time span is 1 minute, we have [10:00, 10:01): so data at 10:01 is not 
             included in the bar starting at 10:00.
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.IsTimeBased">
             <summary>
             Returns true if this consolidator is time-based, false otherwise
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.Period">
             <summary>
             Gets the time period for this consolidator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.ShouldProcess(`0)">
             <summary>
             Determines whether or not the specified data should be processd
             </summary>
             <param name="data">The data to check</param>
             <returns>True if the consolidator should process this data, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.AggregateBar(`1@,`0)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new consolidated bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.GetRoundedBarTime(System.DateTime)">
             <summary>
             Gets a rounded-down bar time. Called by AggregateBar in derived classes.
             </summary>
             <param name="time">The bar time to be rounded down</param>
             <returns>The rounded bar time</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase`2.OnDataConsolidated(`1)">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Data.Consolidators.PeriodCountConsolidatorBase{`0,`1}.DataConsolidated" /> event
             </summary>
             <param name="e">The consolidated data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.QuoteBarConsolidator">
             <summary>
             Consolidates quotebars into larger quotebars
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.QuoteBarConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.QuoteBarConsolidator.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.QuoteBarConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.QuoteBarConsolidator.AggregateBar(QuantConnect.Data.Market.QuoteBar@,QuantConnect.Data.Market.QuoteBar)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new consolidated bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.RenkoConsolidator">
             <summary>
             This consolidator can transform a stream of <see cref="T:QuantConnect.Data.BaseData" /> instances into a stream of <see cref="T:QuantConnect.Data.Market.RenkoBar" />
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Consolidators.RenkoConsolidator.DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced
             </summary>
            </member>
        <member name="E:QuantConnect.Data.Consolidators.RenkoConsolidator.QuantConnect#Data#Consolidators#IDataConsolidator#DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.#ctor(System.Decimal,QuantConnect.Data.Market.RenkoType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class using the specified <paramref name="barSize" />.
             </summary>
             <param name="barSize">The constant value size of each bar</param>
             <param name="type">The RenkoType of the bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.#ctor(System.Decimal,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class using the specified <paramref name="barSize" />.
             The value selector will by default select <see cref="P:QuantConnect.Data.IBaseData.Value" />
             The volume selector will by default select zero.
             </summary>
             <param name="barSize">The constant value size of each bar</param>
             <param name="evenBars">When true bar open/close will be a multiple of the barSize</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.#ctor(System.Decimal,System.Func{QuantConnect.Data.IBaseData,System.Decimal},System.Func{QuantConnect.Data.IBaseData,System.Int64},System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class.
             </summary>
             <param name="barSize">The size of each bar in units of the value produced by <paramref name="selector" /></param>
             <param name="selector">Extracts the value from a data instance to be formed into a <see cref="T:QuantConnect.Data.Market.RenkoBar" />. The default
             value is (x =&gt; x.Value) the <see cref="P:QuantConnect.Data.IBaseData.Value" /> property on <see cref="T:QuantConnect.Data.IBaseData" /></param>
             <param name="volumeSelector">Extracts the volume from a data instance. The default value is null which does 
             not aggregate volume per bar.</param>
             <param name="evenBars">When true bar open/close will be a multiple of the barSize</param>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.Type">
             <summary>
             Gets the kind of the bar
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.BarSize">
             <summary>
             Gets the bar size used by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.Consolidated">
             <summary>
             Gets the most recently consolidated piece of data. This will be null if this consolidator
             has not produced any data yet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.InputType">
             <summary>
             Gets the type consumed by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.RenkoConsolidator.OutputType">
             <summary>
             Gets <see cref="T:QuantConnect.Data.Market.RenkoBar" /> which is the type emitted in the <see cref="E:QuantConnect.Data.Consolidators.IDataConsolidator.DataConsolidated" /> event.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.Update(QuantConnect.Data.IBaseData)">
             <summary>
             Updates this consolidator with the specified data. This method is
             responsible for raising the DataConsolidated event
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator.OnDataConsolidated(QuantConnect.Data.Market.RenkoBar)">
             <summary>
             Event invocator for the DataConsolidated event. This should be invoked
             by derived classes when they have consolidated a new piece of data.
             </summary>
             <param name="consolidated">The newly consolidated data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.RenkoConsolidator`1">
             <summary>
             Provides a type safe wrapper on the RenkoConsolidator class. This just allows us to define our selector functions with the real type they'll be receiving
             </summary>
             <typeparam name="TInput"></typeparam>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator`1.#ctor(System.Decimal,System.Func{`0,System.Decimal},System.Func{`0,System.Int64},System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class.
             </summary>
             <param name="barSize">The size of each bar in units of the value produced by <paramref name="selector" /></param>
             <param name="selector">Extracts the value from a data instance to be formed into a <see cref="T:QuantConnect.Data.Market.RenkoBar" />. The default
             value is (x =&gt; x.Value) the <see cref="P:QuantConnect.Data.IBaseData.Value" /> property on <see cref="T:QuantConnect.Data.IBaseData" /></param>
             <param name="volumeSelector">Extracts the volume from a data instance. The default value is null which does 
             not aggregate volume per bar.</param>
             <param name="evenBars">When true bar open/close will be a multiple of the barSize</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator`1.#ctor(System.Decimal,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class using the specified <paramref name="barSize" />.
             The value selector will by default select <see cref="P:QuantConnect.Data.IBaseData.Value" />
             The volume selector will by default select zero.
             </summary>
             <param name="barSize">The constant value size of each bar</param>
             <param name="evenBars">When true bar open/close will be a multiple of the barSize</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator`1.#ctor(System.Decimal,QuantConnect.Data.Market.RenkoType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.RenkoConsolidator" /> class using the specified <paramref name="barSize" />.
             The value selector will by default select <see cref="P:QuantConnect.Data.IBaseData.Value" />
             The volume selector will by default select zero.
             </summary>
             <param name="barSize">The constant value size of each bar</param>
             <param name="type">The RenkoType of the bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.RenkoConsolidator`1.Update(`0)">
             <summary>
             Updates this consolidator with the specified data.
             </summary>
             <remarks>
             Type safe shim method.
             </remarks>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.TickConsolidator">
             <summary>
             A data consolidator that can make bigger bars from ticks over a given
             time span or a count of pieces of data.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickConsolidator.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickConsolidator.AggregateBar(QuantConnect.Data.Market.TradeBar@,QuantConnect.Data.Market.Tick)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator">
             <summary>
             Consolidates ticks into quote bars. This consolidator ignores trade ticks
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator" /> class
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.ShouldProcess(QuantConnect.Data.Market.Tick)">
             <summary>
             Determines whether or not the specified data should be processd
             </summary>
             <param name="data">The data to check</param>
             <returns>True if the consolidator should process this data, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.AggregateBar(QuantConnect.Data.Market.QuoteBar@,QuantConnect.Data.Market.Tick)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new consolidated bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.TradeBarConsolidatorBase`1">
             <summary>
             A data consolidator that can make bigger bars from any base data
             
             This type acts as the base for other consolidators that produce bars on a given time step or for a count of data.
             </summary>
             <typeparam name="T">The input type into the consolidator's Update method</typeparam>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidatorBase`1.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidatorBase`1.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidatorBase`1.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.TradeBarConsolidatorBase`1.WorkingBar">
             <summary>
             Gets a copy of the current 'workingBar'.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.FileFormat">
             <summary>
             Specifies the format of data in a subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.FileFormat.Csv">
             <summary>
             Comma separated values
             </summary>
            </member>
        <member name="F:QuantConnect.Data.FileFormat.Binary">
             <summary>
             Binary file data
             </summary>
            </member>
        <member name="F:QuantConnect.Data.FileFormat.ZipEntryName">
             <summary>
             Only the zip entry names are read in as symbols
             </summary>
            </member>
        <member name="F:QuantConnect.Data.FileFormat.Collection">
             <summary>
             Reader returns a BaseDataCollection object.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.HistoryRequest">
             <summary>
             Represents a request for historical data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.StartTimeUtc">
             <summary>
             Gets the start time of the request.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.EndTimeUtc">
             <summary>
             Gets the end time of the request. 
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.Symbol">
             <summary>
             Gets the symbol to request data for
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.ExchangeHours">
             <summary>
             Gets the exchange hours used for processing fill forward requests
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.Resolution">
             <summary>
             Gets the requested data resolution
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.FillForwardResolution">
             <summary>
             Gets the requested fill forward resolution, set to null for no fill forward behavior
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.IncludeExtendedMarketHours">
             <summary>
             Gets whether or not to include extended market hours data, set to false for only normal market hours
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.DataType">
             <summary>
             Gets the data type used to process the subscription request, this type must derive from BaseData
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.SecurityType">
             <summary>
             Gets the security type of the subscription
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.TimeZone">
             <summary>
             Gets the time zone of the time stamps on the raw input data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.Market">
             <summary>
             Gets the market for this subscription
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.IsCustomData">
             <summary>
             Gets true if this is a custom data request, false for normal QC data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.HistoryRequest.DataNormalizationMode">
             <summary>
             Gets the normalization mode used for this subscription
             </summary>
            </member>
        <member name="M:QuantConnect.Data.HistoryRequest.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.HistoryRequest" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.HistoryRequest.#ctor(System.DateTime,System.DateTime,System.Type,QuantConnect.Symbol,QuantConnect.SecurityType,QuantConnect.Resolution,System.String,QuantConnect.Securities.SecurityExchangeHours,System.Nullable{QuantConnect.Resolution},System.Boolean,System.Boolean,QuantConnect.DataNormalizationMode)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.HistoryRequest" /> class from the specified parameters
             </summary>
             <param name="startTimeUtc">The start time for this request,</param>
             <param name="endTimeUtc">The start time for this request</param>
             <param name="dataType">The data type of the output data</param>
             <param name="symbol">The symbol to request data for</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="resolution">The requested data resolution</param>
             <param name="market">The market this data belongs to</param>
             <param name="exchangeHours">The exchange hours used in fill forward processing</param>
             <param name="fillForwardResolution">The requested fill forward resolution for this request</param>
             <param name="includeExtendedMarketHours">True to include data from pre/post market hours</param>
             <param name="isCustomData">True for custom user data, false for normal QC data</param>
             <param name="dataNormalizationMode">Specifies normalization mode used for this subscription</param>
            </member>
        <member name="M:QuantConnect.Data.HistoryRequest.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.SecurityExchangeHours,System.DateTime,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.HistoryRequest" /> class from the specified config and exchange hours
             </summary>
             <param name="config">The subscription data config used to initalize this request</param>
             <param name="hours">The exchange hours used for fill forward processing</param>
             <param name="startTimeUtc">The start time for this request,</param>
             <param name="endTimeUtc">The start time for this request</param>
            </member>
        <member name="T:QuantConnect.Data.Market.Bar">
             <summary>
             Base Bar Class: Open, High, Low, Close and Period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Bar.Open">
             <summary>
             Opening price of the bar: Defined as the price at the start of the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Bar.High">
             <summary>
             High price of the bar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Bar.Low">
             <summary>
             Low price of the bar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Bar.Close">
             <summary>
             Closing price of the bar. Defined as the price at Start Time + TimeSpan.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Bar.#ctor">
             <summary>
             Default initializer to setup an empty bar.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Bar.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializer to setup a bar with a given information.
             </summary>
             <param name="open">Decimal Opening Price</param>
             <param name="high">Decimal High Price of this bar</param>
             <param name="low">Decimal Low Price of this bar</param>
             <param name="close">Decimal Close price of this bar</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Bar.Update(System.Decimal)">
             <summary>
             Updates the bar with a new value. This will aggregate the OHLC bar
             </summary>
             <param name="value">The new value</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Bar.Clone">
             <summary>
             Returns a clone of this bar
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.DataDictionary`1">
             <summary>
             Provides a base class for types holding base data instances keyed by symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.DataDictionary`1" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,QuantConnect.Symbol})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.DataDictionary`1" /> class
             using the specified <paramref name="data" /> as a data source
             </summary>
             <param name="data">The data source for this data dictionary</param>
             <param name="keySelector">Delegate used to select a key from the value</param>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.DataDictionary`1" /> class.
             </summary>
             <param name="time">The time this data was emitted.</param>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Time">
             <summary>
             Gets or sets the time associated with this collection of data
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Add(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,`0})">
             <summary>
             Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Clear">
             <summary>
             Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Contains(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,`0})">
             <summary>
             Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
             </summary>
             <returns>
             true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
             </returns>
             <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,`0}[],System.Int32)">
             <summary>
             Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
             </summary>
             <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Remove(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,`0})">
             <summary>
             Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <returns>
             true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
             </returns>
             <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Count">
             <summary>
             Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <returns>
             The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </returns>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.IsReadOnly">
             <summary>
             Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
             </summary>
             <returns>
             true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.ContainsKey(QuantConnect.Symbol)">
             <summary>
             Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
             </summary>
             <returns>
             true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
             </returns>
             <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Add(QuantConnect.Symbol,`0)">
             <summary>
             Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <param name="key">The object to use as the key of the element to add.</param><param name="value">The object to use as the value of the element to add.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.Remove(QuantConnect.Symbol)">
             <summary>
             Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
             <param name="key">The key of the element to remove.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionary`1.TryGetValue(QuantConnect.Symbol,`0@)">
             <summary>
             Gets the value associated with the specified key.
             </summary>
             <returns>
             true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.
             </returns>
             <param name="key">The key whose value to get.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Item(QuantConnect.Symbol)">
             <summary>
             Gets or sets the element with the specified key.
             </summary>
             <returns>
             The element with the specified key.
             </returns>
             <param name="symbol">The key of the element to get or set.</param>
             <exception cref="T:System.ArgumentNullException"><paramref name="symbol" /> is null.</exception>
             <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="symbol" /> is not found.</exception>
             <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Item(System.String)">
             <summary>
             Gets or sets the element with the specified key.
             </summary>
             <returns>
             The element with the specified key.
             </returns>
             <param name="ticker">The key of the element to get or set.</param>
             <exception cref="T:System.ArgumentNullException"><paramref name="ticker" /> is null.</exception>
             <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="ticker" /> is not found.</exception>
             <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Keys">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
            </member>
        <member name="P:QuantConnect.Data.Market.DataDictionary`1.Values">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
            </member>
        <member name="T:QuantConnect.Data.Market.DataDictionaryExtensions">
             <summary>
             Provides extension methods for the DataDictionary class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.DataDictionaryExtensions.Add``1(QuantConnect.Data.Market.DataDictionary{``0},``0)">
             <summary>
             Provides a convenience method for adding a base data instance to our data dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.Delisting">
             <summary>
             Delisting event of a security
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Delisting.Type">
             <summary>
             Gets the type of delisting, warning or delisted
             A <see cref="F:QuantConnect.DelistingType.Warning" /> is sent
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Delisting.Ticket">
             <summary>
             Gets the <see cref="T:QuantConnect.Orders.OrderTicket" /> that was submitted to liquidate this position
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delisting" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal,QuantConnect.DelistingType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delisting" /> class
             </summary>
             <param name="symbol">The delisted symbol</param>
             <param name="date">The date the symbol was delisted</param>
             <param name="price">The final price before delisting</param>
             <param name="type">The type of delisting event</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)">
             <summary>
             Sets the <see cref="T:QuantConnect.Orders.OrderTicket" /> used to liquidate this position
             </summary>
             <param name="ticket">The ticket that represents the order to liquidate this position</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. 
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Delisting.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.Delistings">
             <summary>
             Collections of <see cref="T:QuantConnect.Data.Market.Delisting" /> keyed by <see cref="T:QuantConnect.Symbol" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Delistings.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delistings" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Delistings.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delistings" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Data.Market.Dividend">
             <summary>
             Dividend event from a security
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.#ctor">
             <summary>
             Initializes a new instance of the Dividend class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the Dividend class
             </summary>
             <param name="symbol">The symbol</param>
             <param name="date">The date</param>
             <param name="close">The close</param>
             <param name="priceFactorRatio">The ratio of the price factors, pf_i/pf_i+1</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal)">
             <summary>
             Initializes a new instance of the Dividend class
             </summary>
             <param name="symbol">The symbol</param>
             <param name="date">The date</param>
             <param name="distribution">The dividend amount</param>
            </member>
        <member name="P:QuantConnect.Data.Market.Dividend.Distribution">
             <summary>
             Gets the dividend payment
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. 
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividend.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.Dividends">
             <summary>
             Collection of dividends keyed by <see cref="T:QuantConnect.Symbol" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividends.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Dividends" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Dividends.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Dividends" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Data.Market.IBar">
             <summary>
             Generic bar interface with Open, High, Low and Close.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.IBar.Open">
             <summary>
             Opening price of the bar: Defined as the price at the start of the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.IBar.High">
             <summary>
             High price of the bar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.IBar.Low">
             <summary>
             Low price of the bar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.IBar.Close">
             <summary>
             Closing price of the bar. Defined as the price at Start Time + TimeSpan.
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.QuoteBar">
             <summary>
             QuoteBar class for second and minute resolution data: 
             An OHLC implementation of the QuantConnect BaseData class with parameters for candles.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.LastBidSize">
             <summary>
             Average bid size
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.LastAskSize">
             <summary>
             Average ask size
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Bid">
             <summary>
             Bid OHLC
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Ask">
             <summary>
             Ask OHLC
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Open">
             <summary>
             Opening price of the bar: Defined as the price at the start of the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.High">
             <summary>
             High price of the QuoteBar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Low">
             <summary>
             Low price of the QuoteBar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Close">
             <summary>
             Closing price of the QuoteBar. Defined as the price at Start Time + TimeSpan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.EndTime">
             <summary>
             The closing time of this bar, computed via the Time and Period
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.QuoteBar.Period">
             <summary>
             The period of this quote bar, (second, minute, daily, ect...)
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.#ctor">
             <summary>
             Default initializer to setup an empty quotebar.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.#ctor(System.DateTime,QuantConnect.Symbol,QuantConnect.Data.Market.IBar,System.Int64,QuantConnect.Data.Market.IBar,System.Int64,System.Nullable{System.TimeSpan})">
             <summary>
             Initialize Quote Bar with Bid(OHLC) and Ask(OHLC) Values:
             </summary>
             <param name="time">DateTime Timestamp of the bar</param>
             <param name="symbol">Market MarketType Symbol</param>
             <param name="bid">Bid OLHC bar</param>
             <param name="lastBidSize">Average bid size over period</param>
             <param name="ask">Ask OLHC bar</param>
             <param name="lastAskSize">Average ask size over period</param>
             <param name="period">The period of this bar, specify null for default of 1 minute</param>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.Update(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Update the quotebar - build the bar from this pricing information:
             </summary>
             <param name="lastTrade">The last trade price</param>
             <param name="bidPrice">Current bid price</param>
             <param name="askPrice">Current asking price</param>
             <param name="volume">Volume of this trade</param>
             <param name="bidSize">The size of the current bid, if available, if not, pass 0</param>
             <param name="askSize">The size of the current ask, if available, if not, pass 0</param>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             QuoteBar Reader: Fetch the data from the QC storage and feed it line by line into the engine.
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Enumerable iterator for returning each line of the required data.</returns>
            </member>
        <member name="F:QuantConnect.Data.Market.QuoteBar.HasShownWarning">
             <summary>
             "Scaffold" code - If the data being read is formatted as a TradeBar, use this method to deserialize it
             TODO: Once all Forex data refactored to use QuoteBar formatted data, remove this method
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <returns><see cref="T:QuantConnect.Data.Market.QuoteBar" /> with the bid/ask prices set to same values</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.ParseQuoteAsQuoteBar(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.String)">
             <summary>
             "Scaffold" code - If the data being read is formatted as a QuoteBar, use this method to deserialize it
             TODO: Once all Forex data refactored to use QuoteBar formatted data, use only this method
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <returns><see cref="T:QuantConnect.Data.Market.QuoteBar" /> with the bid/ask prices set appropriately</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Get Source for Custom Data File
             &gt;&gt; What source file location would you prefer for each type of usage:
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source request if source spread across multiple files</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String source location of the file</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.Clone">
             <summary>
             Return a new instance clone of this quote bar, used in fill forward
             </summary>
             <returns>A clone of the current quote bar</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.QuoteBar.Collapse">
             <summary>
             Collapses QuoteBars into TradeBars object when
              algorithm requires FX data, but calls OnData(<see cref="T:QuantConnect.Data.Market.TradeBars" />)
             TODO: (2017) Remove this method in favor of using OnData(<see cref="T:QuantConnect.Data.Slice" />)
             </summary>
             <returns><see cref="T:QuantConnect.Data.Market.TradeBars" /></returns>
            </member>
        <member name="T:QuantConnect.Data.Market.RenkoBar">
             <summary>
             Represents a bar sectioned not by time, but by some amount of movement in a value (for example, Closing price moving in $10 bar sizes)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Type">
             <summary>
             Gets the kind of the bar
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.BrickSize">
             <summary>
             Gets the height of the bar
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Open">
             <summary>
             Gets the opening value that started this bar.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Close">
             <summary>
             Gets the closing value or the current value if the bar has not yet closed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.High">
             <summary>
             Gets the highest value encountered during this bar
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Low">
             <summary>
             Gets the lowest value encountered during this bar
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Volume">
             <summary>
             Gets the volume of trades during the bar.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.EndTime">
             <summary>
             Gets the end time of this renko bar or the most recent update time if it <see cref="P:QuantConnect.Data.Market.RenkoBar.IsClosed" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.End">
             <summary>
             Gets the end time of this renko bar or the most recent update time if it <see cref="P:QuantConnect.Data.Market.RenkoBar.IsClosed" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Start">
             <summary>
             Gets the time this bar started
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.IsClosed">
             <summary>
             Gets whether or not this bar is considered closed.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Direction">
             <summary>
             The trend of the bar (i.e. Rising, Falling or NoDelta)
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.RenkoBar.Spread">
             <summary>
             The "spread" of the bar
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.Market.RenkoBar" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal,System.Decimal,System.Int64)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.RenkoBar" /> class with the specified values
             </summary>
             <param name="symbol">The symbol of this data</param>
             <param name="time">The start time of the bar</param>
             <param name="brickSize">The size of each renko brick</param>
             <param name="open">The opening price for the new bar</param>
             <param name="volume">Any initial volume associated with the data</param>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.#ctor(QuantConnect.Symbol,System.DateTime,System.DateTime,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="!:WickoBar" /> class with the specified values
             </summary>
             <param name="symbol">The symbol of this data</param>
             <param name="start">The start time of the bar</param>
             <param name="endTime">The end time of the bar</param>
             <param name="brickSize">The size of each wicko brick</param>
             <param name="open">The opening price for the new bar</param>
             <param name="high">The high price for the new bar</param>
             <param name="low">The low price for the new bar</param>
             <param name="close">The closing price for the new bar</param>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.Update(System.DateTime,System.Decimal,System.Int64)">
             <summary>
             Updates this <see cref="T:QuantConnect.Data.Market.RenkoBar" /> with the specified values and returns whether or not this bar is closed
             </summary>
             <param name="time">The current time</param>
             <param name="currentValue">The current value</param>
             <param name="volumeSinceLastUpdate">The volume since the last update called on this instance</param>
             <returns>True if this bar <see cref="P:QuantConnect.Data.Market.RenkoBar.IsClosed" /></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader Method :: using set of arguements we specify read out type. Enumerate
             until the end of the data stream or file. E.g. Read CSV file line by line and convert
             into data types.
             </summary>
             <returns>BaseData type set by Subscription Method.</returns>
             <param name="config">Config.</param>
             <param name="line">Line.</param>
             <param name="date">Date.</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.RenkoBar.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Brokerages.BrokerageMessageEvent">
             <summary>
             Represents a message received from a brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.BrokerageMessageEvent.Type">
             <summary>
             Gets the type of brokerage message
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.BrokerageMessageEvent.Code">
             <summary>
             Gets the brokerage specific code for this message, zero if no code was specified
             </summary>
            </member>
        <member name="P:QuantConnect.Brokerages.BrokerageMessageEvent.Message">
             <summary>
             Gets the message text received from the brokerage
             </summary>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageMessageEvent.#ctor(QuantConnect.Brokerages.BrokerageMessageType,System.Int32,System.String)">
             <summary>
             Initializes a new instance of the BrokerageMessageEvent class
             </summary>
             <param name="type">The type of brokerage message</param>
             <param name="code">The brokerage specific code</param>
             <param name="message">The message text received from the brokerage</param>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageMessageEvent.#ctor(QuantConnect.Brokerages.BrokerageMessageType,System.String,System.String)">
             <summary>
             Initializes a new instance of the BrokerageMessageEvent class
             </summary>
             <param name="type">The type of brokerage message</param>
             <param name="code">The brokerage specific code</param>
             <param name="message">The message text received from the brokerage</param>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageMessageEvent.Disconnected(System.String)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Brokerages.BrokerageMessageEvent" /> to represent a disconnect message
             </summary>
             <param name="message">The message from the brokerage</param>
             <returns>A brokerage disconnect message</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageMessageEvent.Reconnected(System.String)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Brokerages.BrokerageMessageEvent" /> to represent a reconnect message
             </summary>
             <param name="message">The message from the brokerage</param>
             <returns>A brokerage reconnect message</returns>
            </member>
        <member name="M:QuantConnect.Brokerages.BrokerageMessageEvent.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Brokerages.BrokerageMessageType">
             <summary>
             Specifies the type of message received from an IBrokerage implementation
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageMessageType.Information">
             <summary>
             Informational message
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageMessageType.Warning">
             <summary>
             Warning message
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageMessageType.Error">
             <summary>
             Fatal error message, the algo will be stopped
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageMessageType.Reconnect">
             <summary>
             Brokerage reconnected with remote server
             </summary>
            </member>
        <member name="F:QuantConnect.Brokerages.BrokerageMessageType.Disconnect">
             <summary>
             Brokerage disconnected from remote server
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Market.Split">
             <summary>
             Split event from a security
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.#ctor">
             <summary>
             Initializes a new instance of the Split class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the Split class
             </summary>
             <param name="symbol">The symbol</param>
             <param name="date">The date</param>
             <param name="price">The price at the time of the split</param>
             <param name="splitFactor">The split factor to be applied to current holdings</param>
            </member>
        <member name="P:QuantConnect.Data.Market.Split.SplitFactor">
             <summary>
             Gets the split factor
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.Split.ReferencePrice">
             <summary>
             Gets the price at which the split occurred
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. 
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.ToString">
             <summary>
             Returns a <see cref="T:System.String" /> that represents the current <see cref="T:QuantConnect.Data.Market.Split" />.
             </summary>
             <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:QuantConnect.Data.Market.Split" />.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Split.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.Splits">
             <summary>
             Collection of splits keyed by <see cref="T:QuantConnect.Symbol" />
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Splits.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Splits" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Splits.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Splits" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Data.Market.SymbolChangedEvent">
             <summary>
             Symbol changed event of a security. This is generated when a symbol is remapped for a given
             security, for example, at EOD 2014.04.02 GOOG turned into GOOGL, but are the same
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.SymbolChangedEvent.OldSymbol">
             <summary>
             Gets the symbol before the change
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.SymbolChangedEvent.NewSymbol">
             <summary>
             Gets the symbol after the change
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.SymbolChangedEvent.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.Market.SymbolChangedEvent" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.SymbolChangedEvent.#ctor(QuantConnect.Symbol,System.DateTime,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.SymbolChangedEvent" />
             </summary>
             <param name="requestedSymbol">The symbol that was originally requested</param>
             <param name="date">The date/time this symbol remapping took place</param>
             <param name="oldSymbol">The old symbol mapping</param>
             <param name="newSymbol">The new symbol mapping</param>
            </member>
        <member name="M:QuantConnect.Data.Market.SymbolChangedEvent.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.SymbolChangedEvents">
             <summary>
             Collection of <see cref="T:QuantConnect.Data.Market.SymbolChangedEvent" /> keyed by the original, requested symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.SymbolChangedEvents.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delistings" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.SymbolChangedEvents.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Delistings" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Data.Slice">
             <summary>
             Provides a data structure for all of an algorithm's data at a single time step
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Time">
             <summary>
             Gets the timestamp for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.HasData">
             <summary>
             Gets whether or not this slice has data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Bars">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.TradeBars" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.QuoteBars">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.QuoteBars" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Ticks">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.Ticks" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.OptionChains">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.OptionChains" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.FuturesChains">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.FuturesChains" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.FutureChains">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.FuturesChains" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Splits">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.Splits" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Dividends">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.Dividends" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Delistings">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.Delistings" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.SymbolChangedEvents">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.SymbolChangedEvents" /> for this slice of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Count">
             <summary>
             Gets the number of symbols held in this slice
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Keys">
             <summary>
             Gets all the symbols in this slice
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Slice.Values">
             <summary>
             Gets a list of all the data in this slice
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Slice.#ctor(System.DateTime,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Slice" /> class, lazily
             instantiating the <see cref="P:QuantConnect.Data.Slice.Bars" /> and <see cref="P:QuantConnect.Data.Slice.Ticks" />
             collections on demand
             </summary>
             <param name="time">The timestamp for this slice of data</param>
             <param name="data">The raw data in this slice</param>
            </member>
        <member name="M:QuantConnect.Data.Slice.#ctor(System.DateTime,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},QuantConnect.Data.Market.TradeBars,QuantConnect.Data.Market.QuoteBars,QuantConnect.Data.Market.Ticks,QuantConnect.Data.Market.OptionChains,QuantConnect.Data.Market.FuturesChains,QuantConnect.Data.Market.Splits,QuantConnect.Data.Market.Dividends,QuantConnect.Data.Market.Delistings,QuantConnect.Data.Market.SymbolChangedEvents,System.Nullable{System.Boolean})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Slice" /> class
             </summary>
             <param name="time">The timestamp for this slice of data</param>
             <param name="data">The raw data in this slice</param>
             <param name="tradeBars">The trade bars for this slice</param>
             <param name="quoteBars">The quote bars for this slice</param>
             <param name="ticks">This ticks for this slice</param>
             <param name="optionChains">The option chains for this slice</param>
             <param name="futuresChains">The futures chains for this slice</param>
             <param name="splits">The splits for this slice</param>
             <param name="dividends">The dividends for this slice</param>
             <param name="delistings">The delistings for this slice</param>
             <param name="symbolChanges">The symbol changed events for this slice</param>
             <param name="hasData">true if this slice contains data</param>
            </member>
        <member name="P:QuantConnect.Data.Slice.Item(QuantConnect.Symbol)">
             <summary>
             Gets the data corresponding to the specified symbol. If the requested data
             is of <see cref="F:QuantConnect.MarketDataType.Tick" />, then a <see cref="T:System.Collections.Generic.List`1" /> will
             be returned, otherwise, it will be the subscribed type, for example, <see cref="T:QuantConnect.Data.Market.TradeBar" />
             or event <see cref="T:QuantConnect.Data.Custom.Quandl" /> for custom data.
             </summary>
             <param name="symbol">The data's symbols</param>
             <returns>The data for the specified symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.Get``1">
             <summary>
             Gets the <see cref="T:QuantConnect.Data.Market.DataDictionary`1" /> for all data of the specified type
             </summary>
             <typeparam name="T">The type of data we want, for example, <see cref="T:QuantConnect.Data.Market.TradeBar" /> or <see cref="T:QuantConnect.Data.Custom.Quandl" />, ect...</typeparam>
             <returns>The <see cref="T:QuantConnect.Data.Market.DataDictionary`1" /> containing the data of the specified type</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.Get``1(QuantConnect.Symbol)">
             <summary>
             Gets the data of the specified symbol and type.
             </summary>
             <typeparam name="T">The type of data we seek</typeparam>
             <param name="symbol">The specific symbol was seek</param>
             <returns>The data for the requested symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.ContainsKey(QuantConnect.Symbol)">
             <summary>
             Determines whether this instance contains data for the specified symbol
             </summary>
             <param name="symbol">The symbol we seek data for</param>
             <returns>True if this instance contains data for the symbol, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol,System.dynamic@)">
             <summary>
             Gets the data associated with the specified symbol
             </summary>
             <param name="symbol">The symbol we want data for</param>
             <param name="data">The data for the specifed symbol, or null if no data was found</param>
             <returns>True if data was found, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Produces the dynamic data dictionary from the input data
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)">
             <summary>
             Returns the input ticks if non-null, otherwise produces one fom the dynamic data dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Slice.CreateCollection``2(``0)">
             <summary>
             Returns the input collection if onon-null, otherwise produces one from the dynamic data dictionary
             </summary>
             <typeparam name="T">The data dictionary type</typeparam>
             <typeparam name="TItem">The item type of the data dictionary</typeparam>
             <param name="collection">The input collection, if non-null, returned immediately</param>
             <returns>The data dictionary of <typeparamref name="TItem" /> containing all the data of that type in this slice</returns>
            </member>
        <member name="M:QuantConnect.Data.Slice.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.Slice.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.SliceExtensions">
             <summary>
             Provides extension methods to slice enumerables
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.TradeBars(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice})">
             <summary>
             Selects into the slice and returns the TradeBars that have data in order
             </summary>
             <param name="slices">The enumerable of slice</param>
             <returns>An enumerable of TradeBars</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Ticks(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice})">
             <summary>
             Selects into the slice and returns the Ticks that have data in order
             </summary>
             <param name="slices">The enumerable of slice</param>
             <returns>An enumerable of Ticks</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice},QuantConnect.Symbol)">
             <summary>
             Gets an enumerable of TradeBar for the given symbol. This method does not verify
             that the specified symbol points to a TradeBar
             </summary>
             <param name="slices">The enumerable of slice</param>
             <param name="symbol">The symbol to retrieve</param>
             <returns>An enumerable of TradeBar for the matching symbol, of no TradeBar found for symbol, empty enumerable is returned</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get``1(System.Collections.Generic.IEnumerable{QuantConnect.Data.Market.DataDictionary{``0}},QuantConnect.Symbol)">
             <summary>
             Gets an enumerable of T for the given symbol. This method does not vify
             that the specified symbol points to a T
             </summary>
             <typeparam name="T">The data type</typeparam>
             <param name="dataDictionaries">The data dictionary enumerable to access</param>
             <param name="symbol">The symbol to retrieve</param>
             <returns>An enumerable of T for the matching symbol, if no T is found for symbol, empty enumerable is returned</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get``1(System.Collections.Generic.IEnumerable{QuantConnect.Data.Market.DataDictionary{``0}},QuantConnect.Symbol,System.String)">
             <summary>
             Gets an enumerable of decimals by accessing the specified field on data for the symbol
             </summary>
             <typeparam name="T">The data type</typeparam>
             <param name="dataDictionaries">An enumerable of data dictionaries</param>
             <param name="symbol">The symbol to retrieve</param>
             <param name="field">The field to access</param>
             <returns>An enumerable of decimals</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get``1(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice})">
             <summary>
             Gets the data dictionaries of the requested type in each slice
             </summary>
             <typeparam name="T">The data type</typeparam>
             <param name="slices">The enumerable of slice</param>
             <returns>An enumerable of data dictionary of the requested type</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get``1(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice},QuantConnect.Symbol)">
             <summary>
             Gets an enumerable of T by accessing the slices for the requested symbol
             </summary>
             <typeparam name="T">The data type</typeparam>
             <param name="slices">The enumerable of slice</param>
             <param name="symbol">The symbol to retrieve</param>
             <returns>An enumerable of T by accessing each slice for the requested symbol</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable{QuantConnect.Data.Slice},QuantConnect.Symbol,System.Func{QuantConnect.Data.BaseData,System.Decimal})">
             <summary>
             Gets an enumerable of decimal by accessing the slice for the symbol and then retrieving the specified
             field on each piece of data
             </summary>
             <param name="slices">The enumerable of slice</param>
             <param name="symbol">The symbol to retrieve</param>
             <param name="field">The field selector used to access the dats</param>
             <returns>An enumerable of decimal</returns>
            </member>
        <member name="M:QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable{System.Decimal})">
             <summary>
             Converts the specified enumerable of decimals into a double array
             </summary>
             <param name="decimals">The enumerable of decimal</param>
             <returns>Double array representing the enumerable of decimal</returns>
            </member>
        <member name="T:QuantConnect.Data.SubscriptionDataSource">
             <summary>
             Represents the source location and transport medium for a subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataSource.Source">
             <summary>
             Identifies where to get the subscription's data from
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataSource.Format">
             <summary>
             Identifies the format of the data within the source
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataSource.TransportMedium">
             <summary>
             Identifies the transport medium used to access the data, such as a local or remote file, or a polling rest API
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.#ctor(System.String,QuantConnect.SubscriptionTransportMedium)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> class.
             </summary>
             <param name="source">The subscription's data source location</param>
             <param name="transportMedium">The transport medium to be used to retrieve the subscription's data from the source</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.#ctor(System.String,QuantConnect.SubscriptionTransportMedium,QuantConnect.Data.FileFormat)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> class.
             </summary>
             <param name="source">The subscription's data source location</param>
             <param name="format">The format of the data within the source</param>
             <param name="transportMedium">The transport medium to be used to retrieve the subscription's data from the source</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.Equals(QuantConnect.Data.SubscriptionDataSource)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.Equals(System.Object)">
             <summary>
             Determines whether the specified instance is equal to the current instance.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.GetHashCode">
             <summary>
             Serves as a hash function for a particular type. 
             </summary>
             <returns>
             A hash code for the current <see cref="T:System.Object" />.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.op_Equality(QuantConnect.Data.SubscriptionDataSource,QuantConnect.Data.SubscriptionDataSource)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <param name="left">The <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> instance on the left of the operator</param>
             <param name="right">The <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> instance on the right of the operator</param>
             <returns>True if the two instances are considered equal, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.op_Inequality(QuantConnect.Data.SubscriptionDataSource,QuantConnect.Data.SubscriptionDataSource)">
             <summary>
             Indicates whether the current object is not equal to another object of the same type.
             </summary>
             <param name="left">The <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> instance on the left of the operator</param>
             <param name="right">The <see cref="T:QuantConnect.Data.SubscriptionDataSource" /> instance on the right of the operator</param>
             <returns>True if the two instances are not considered equal, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataSource.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.CoarseFundamental">
             <summary>
             Defines summary information about a single symbol for a given date
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamental.Market">
             <summary>
             Gets the market for this symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamental.DollarVolume">
             <summary>
             Gets the day's dollar volume for this symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamental.Volume">
             <summary>
             Gets the day's total volume
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamental.HasFundamentalData">
             <summary>
             Returns whether the symbol has fundamental data for the given date
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.CoarseFundamental.EndTime">
             <summary>
             The end time of this data.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamental.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.CoarseFundamental" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamental.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamental.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. 
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamental.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <returns>A clone of the current object</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.CoarseFundamental.CreateUniverseSymbol(System.String)">
             <summary>
             Creates the symbol used for coarse fundamental data
             </summary>
             <param name="market">The market</param>
             <returns>A coarse universe symbol for the specified market</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.BaseDataCollection">
             <summary>
             This type exists for transport of data as a single packet
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.BaseDataCollection.Data">
             <summary>
             Gets the data list
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.BaseDataCollection.EndTime">
             <summary>
             Gets or sets the end time of this data
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.BaseDataCollection.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.UniverseSelection.BaseDataCollection" /> c;ass
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.BaseDataCollection.#ctor(System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.BaseDataCollection" /> class
             </summary>
             <param name="time">The time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.BaseDataCollection.#ctor(System.DateTime,System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.BaseDataCollection" /> class
             </summary>
             <param name="time">The start time of this data</param>
             <param name="endTime">The end time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.OptionChainUniverse">
             <summary>
             Defines a universe for a single option chain
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.#ctor(QuantConnect.Securities.Option.Option,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.ISecurityInitializer)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.OptionChainUniverse" /> class
             </summary>
             <param name="option">The canonical option chain security</param>
             <param name="universeSettings">The universe settings to be used for new subscriptions</param>
             <param name="subscriptionManager">The subscription manager used to return available data types</param>
             <param name="securityInitializer">The security initializer to use on newly created securities</param>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.OptionChainUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.AddMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Adds the specified security to this universe
             </summary>
             <param name="utcTime">The current utc date time</param>
             <param name="security">The security to be added</param>
             <returns>True if the security was successfully added,
             false if the security was already in the universe</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Gets the subscription requests to be added for the specified security
             </summary>
             <param name="security">The security to get subscriptions for</param>
             <param name="currentTimeUtc">The current time in utc. This is the frontier time of the algorithm</param>
             <param name="maximumEndTimeUtc">The max end time</param>
             <returns>All subscriptions required by this security</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.CreateSecurity(QuantConnect.Symbol,QuantConnect.Interfaces.IAlgorithm,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase)">
             <summary>
             Creates and configures a security for the specified symbol
             </summary>
             <param name="symbol">The symbol of the security to be created</param>
             <param name="algorithm">The algorithm instance</param>
             <param name="marketHoursDatabase">The market hours database</param>
             <param name="symbolPropertiesDatabase">The symbol properties database</param>
             <returns>The newly initialized security object</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverse.CanRemoveMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Determines whether or not the specified security can be removed from
             this universe. This is useful to prevent securities from being taken
             out of a universe before the algorithm has had enough time to make
             decisions on the security
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="security">The security to check if its ok to remove</param>
             <returns>True if we can remove the security, false otherwise</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection">
             <summary>
             Defines the universe selection data type for <see cref="T:QuantConnect.Data.UniverseSelection.OptionChainUniverse" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.Underlying">
             <summary>
             The option chain's underlying price data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.FilteredContracts">
             <summary>
             Gets or sets the contracts selected by the universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection" /> c;ass
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.#ctor(System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},QuantConnect.Data.BaseData)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection" /> class
             </summary>
             <param name="time">The time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
             <param name="underlying">The option chain's underlying price data</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.#ctor(System.DateTime,System.DateTime,QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},QuantConnect.Data.BaseData)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection" /> class
             </summary>
             <param name="time">The start time of this data</param>
             <param name="endTime">The end time of this data</param>
             <param name="symbol">A common identifier for all data in this packet</param>
             <param name="data">The data to add to this collection</param>
             <param name="underlying">The option chain's underlying price data</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.UserDefinedUniverse">
             <summary>
             Represents the universe defined by the user's algorithm. This is
             the default universe where manually added securities live by
             market/security type. They can also be manually generated and
             can be configured to fire on certain interval and will always
             return the internal list of symbols.
             </summary>
            </member>
        <member name="E:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CollectionChanged">
             <summary>
             Event fired when a symbol is added or removed from this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Interval">
             <summary>
             Gets the interval of this user defined universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.TimeSpan,System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.UserDefinedUniverse" /> class
             </summary>
             <param name="configuration">The configuration used to resolve the data for universe selection</param>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="interval">The interval at which selection should be performed</param>
             <param name="symbols">The initial set of symbols in this universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.TimeSpan,System.Func{System.DateTime,System.Collections.Generic.IEnumerable{System.String}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.UserDefinedUniverse" /> class
             </summary>
             <param name="configuration">The configuration used to resolve the data for universe selection</param>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="interval">The interval at which selection should be performed</param>
             <param name="selector">Universe selection function invoked for each time returned via GetTriggerTimes.
             The function parameter is a DateTime in the time zone of configuration.ExchangeTimeZone</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CreateSymbol(QuantConnect.SecurityType,System.String)">
             <summary>
             Creates a user defined universe symbol
             </summary>
             <param name="securityType">The security</param>
             <param name="market">The market</param>
             <returns>A symbol for user defined universe of the specified security type and market</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Add(QuantConnect.Symbol)">
             <summary>
             Adds the specified symbol to this universe
             </summary>
             <param name="symbol">The symbol to be added to this universe</param>
             <returns>True if the symbol was added, false if it was already present</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.Remove(QuantConnect.Symbol)">
             <summary>
             Removes the specified symbol from this universe
             </summary>
             <param name="symbol">The symbol to be removed</param>
             <returns>True if the symbol was removed, false if the symbol was not present</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Returns the symbols defined by the user for this universe
             </summary>
             <param name="utcTime">The curren utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.GetTriggerTimes(System.DateTime,System.DateTime,QuantConnect.Securities.MarketHoursDatabase)">
             <summary>
             Returns an enumerator that defines when this user defined universe will be invoked
             </summary>
             <returns>An enumerator of DateTime that defines when this universe will be invoked</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Data.UniverseSelection.UserDefinedUniverse.CollectionChanged" /> event
             </summary>
             <param name="e">The notify collection changed event arguments</param>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.FuncUniverse">
             <summary>
             Provides a functional implementation of <see cref="T:QuantConnect.Data.UniverseSelection.Universe" />
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.FuncUniverse.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuncUniverse.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Data.UniverseSelection.UniverseSettings,QuantConnect.Securities.ISecurityInitializer,System.Func{System.Collections.Generic.IEnumerable{QuantConnect.Data.BaseData},System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.FuncUniverse" /> class
             </summary>
             <param name="configuration">The configuration used to resolve the data for universe selection</param>
             <param name="universeSettings">The settings used for new subscriptions generated by this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
             <param name="universeSelector">Returns the symbols that should be included in the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.FuncUniverse.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs an initial, coarse filter
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The coarse fundamental data</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.Universe">
             <summary>
             Provides a base class for all universes to derive from.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.Universe.Unchanged">
             <summary>
             Gets a value indicating that no change to the universe should be made
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.Securities">
             <summary>
             Gets the internal security collection used to define membership in this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.SecurityType">
             <summary>
             Gets the security type of this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.Market">
             <summary>
             Gets the market of this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.UniverseSettings">
             <summary>
             Gets the settings used for subscriptons added for this universe
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.Configuration">
             <summary>
             Gets the configuration used to get universe data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.SecurityInitializer">
             <summary>
             Gets the instance responsible for initializing newly added securities
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.Universe.Members">
             <summary>
             Gets the current listing of members in this universe. Modifications
             to this dictionary do not change universe membership.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.ISecurityInitializer)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.Universe" /> class
             </summary>
             <param name="config">The configuration used to source data for this universe</param>
             <param name="securityInitializer">Initializes securities when they're added to the universe</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Determines whether or not the specified security can be removed from
             this universe. This is useful to prevent securities from being taken
             out of a universe before the algorithm has had enough time to make
             decisions on the security
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="security">The security to check if its ok to remove</param>
             <returns>True if we can remove the security, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)">
             <summary>
             Performs universe selection using the data specified
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="data">The symbols to remain in the universe</param>
             <returns>The data that passes the filter</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol,QuantConnect.Interfaces.IAlgorithm,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase)">
             <summary>
             Creates and configures a security for the specified symbol
             </summary>
             <param name="symbol">The symbol of the security to be created</param>
             <param name="algorithm">The algorithm instance</param>
             <param name="marketHoursDatabase">The market hours database</param>
             <param name="symbolPropertiesDatabase">The symbol properties database</param>
             <returns>The newly initialized security object</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Gets the subscription requests to be added for the specified security
             </summary>
             <param name="security">The security to get subscriptions for</param>
             <param name="currentTimeUtc">The current time in utc. This is the frontier time of the algorithm</param>
             <param name="maximumEndTimeUtc">The max end time</param>
             <returns>All subscriptions required by this security</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)">
             <summary>
             Determines whether or not the specified symbol is currently a member of this universe
             </summary>
             <param name="symbol">The symbol whose membership is to be checked</param>
             <returns>True if the specified symbol is part of this universe, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Adds the specified security to this universe
             </summary>
             <param name="utcTime">The current utc date time</param>
             <param name="security">The security to be added</param>
             <returns>True if the security was successfully added,
             false if the security was already in the universe</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime,QuantConnect.Securities.Security)">
             <summary>
             Tries to remove the specified security from the universe. This
             will first check to verify that we can remove the security by
             calling the <see cref="M:QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime,QuantConnect.Securities.Security)" /> function.
             </summary>
             <param name="utcTime">The current utc time</param>
             <param name="security">The security to be removed</param>
             <returns>True if the security was successfully removed, false if
             we're not allowed to remove or if the security didn't exist</returns>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse">
             <summary>
             Provides a value to indicate that no changes should be made to the universe.
             This value is intended to be return reference via <see cref="M:QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime,QuantConnect.Data.UniverseSelection.BaseDataCollection)" />
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse.Instance">
             <summary>
             Read-only instance of the <see cref="T:QuantConnect.Data.UniverseSelection.Universe.UnchangedUniverse" /> value
             </summary>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.SecurityChanges">
             <summary>
             Defines the additions and subtractions to the algorithm's security subscriptions
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.SecurityChanges.None">
             <summary>
             Gets an instance that represents no changes have been made
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SecurityChanges.AddedSecurities">
             <summary>
             Gets the symbols that were added by universe selection
             </summary>
            </member>
        <member name="P:QuantConnect.Data.UniverseSelection.SecurityChanges.RemovedSecurities">
             <summary>
             Gets the symbols that were removed by universe selection. This list may
             include symbols that were removed, but are still receiving data due to
             existing holdings or open orders
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SecurityChanges.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Securities.Security},System.Collections.Generic.IEnumerable{QuantConnect.Securities.Security})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.SecurityChanges" /> class
             </summary>
             <param name="addedSecurities">Added symbols list</param>
             <param name="removedSecurities">Removed symbols list</param>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SecurityChanges.Added(QuantConnect.Securities.Security[])">
             <summary>
             Returns a new instance of <see cref="T:QuantConnect.Data.UniverseSelection.SecurityChanges" /> with the specified securities marked as added
             </summary>
             <param name="securities">The added securities</param>
             <returns>A new security changes instance with the specified securities marked as added</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(QuantConnect.Securities.Security[])">
             <summary>
             Returns a new instance of <see cref="T:QuantConnect.Data.UniverseSelection.SecurityChanges" /> with the specified securities marked as removed
             </summary>
             <param name="securities">The removed securities</param>
             <returns>A new security changes instance with the specified securities marked as removed</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SecurityChanges.op_Addition(QuantConnect.Data.UniverseSelection.SecurityChanges,QuantConnect.Data.UniverseSelection.SecurityChanges)">
             <summary>
             Combines the results of two <see cref="T:QuantConnect.Data.UniverseSelection.SecurityChanges" />
             </summary>
             <param name="left">The left side of the operand</param>
             <param name="right">The right side of the operand</param>
             <returns>Adds the additions together and removes any removals found in the additions, that is, additions take precendence</returns>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.SecurityChanges.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.UniverseSelection.UniverseSettings">
             <summary>
             Defines settings required when adding a subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseSettings.Resolution">
             <summary>
             The resolution to be used
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseSettings.Leverage">
             <summary>
             The leverage to be used
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseSettings.FillForward">
             <summary>
             True to fill data forward, false otherwise
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseSettings.ExtendedMarketHours">
             <summary>
             True to allow extended market hours data, false otherwise
             </summary>
            </member>
        <member name="F:QuantConnect.Data.UniverseSelection.UniverseSettings.MinimumTimeInUniverse">
             <summary>
             Defines the minimum amount of time a security must be in
             the universe before being removed.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.UniverseSelection.UniverseSettings.#ctor(QuantConnect.Resolution,System.Decimal,System.Boolean,System.Boolean,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.UniverseSelection.UniverseSettings" /> class
             </summary>
             <param name="resolution">The resolution</param>
             <param name="leverage">The leverage to be used</param>
             <param name="fillForward">True to fill data forward, false otherwise</param>
             <param name="extendedMarketHours">True to allow exended market hours data, false otherwise</param>
             <param name="minimumTimeInUniverse">Defines the minimum amount of time a security must remain in the universe before being removed</param>
            </member>
        <member name="T:QuantConnect.Field">
             <summary>
             Provides static properties to be used as selectors with the indicator system
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Open">
             <summary>
             Gets a selector that selects the Open value
             </summary>
            </member>
        <member name="P:QuantConnect.Field.High">
             <summary>
             Gets a selector that selects the High value
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Low">
             <summary>
             Gets a selector that selects the Low value
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Close">
             <summary>
             Gets a selector that selects the Close value
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Average">
             <summary>
             Defines an average price that is equal to (O + H + L + C) / 4
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Median">
             <summary>
             Defines an average price that is equal to (H + L) / 2
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Typical">
             <summary>
             Defines an average price that is equal to (H + L + C) / 3
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Weighted">
             <summary>
             Defines an average price that is equal to (H + L + 2*C) / 4
             </summary>
            </member>
        <member name="P:QuantConnect.Field.SevenBar">
             <summary>
             Defines an average price that is equal to (2*O + H + L + 3*C)/7
             </summary>
            </member>
        <member name="P:QuantConnect.Field.Volume">
             <summary>
             Gets a selector that selectors the Volume value
             </summary>
            </member>
        <member name="T:QuantConnect.Indicators.IIndicator`1">
             <summary>
             Represents an indicator that can receive data updates and emit events when the value of
             the indicator has changed.
             </summary>
             <typeparam name="T">The indicators input data type for the <see cref="M:QuantConnect.Indicators.IIndicator{`0}.Update(`0)" /> method</typeparam>
            </member>
        <member name="E:QuantConnect.Indicators.IIndicator`1.Updated">
             <summary>
             Event handler that fires after this indicator is updated
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IIndicator`1.Name">
             <summary>
             Gets a name for this indicator
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IIndicator`1.IsReady">
             <summary>
             Gets a flag indicating when this indicator is ready and fully initialized
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IIndicator`1.Current">
             <summary>
             Gets the current state of this indicator. If the state has not been updated
             then the time on the value will equal DateTime.MinValue.
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IIndicator`1.Samples">
             <summary>
             Gets the number of samples processed by this indicator
             </summary>
            </member>
        <member name="M:QuantConnect.Indicators.IIndicator`1.Update(`0)">
             <summary>
             Updates the state of this indicator with the given value and returns true
             if this indicator is ready, false otherwise
             </summary>
             <param name="input">The value to use to update this indicator</param>
             <returns>True if this indicator is ready, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Indicators.IIndicator`1.Reset">
             <summary>
             Resets this indicator to its initial state
             </summary>
            </member>
        <member name="T:QuantConnect.Indicators.IndicatorDataPoint">
             <summary>
             Represents a piece of data at a specific time
             </summary>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.#ctor">
             <summary>
             Initializes a new default instance of IndicatorDataPoint with a time of
             DateTime.MinValue and a Value of 0m.
             </summary>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.#ctor(System.DateTime,System.Decimal)">
             <summary>
             Initializes a new instance of the DataPoint type using the specified time/data
             </summary>
             <param name="time">The time this data was produced</param>
             <param name="value">The data</param>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.#ctor(QuantConnect.Symbol,System.DateTime,System.Decimal)">
             <summary>
             Initializes a new instance of the DataPoint type using the specified time/data
             </summary>
             <param name="symbol">The symbol associated with this data</param>
             <param name="time">The time this data was produced</param>
             <param name="value">The data</param>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.Equals(QuantConnect.Indicators.IndicatorDataPoint)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.CompareTo(QuantConnect.Indicators.IndicatorDataPoint)">
             <summary>
             Compares the current object with another object of the same type.
             </summary>
             <returns>
             A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero This object is equal to <paramref name="other" />. Greater than zero This object is greater than <paramref name="other" />. 
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.CompareTo(System.Object)">
             <summary>
             Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
             </summary>
             <returns>
             A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="obj" /> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="obj" />. Greater than zero This instance follows <paramref name="obj" /> in the sort order. 
             </returns>
             <param name="obj">An object to compare with this instance. </param><exception cref="T:System.ArgumentException"><paramref name="obj" /> is not the same type as this instance. </exception><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.ToString">
             <summary>
             Returns a string representation of this DataPoint instance using ISO8601 formatting for the date
             </summary>
             <returns>
             A <see cref="T:System.String" /> containing a fully qualified type name.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.Equals(System.Object)">
             <summary>
             Indicates whether this instance and a specified object are equal.
             </summary>
             <returns>
             true if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, false.
             </returns>
             <param name="obj">Another object to compare to. </param>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.GetHashCode">
             <summary>
             Returns the hash code for this instance.
             </summary>
             <returns>
             A 32-bit signed integer that is the hash code for this instance.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.op_Implicit(QuantConnect.Indicators.IndicatorDataPoint)~System.Decimal">
             <summary>
             Returns the data held within the instance
             </summary>
             <param name="instance">The DataPoint instance</param>
             <returns>The data held within the instance</returns>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             This function is purposefully not implemented.
             </summary>
            </member>
        <member name="M:QuantConnect.Indicators.IndicatorDataPoint.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             This function is purposefully not implemented.
             </summary>
            </member>
        <member name="T:QuantConnect.Indicators.IndicatorUpdatedHandler">
             <summary>
             Event handler type for the IndicatorBase.Updated event
             </summary>
             <param name="sender">The indicator that fired the event</param>
             <param name="updated">The new piece of data produced by the indicator</param>
            </member>
        <member name="T:QuantConnect.Indicators.IReadOnlyWindow`1">
             <summary>
                 Interface type used to pass windows around without worry of external modification
             </summary>
             <typeparam name="T">The type of data in the window</typeparam>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.Size">
             <summary>
                 Gets the size of this window
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.Count">
             <summary>
                 Gets the current number of elements in this window
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.Samples">
             <summary>
                 Gets the number of samples that have been added to this window over its lifetime
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.Item(System.Int32)">
             <summary>
                 Indexes into this window, where index 0 is the most recently
                 entered value
             </summary>
             <param name="i">the index, i</param>
             <returns>the ith most recent entry</returns>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.IsReady">
             <summary>
                 Gets a value indicating whether or not this window is ready, i.e,
                 it has been filled to its capacity, this is when the Size==Count
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.IReadOnlyWindow`1.MostRecentlyRemoved">
             <summary>
                 Gets the most recently removed item from the window. This is the
                 piece of data that just 'fell off' as a result of the most recent
                 add. If no items have been removed, this will throw an exception.
             </summary>
            </member>
        <member name="T:QuantConnect.Indicators.RollingWindow`1">
             <summary>
                 This is a window that allows for list access semantics,
                 where this[0] refers to the most recent item in the
                 window and this[Count-1] refers to the last item in the window
             </summary>
             <typeparam name="T">The type of data in the window</typeparam>
            </member>
        <member name="M:QuantConnect.Indicators.RollingWindow`1.#ctor(System.Int32)">
             <summary>
                 Initializes a new instance of the RollwingWindow class with the specified window size.
             </summary>
             <param name="size">The number of items to hold in the window</param>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.Size">
             <summary>
                 Gets the size of this window
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.Count">
             <summary>
                 Gets the current number of elements in this window
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.Samples">
             <summary>
                 Gets the number of samples that have been added to this window over its lifetime
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.MostRecentlyRemoved">
             <summary>
                 Gets the most recently removed item from the window. This is the
                 piece of data that just 'fell off' as a result of the most recent
                 add. If no items have been removed, this will throw an exception.
             </summary>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.Item(System.Int32)">
             <summary>
                 Indexes into this window, where index 0 is the most recently
                 entered value
             </summary>
             <param name="i">the index, i</param>
             <returns>the ith most recent entry</returns>
            </member>
        <member name="P:QuantConnect.Indicators.RollingWindow`1.IsReady">
             <summary>
                 Gets a value indicating whether or not this window is ready, i.e,
                 it has been filled to its capacity
             </summary>
            </member>
        <member name="M:QuantConnect.Indicators.RollingWindow`1.GetEnumerator">
             <summary>
                 Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
                 A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.RollingWindow`1.System#Collections#IEnumerable#GetEnumerator">
             <summary>
                 Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
                 An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Indicators.RollingWindow`1.Add(`0)">
             <summary>
                 Adds an item to this window and shifts all other elements
             </summary>
             <param name="item">The item to be added</param>
            </member>
        <member name="M:QuantConnect.Indicators.RollingWindow`1.Reset">
             <summary>
                 Clears this window of all data
             </summary>
            </member>
        <member name="T:QuantConnect.Interfaces.IAlgorithm">
             <summary>
             Interface for QuantConnect algorithm implementations. All algorithms must implement these
             basic members to allow interaction with the Lean Backtesting Engine.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.SubscriptionManager">
             <summary>
             Data subscription manager controls the information and subscriptions the algorithms recieves.
             Subscription configurations can be added through the Subscription Manager.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Securities">
             <summary>
             Security object collection class stores an array of objects representing representing each security/asset
             we have a subscription for.
             </summary>
             <remarks>It is an IDictionary implementation and can be indexed by symbol</remarks>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.UniverseManager">
             <summary>
             Gets the collection of universes for the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Portfolio">
             <summary>
             Security portfolio management class provides wrapper and helper methods for the Security.Holdings class such as
             IsLong, IsShort, TotalProfit
             </summary>
             <remarks>Portfolio is a wrapper and helper class encapsulating the Securities[].Holdings objects</remarks>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Transactions">
             <summary>
             Security transaction manager class controls the store and processing of orders.
             </summary>
             <remarks>The orders and their associated events are accessible here. When a new OrderEvent is recieved the algorithm portfolio is updated.</remarks>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.BrokerageModel">
             <summary>
             Gets the brokerage model used to emulate a real brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.BrokerageMessageHandler">
             <summary>
             Gets the brokerage message handler used to decide what to do
             with each message sent from the brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Notify">
             <summary>
             Notification manager for storing and processing live event messages
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Schedule">
             <summary>
             Gets schedule manager for adding/removing scheduled events
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.HistoryProvider">
             <summary>
             Gets or sets the history provider for the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Status">
             <summary>
             Gets or sets the current status of the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.IsWarmingUp">
             <summary>
             Gets whether or not this algorithm is still warming up
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Name">
             <summary>
             Public name for the algorithm.
             </summary>
             <remarks>Not currently used but preserved for API integrity</remarks>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Time">
             <summary>
             Current date/time in the algorithm's local time zone
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.TimeZone">
             <summary>
             Gets the time zone of the algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.UtcTime">
             <summary>
             Current date/time in UTC.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.StartDate">
             <summary>
             Algorithm start date for backtesting, set by the SetStartDate methods.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.EndDate">
             <summary>
             Get Requested Backtest End Date
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.AlgorithmId">
             <summary>
             AlgorithmId for the backtest
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.LiveMode">
             <summary>
             Algorithm is running on a live server.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.UniverseSettings">
             <summary>
             Gets the subscription settings to be used when adding securities via universe selection
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.DebugMessages">
             <summary>
             Debug messages from the strategy:
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.ErrorMessages">
             <summary>
             Error messages from the strategy:
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.LogMessages">
             <summary>
             Log messages from the strategy:
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.RunTimeError">
             <summary>
             Gets the run time error from the algorithm, or null if none was encountered.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.RuntimeStatistics">
             <summary>
             Customizable dynamic statistics displayed during live trading:
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.Benchmark">
             <summary>
             Gets the function used to define the benchmark. This function will return
             the value of the benchmark at a requested date/time
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.SecurityInitializer">
             <summary>
             Gets an instance that is to be used to initialize newly created securities.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IAlgorithm.TradeBuilder">
             <summary>
             Gets the Trade Builder to generate trades from executions
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.Initialize">
             <summary>
             Initialise the Algorithm and Prepare Required Data:
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.PostInitialize">
             <summary>
             Called by setup handlers after Initialize and allows the algorithm a chance to organize
             the data gather in the Initialize method
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.GetParameter(System.String)">
             <summary>
             Gets the parameter with the specified name. If a parameter
             with the specified name does not exist, null is returned
             </summary>
             <param name="name">The name of the parameter to get</param>
             <returns>The value of the specified parameter, or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             Sets the parameters from the dictionary
             </summary>
             <param name="parameters">Dictionary containing the parameter names to values</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)">
             <summary>
             Sets the brokerage model used to resolve transaction models, settlement models,
             and brokerage specified ordering behaviors.
             </summary>
             <param name="brokerageModel">The brokerage model used to emulate the real
             brokerage</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)">
             <summary>
             v3.0 Handler for all data types
             </summary>
             <param name="slice">The current slice of data</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)">
             <summary>
             Event fired each time the we add/remove securities from the data feed
             </summary>
             <param name="changes"></param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.Debug(System.String)">
             <summary>
             Send debug message
             </summary>
             <param name="message"></param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.Log(System.String)">
             <summary>
             Save entry to the Log
             </summary>
             <param name="message">String message</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.Error(System.String)">
             <summary>
             Send an error message for the algorithm
             </summary>
             <param name="message">String message</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List{QuantConnect.Orders.SubmitOrderRequest})">
             <summary>
             Margin call event handler. This method is called right before the margin call orders are placed in the market.
             </summary>
             <param name="requests">The orders to be executed to bring this algorithm within margin limits</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning">
             <summary>
             Margin call warning event handler. This method is called when Portoflio.MarginRemaining is under 5% of your Portfolio.TotalPortfolioValue
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnEndOfDay">
             <summary>
             Call this method at the end of each day of data.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)">
             <summary>
             Call this method at the end of each day of data.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm">
             <summary>
             Call this event at the end of the algorithm running.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)">
             <summary>
             EXPERTS ONLY:: [-!-Async Code-!-]
             New order event handler: on order status changes (filled, partially filled, cancelled etc).
             </summary>
             <param name="newEvent">Event information</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)">
             <summary>
             Option assignment event handler. On an option assignment event for short legs the resulting information is passed to this method.
             </summary>
             <param name="assignmentEvent">Option exercise event details containing details of the assignment</param>
             <remarks>This method can be called asynchronously and so should only be used by seasoned C# experts. Ensure you use proper locks on thread-unsafe objects</remarks>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)">
             <summary>
             Brokerage message event handler. This method is called for all types of brokerage messages.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect">
             <summary>
             Brokerage disconnected event handler. This method is called when the brokerage connection is lost.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect">
             <summary>
             Brokerage reconnected event handler. This method is called when the brokerage connection is restored after a disconnection.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)">
             <summary>
             Set the DateTime Frontier: This is the master time and is
             </summary>
             <param name="time"></param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(System.String)">
             <summary>
             Set the algorithm Id for this backtest or live run. This can be used to identify the order and equity records.
             </summary>
             <param name="algorithmId">unique 32 character identifier for backtest or live server</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetLocked">
             <summary>
             Set the algorithm as initialized and locked. No more cash or security changes.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.GetLocked">
             <summary>
             Gets whether or not this algorithm has been locked and fully initialized
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(System.Boolean)">
             <summary>
             Get the chart updates since the last request:
             </summary>
             <param name="clearChartData"></param>
             <returns>List of Chart Updates</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType,System.String,QuantConnect.Resolution,System.String,System.Boolean,System.Decimal,System.Boolean)">
             <summary>
             Set a required SecurityType-symbol and resolution for algorithm
             </summary>
             <param name="securityType">SecurityType Enum: Equity, Commodity, FOREX or Future</param>
             <param name="symbol">Symbol Representation of the MarketType, e.g. AAPL</param>
             <param name="resolution">Resolution of the MarketType required: MarketData, Second or Minute</param>
             <param name="market">The market the requested security belongs to, such as 'usa' or 'fxcm'</param>
             <param name="fillDataForward">If true, returns the last available data even if none in that timeslice.</param>
             <param name="leverage">leverage for this security</param>
             <param name="extendedMarketHours">ExtendedMarketHours send in data from 4am - 8pm, not used for FOREX</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)">
             <summary>
             Removes the security with the specified symbol. This will cancel all
             open orders and then liquidate any existing holdings
             </summary>
             <param name="symbol">The symbol of the security to be removed</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetCash(System.Decimal)">
             <summary>
             Set the starting capital for the strategy
             </summary>
             <param name="startingCash">decimal starting capital, default $100,000</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetCash(System.String,System.Decimal,System.Decimal)">
             <summary>
             Set the cash for the specified symbol
             </summary>
             <param name="symbol">The cash symbol to set</param>
             <param name="startingCash">Decimal cash value of portfolio</param>
             <param name="conversionRate">The current conversion rate for the</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)">
             <summary>
             Liquidate your portfolio holdings:
             </summary>
             <param name="symbolToLiquidate">Specific asset to liquidate, defaults to all.</param>
             <returns>list of order ids</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetLiveMode(System.Boolean)">
             <summary>
             Set live mode state of the algorithm run: Public setter for the algorithm property LiveMode.
             </summary>
             <param name="live">Bool live mode flag</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp">
             <summary>
             Sets <see cref="P:QuantConnect.Interfaces.IAlgorithm.IsWarmingUp" /> to false to indicate this algorithm has finished its warm up
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests">
             <summary>
             Gets the date/time warmup should begin
             </summary>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(System.Int32)">
             <summary>
             Set the maximum number of orders the algortihm is allowed to process.
             </summary>
             <param name="max">Maximum order count int</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary{QuantConnect.SecurityType,System.Collections.Generic.List{QuantConnect.TickType}})">
             <summary>
             Set the available <see cref="T:QuantConnect.TickType" /> supported by each <see cref="T:QuantConnect.SecurityType" /> in <see cref="T:QuantConnect.Securities.SecurityManager" />
             </summary>
             <param name="availableDataTypes">&gt;The different <see cref="T:QuantConnect.TickType" /> each <see cref="T:QuantConnect.Securities.Security" /> supports</param>
            </member>
        <member name="T:QuantConnect.Interfaces.IApi">
             <summary>
             API for QuantConnect.com
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.Initialize(System.Int32,System.String,System.String)">
             <summary>
             Initialize the control system
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.CreateProject(System.String,QuantConnect.Language)">
             <summary>
             Create a project with the specified name and language via QuantConnect.com API
             </summary>
             <param name="name">Project name</param>
             <param name="language">Programming language to use</param>
             <returns><see cref="T:QuantConnect.Api.ProjectResponse" /> that includes information about the newly created project</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadProject(System.Int32)">
             <summary>
             Read in a project from the QuantConnect.com API.
             </summary>
             <param name="projectId">Project id you own</param>
             <returns><see cref="T:QuantConnect.Api.ProjectResponse" /> about a specific project</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.AddProjectFile(System.Int32,System.String,System.String)">
             <summary>
             Add a file to a project
             </summary>
             <param name="projectId">The project to which the file should be added</param>
             <param name="name">The name of the new file</param>
             <param name="content">The content of the new file</param>
             <returns><see cref="T:QuantConnect.Api.ProjectFilesResponse" /> that includes information about the newly created file</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.UpdateProjectFileName(System.Int32,System.String,System.String)">
             <summary>
             Update the name of a file
             </summary>
             <param name="projectId">Project id to which the file belongs</param>
             <param name="oldFileName">The current name of the file</param>
             <param name="newFileName">The new name for the file</param>
             <returns><see cref="T:QuantConnect.Api.RestResponse" /> indicating success</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.UpdateProjectFileContent(System.Int32,System.String,System.String)">
             <summary>
             Update the contents of a file
             </summary>
             <param name="projectId">Project id to which the file belongs</param>
             <param name="fileName">The name of the file that should be updated</param>
             <param name="newFileContents">The new contents of the file</param>
             <returns><see cref="T:QuantConnect.Api.RestResponse" /> indicating success</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadProjectFile(System.Int32,System.String)">
             <summary>
             Read a file in a project
             </summary>
             <param name="projectId">Project id to which the file belongs</param>
             <param name="fileName">The name of the file</param>
             <returns><see cref="T:QuantConnect.Api.ProjectFilesResponse" /> that includes the file information</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadProjectFiles(System.Int32)">
             <summary>
             Read all files in a project
             </summary>
             <param name="projectId">Project id to which the file belongs</param>
             <returns><see cref="T:QuantConnect.Api.ProjectFilesResponse" /> that includes the information about all files in the project</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.DeleteProjectFile(System.Int32,System.String)">
             <summary>
             Delete a file in a project
             </summary>
             <param name="projectId">Project id to which the file belongs</param>
             <param name="name">The name of the file that should be deleted</param>
             <returns><see cref="T:QuantConnect.Api.ProjectFilesResponse" /> that includes the information about all files in the project</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.DeleteProject(System.Int32)">
             <summary>
             Delete a specific project owned by the user from QuantConnect.com
             </summary>
             <param name="projectId">Project id we own and wish to delete</param>
             <returns>RestResponse indicating success</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ListProjects">
             <summary>
             Read back a list of all projects on the account for a user.
             </summary>
             <returns>Container for list of projects</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.CreateCompile(System.Int32)">
             <summary>
             Create a new compile job request for this project id.
             </summary>
             <param name="projectId">Project id we wish to compile.</param>
             <returns>Compile object result</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadCompile(System.Int32,System.String)">
             <summary>
             Read a compile packet job result.
             </summary>
             <param name="projectId">Project id we sent for compile</param>
             <param name="compileId">Compile id return from the creation request</param>
             <returns>Compile object result</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.CreateBacktest(System.Int32,System.String,System.String)">
             <summary>
             Create a new backtest from a specified projectId and compileId
             </summary>
             <param name="projectId"></param>
             <param name="compileId"></param>
             <param name="backtestName"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadBacktest(System.Int32,System.String)">
             <summary>
             Read out the full result of a specific backtest
             </summary>
             <param name="projectId">Project id for the backtest we'd like to read</param>
             <param name="backtestId">Backtest id for the backtest we'd like to read</param>
             <returns>Backtest result object</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.UpdateBacktest(System.Int32,System.String,System.String,System.String)">
             <summary>
             Update the backtest name
             </summary>
             <param name="projectId">Project id to update</param>
             <param name="backtestId">Backtest id to update</param>
             <param name="backtestName">New backtest name to set</param>
             <param name="backtestNote">Note attached to the backtest</param>
             <returns>Rest response on success</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.DeleteBacktest(System.Int32,System.String)">
             <summary>
             Delete a backtest from the specified project and backtestId.
             </summary>
             <param name="projectId">Project for the backtest we want to delete</param>
             <param name="backtestId">Backtest id we want to delete</param>
             <returns>RestResponse on success</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ListBacktests(System.Int32)">
             <summary>
             Get a list of backtests for a specific project id
             </summary>
             <param name="projectId">Project id to search</param>
             <returns>BacktestList container for list of backtests</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadLiveLogs(System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
             <summary>
             Gets the logs of a specific live algorithm
             </summary>
             <param name="projectId">Project Id of the live running algorithm</param>
             <param name="algorithmId">Algorithm Id of the live running algorithm</param>
             <param name="startTime">No logs will be returned before this time. Should be in UTC</param>
             <param name="endTime">No logs will be returned after this time. Should be in UTC</param>
             <returns>List of strings that represent the logs of the algorithm</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadDataLink(QuantConnect.Symbol,QuantConnect.Resolution,System.DateTime)">
             <summary>
             Gets the link to the downloadable data.
             </summary>
             <param name="symbol">Symbol of security of which data will be requested.</param>
             <param name="resolution">Resolution of data requested.</param>
             <param name="date">Date of the data requested.</param>
             <returns>Link to the downloadable data.</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.DownloadData(QuantConnect.Symbol,QuantConnect.Resolution,System.DateTime)">
             <summary>
             Method to download and save the data purchased through QuantConnect
             </summary>
             <param name="symbol">Symbol of security of which data will be requested.</param>
             <param name="resolution">Resolution of data requested.</param>
             <param name="date">Date of the data requested.</param>
             <returns>A bool indicating whether the data was successfully downloaded or not.</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.CreateLiveAlgorithm(System.Int32,System.String,System.String,QuantConnect.API.BaseLiveAlgorithmSettings,System.String)">
             <summary>
             Create a new live algorithm for a logged in user.
             </summary>
             <param name="projectId">Id of the project on QuantConnect</param>
             <param name="compileId">Id of the compilation on QuantConnect</param>
             <param name="serverType">Type of server instance that will run the algorithm</param>
             <param name="baseLiveAlgorithmSettings">Brokerage specific <see cref="T:QuantConnect.API.BaseLiveAlgorithmSettings">BaseLiveAlgorithmSettings</see>.</param>
             <returns>Information regarding the new algorithm <see cref="T:QuantConnect.API.LiveAlgorithm" /></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ListLiveAlgorithms(System.Nullable{QuantConnect.AlgorithmStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
             <summary>
             Get a list of live running algorithms for a logged in user.
             </summary>
             <param name="status">Filter the statuses of the algorithms returned from the api</param>
             <param name="startTime">Earliest launched time of the algorithms returned by the Api</param>
             <param name="endTime">Latest launched time of the algorithms returned by the Api</param>
             <returns>List of live algorithm instances</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.ReadLiveAlgorithm(System.Int32,System.String)">
             <summary>
             Read out a live algorithm in the project id specified.
             </summary>
             <param name="projectId">Project id to read</param>
             <param name="deployId">Specific instance id to read</param>
             <returns>Live object with the results</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.LiquidateLiveAlgorithm(System.Int32)">
             <summary>
             Liquidate a live algorithm from the specified project.
             </summary>
             <param name="projectId">Project for the live instance we want to stop</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.StopLiveAlgorithm(System.Int32)">
             <summary>
             Stop a live algorithm from the specified project.
             </summary>
             <param name="projectId">Project for the live algo we want to delete</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.GetAlgorithmStatus(System.String,System.Int32)">
             <summary>
             Get the algorithm current status, active or cancelled from the user
             </summary>
             <param name="algorithmId"></param>
             <param name="userId">The user id of the algorithm</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.SetAlgorithmStatus(System.String,QuantConnect.AlgorithmStatus,System.String)">
             <summary>
             Set the algorithm status from the worker to update the UX e.g. if there was an error.
             </summary>
             <param name="algorithmId">Algorithm id we're setting.</param>
             <param name="status">Status enum of the current worker</param>
             <param name="message">Message for the algorithm status event</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.SendStatistics(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Double)">
             <summary>
             Send the statistics to storage for performance tracking.
             </summary>
             <param name="algorithmId">Identifier for algorithm</param>
             <param name="unrealized">Unrealized gainloss</param>
             <param name="fees">Total fees</param>
             <param name="netProfit">Net profi</param>
             <param name="holdings">Algorithm holdings</param>
             <param name="equity">Total equity</param>
             <param name="netReturn">Algorithm return</param>
             <param name="volume">Volume traded</param>
             <param name="trades">Total trades since inception</param>
             <param name="sharpe">Sharpe ratio since inception</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.MarketToday(System.DateTime,QuantConnect.Symbol)">
             <summary>
             Market Status Today: REST call.
             </summary>
             <param name="time">The date we need market hours for</param>
             <param name="symbol"></param>
             <returns>Market open hours.</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.StoreLogs(System.Collections.Generic.List{System.String},QuantConnect.Packets.AlgorithmNodePacket,QuantConnect.StoragePermissions,System.Boolean)">
             <summary>
             Store logs in the cloud
             </summary>
             <param name="logs">The list of individual logs to be stored</param>
             <param name="job">The <see cref="T:QuantConnect.Packets.AlgorithmNodePacket" /> used to generate the url to the logs</param>
             <param name="permissions">The <see cref="T:QuantConnect.StoragePermissions" /> for the file</param>
             <param name="async">Bool indicating whether the method to <see cref="M:QuantConnect.Interfaces.IApi.Store(System.String,System.String,QuantConnect.StoragePermissions,System.Boolean)" /> should be async</param>
             <returns>The url where the logs can be accessed</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.Store(System.String,System.String,QuantConnect.StoragePermissions,System.Boolean)">
             <summary>
             Store data in the cloud
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.SendUserEmail(System.String,System.String,System.String)">
             <summary>
             Send an email to the user associated with the specified algorithm id
             </summary>
             <param name="algorithmId">The algorithm id</param>
             <param name="subject">The email subject</param>
             <param name="body">The email message body</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.LiveSubscribe(System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Adds the specified symbols to the subscription
             </summary>
             <param name="symbols">The symbols to be added keyed by SecurityType</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.LiveUnsubscribe(System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Removes the specified symbols to the subscription
             </summary>
             <param name="symbols">The symbols to be removed keyed by SecurityType</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IApi.GetLiveData">
             <summary>
             Get next ticks if they have arrived from the server.
             </summary>
             <returns>Array of <see cref="T:QuantConnect.Data.BaseData" /></returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IBrokerage">
             <summary>
             Brokerage interface that defines the operations all brokerages must implement. The IBrokerage implementation
             must have a matching IBrokerageFactory implementation.
             </summary>
            </member>
        <member name="E:QuantConnect.Interfaces.IBrokerage.OrderStatusChanged">
             <summary>
             Event that fires each time an order is filled
             </summary>
            </member>
        <member name="E:QuantConnect.Interfaces.IBrokerage.OptionPositionAssigned">
             <summary>
             Event that fires each time a short option position is assigned
             </summary>
            </member>
        <member name="E:QuantConnect.Interfaces.IBrokerage.AccountChanged">
             <summary>
             Event that fires each time a user's brokerage account is changed
             </summary>
            </member>
        <member name="E:QuantConnect.Interfaces.IBrokerage.Message">
             <summary>
             Event that fires when a message is received from the brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerage.Name">
             <summary>
             Gets the name of the brokerage
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerage.IsConnected">
             <summary>
             Returns true if we're currently connected to the broker
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.GetOpenOrders">
             <summary>
             Gets all open orders on the account
             </summary>
             <returns>The open orders returned from IB</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.GetAccountHoldings">
             <summary>
             Gets all holdings for the account
             </summary>
             <returns>The current holdings from the account</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.GetCashBalance">
             <summary>
             Gets the current cash balance for each currency held in the brokerage account
             </summary>
             <returns>The current cash balance for each currency available for trading</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)">
             <summary>
             Places a new order and assigns a new broker ID to the order
             </summary>
             <param name="order">The order to be placed</param>
             <returns>True if the request for a new order has been placed, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)">
             <summary>
             Updates the order with the same id
             </summary>
             <param name="order">The new order information</param>
             <returns>True if the request was made for the order to be updated, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)">
             <summary>
             Cancels the order with the specified ID
             </summary>
             <param name="order">The order to cancel</param>
             <returns>True if the request was made for the order to be canceled, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.Connect">
             <summary>
             Connects the client to the broker's remote servers
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerage.Disconnect">
             <summary>
             Disconnects the client from the broker's remote servers
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerage.AccountInstantlyUpdated">
             <summary>
             Specifies whether the brokerage will instantly update account balances
             </summary>
            </member>
        <member name="T:QuantConnect.Interfaces.IBrokerageFactory">
             <summary>
             Defines factory types for brokerages. Every IBrokerage is expected to also implement an IBrokerageFactory.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerageFactory.BrokerageType">
             <summary>
             Gets the type of brokerage produced by this factory
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerageFactory.BrokerageData">
             <summary>
             Gets the brokerage data required to run the brokerage from configuration/disk
             </summary>
             <remarks>
             The implementation of this property will create the brokerage data dictionary required for
             running live jobs. See <see cref="M:QuantConnect.Interfaces.IJobQueueHandler.NextJob(System.String@)" />
             </remarks>
            </member>
        <member name="P:QuantConnect.Interfaces.IBrokerageFactory.BrokerageModel">
             <summary>
             Gets a brokerage model that can be used to model this brokerage's unique
             behaviors
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket,QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Creates a new IBrokerage instance
             </summary>
             <param name="job">The job packet to create the brokerage for</param>
             <param name="algorithm">The algorithm instance</param>
             <returns>A new brokerage instance</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm,QuantConnect.Packets.AlgorithmNodePacket,QuantConnect.Interfaces.IApi)">
             <summary>
             Gets a brokerage message handler
             </summary>
            </member>
        <member name="T:QuantConnect.Interfaces.IDataQueueUniverseProvider">
             <summary>
             This interface allows interested parties to lookup or enumerate the available symbols. Data source exposes it if this feature is available.
             Availability of a symbol doesn't imply that it is possible to trade it. This is a data source specific interface, not broker specific.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IDataQueueUniverseProvider.LookupSymbols(System.String,QuantConnect.SecurityType,System.String,System.String)">
             <summary>
             Method returns a collection of Symbols that are available at the data source. 
             </summary>
             <param name="lookupName">String representing the name to lookup</param>
             <param name="securityType">Expected security type of the returned symbols (if any)</param>
             <param name="securityCurrency">Expected security currency(if any)</param>
             <param name="securityExchange">Expected security exchange name(if any)</param>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Interfaces.ICommandQueueHandler">
             <summary>
             Represents a command queue for the algorithm. This is an entry point
             for external messages to act upon the running algorithm instance.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket,QuantConnect.Interfaces.IAlgorithm)">
             <summary>
             Initializes this command queue for the specified job
             </summary>
             <param name="job">The job that defines what queue to bind to</param>
             <param name="algorithm">The algorithm instance</param>
            </member>
        <member name="M:QuantConnect.Interfaces.ICommandQueueHandler.GetCommands">
             <summary>
             Gets the commands in the queue
             </summary>
             <returns>The next command in the queue, if present, null if no commands present</returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IDataQueueHandler">
             <summary>
             Task requestor interface with cloud system
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IDataQueueHandler.GetNextTicks">
             <summary>
             Get the next ticks from the live trading data queue
             </summary>
             <returns>IEnumerable list of ticks since the last update.</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IDataQueueHandler.Subscribe(QuantConnect.Packets.LiveNodePacket,System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Adds the specified symbols to the subscription
             </summary>
             <param name="job">Job we're subscribing for:</param>
             <param name="symbols">The symbols to be added keyed by SecurityType</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IDataQueueHandler.Unsubscribe(QuantConnect.Packets.LiveNodePacket,System.Collections.Generic.IEnumerable{QuantConnect.Symbol})">
             <summary>
             Removes the specified symbols to the subscription
             </summary>
             <param name="job">Job we're processing.</param>
             <param name="symbols">The symbols to be removed keyed by SecurityType</param>
            </member>
        <member name="T:QuantConnect.Interfaces.IFactorFileProvider">
             <summary>
             Provides instances of <see cref="T:QuantConnect.Data.Auxiliary.FactorFile" /> at run time
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IFactorFileProvider.Get(QuantConnect.Symbol)">
             <summary>
             Gets a <see cref="T:QuantConnect.Data.Auxiliary.FactorFile" /> instance for the specified symbol, or null if not found
             </summary>
             <param name="symbol">The security's symbol whose factor file we seek</param>
             <returns>The resolved factor file, or null if not found</returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IDataFileProvider">
             <summary>
             Fetches a remote file for a security.
             Must save the file to Globals.DataFolder.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IDataFileProvider.Fetch(QuantConnect.Symbol,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Gets and downloads the remote file
             </summary>
             <param name="symbol"><see cref="T:QuantConnect.Symbol" /> of the security</param>
             <param name="resolution"><see cref="T:QuantConnect.Resolution" /> of the data requested</param>
             <param name="date">DateTime of the data requested</param>
             <param name="tickType"><see cref="T:QuantConnect.TickType" /> of the security</param>
             <returns>Bool indicating whether the remote file was fetched correctly</returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IHistoryProvider">
             <summary>
             Provides historical data to an algorithm at runtime
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IHistoryProvider.DataPointCount">
             <summary>
             Gets the total number of data points emitted by this history provider
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket,QuantConnect.Interfaces.IMapFileProvider,QuantConnect.Interfaces.IFactorFileProvider,QuantConnect.Interfaces.IDataFileProvider,System.Action{System.Int32})">
             <summary>
             Initializes this history provider to work for the specified job
             </summary>
             <param name="job">The job</param>
             <param name="mapFileProvider">Provider used to get a map file resolver to handle equity mapping</param>
             <param name="factorFileProvider">Provider used to get factor files to handle equity price scaling</param>
             <param name="dataFileProvider">Provider used to get data when it is not present on disk</param>
             <param name="statusUpdate">Function used to send status updates</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable{QuantConnect.Data.HistoryRequest},NodaTime.DateTimeZone)">
             <summary>
             Gets the history for the requested securities
             </summary>
             <param name="requests">The historical data requests</param>
             <param name="sliceTimeZone">The time zone used when time stamping the slice instances</param>
             <returns>An enumerable of the slices of data covering the span specified in each request</returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IJobQueueHandler">
             <summary>
             Task requestor interface with cloud system
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IJobQueueHandler.Initialize">
             <summary>
             Initialize the internal state
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IJobQueueHandler.NextJob(System.String@)">
             <summary>
             Request the next task to run through the engine:
             </summary>
             <returns>Algorithm job to process</returns>
            </member>
        <member name="M:QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)">
             <summary>
             Signal task complete
             </summary>
             <param name="job">Work to do.</param>
            </member>
        <member name="T:QuantConnect.Interfaces.IMapFileProvider">
             <summary>
             Provides instances of <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> at run time
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IMapFileProvider.Get(System.String)">
             <summary>
             Gets a <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> representing all the map
             files for the specified market
             </summary>
             <param name="market">The equity market, for example, 'usa'</param>
             <returns>A <see cref="T:QuantConnect.Data.Auxiliary.MapFileResolver" /> containing all map files for the specified market</returns>
            </member>
        <member name="T:QuantConnect.Interfaces.IMessagingHandler">
             <summary>
             Messaging System Plugin Interface. 
             Provides a common messaging pattern between desktop and cloud implementations of QuantConnect.
             </summary>
            </member>
        <member name="P:QuantConnect.Interfaces.IMessagingHandler.HasSubscribers">
             <summary>
             Gets or sets whether this messaging handler has any current subscribers.
             When set to false, messages won't be sent.
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IMessagingHandler.Initialize">
             <summary>
             Initialize the Messaging System Plugin. 
             </summary>
            </member>
        <member name="M:QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)">
             <summary>
             Set the user communication channel
             </summary>
             <param name="job"></param>
            </member>
        <member name="M:QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)">
             <summary>
             Send any message with a base type of Packet.
             </summary>
             <param name="packet">Packet of data to send via the messaging system plugin</param>
            </member>
        <member name="M:QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)">
             <summary>
             Send any notification with a base type of Notification.
             </summary>
             <param name="notification">The notification to be sent.</param>
            </member>
        <member name="T:QuantConnect.LocalTimeKeeper">
             <summary>
             Represents the current local time. This object is created via the <see cref="T:QuantConnect.TimeKeeper" /> to
             manage conversions to local time.
             </summary>
            </member>
        <member name="E:QuantConnect.LocalTimeKeeper.TimeUpdated">
             <summary>
             Event fired each time <see cref="M:QuantConnect.LocalTimeKeeper.UpdateTime(System.DateTime)" /> is called
             </summary>
            </member>
        <member name="P:QuantConnect.LocalTimeKeeper.TimeZone">
             <summary>
             Gets the time zone of this <see cref="T:QuantConnect.LocalTimeKeeper" />
             </summary>
            </member>
        <member name="P:QuantConnect.LocalTimeKeeper.LocalTime">
             <summary>
             Gets the current time in terms of the <see cref="T:System.TimeZone" />
             </summary>
            </member>
        <member name="M:QuantConnect.LocalTimeKeeper.#ctor(System.DateTime,NodaTime.DateTimeZone)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.LocalTimeKeeper" /> class
             </summary>
             <param name="utcDateTime">The current time in UTC</param>
             <param name="timeZone">The time zone</param>
            </member>
        <member name="M:QuantConnect.LocalTimeKeeper.UpdateTime(System.DateTime)">
             <summary>
             Updates the current time of this time keeper
             </summary>
             <param name="utcDateTime">The current time in UTC</param>
            </member>
        <member name="T:QuantConnect.Market">
             <summary>
             Markets Collection: Soon to be expanded to a collection of items specifying the market hour, timezones and country codes.
             </summary>
            </member>
        <member name="F:QuantConnect.Market.USA">
             <summary>
             USA Market 
             </summary>
            </member>
        <member name="F:QuantConnect.Market.Oanda">
             <summary>
             Oanda Market
             </summary>
            </member>
        <member name="F:QuantConnect.Market.FXCM">
             <summary>
             FXCM Market Hours
             </summary>
            </member>
        <member name="F:QuantConnect.Market.Dukascopy">
             <summary>
             Dukascopy Market
             </summary>
            </member>
        <member name="F:QuantConnect.Market.Bitfinex">
             <summary>
             Bitfinex market
             </summary>
            </member>
        <member name="F:QuantConnect.Market.Globex">
             <summary>
             CME Globex
             </summary>
            </member>
        <member name="F:QuantConnect.Market.NYMEX">
             <summary>
             NYMEX
             </summary>
            </member>
        <member name="F:QuantConnect.Market.CBOT">
             <summary>
             CBOT
             </summary>
            </member>
        <member name="F:QuantConnect.Market.ICE">
             <summary>
             ICE
             </summary>
            </member>
        <member name="F:QuantConnect.Market.CBOE">
             <summary>
             CBOE
             </summary>
            </member>
        <member name="M:QuantConnect.Market.Add(System.String,System.Int32)">
             <summary>
             Adds the specified market to the map of available markets with the specified identifier.
             </summary>
             <param name="market">The market string to add</param>
             <param name="identifier">The identifier for the market, this value must be positive and less than 1000</param>
            </member>
        <member name="M:QuantConnect.Market.Encode(System.String)">
             <summary>
             Gets the market code for the specified market. Returns <c>null</c> if the market is not found
             </summary>
             <param name="market">The market to check for (case sensitive)</param>
             <returns>The internal code used for the market. Corresponds to the value used when calling <see cref="M:QuantConnect.Market.Add(System.String,System.Int32)" /></returns>
            </member>
        <member name="M:QuantConnect.Market.Decode(System.Int32)">
             <summary>
             Gets the market string for the specified market code.
             </summary>
             <param name="code">The market code to be decoded</param>
             <returns>The string representation of the market, or null if not found</returns>
            </member>
        <member name="T:QuantConnect.Notifications.Notification">
             <summary>
             Local/desktop implementation of messaging system for Lean Engine.
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.Notification.Send">
             <summary>
             Method for sending implementations of notification object types.
             </summary>
             <remarks>SMS, Email and Web are all handled by the QC Messaging Handler. To implement your own notification type implement it here.</remarks>
            </member>
        <member name="T:QuantConnect.Notifications.NotificationWeb">
             <summary>
             Web Notification Class
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationWeb.Address">
             <summary>
             Send a notification message to this web address
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationWeb.Data">
             <summary>
             Object data to send.
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationWeb.#ctor(System.String,System.Object)">
             <summary>
             Constructor for sending a notification SMS to a specified phone number
             </summary>
             <param name="address"></param>
             <param name="data"></param>
            </member>
        <member name="T:QuantConnect.Notifications.NotificationSms">
             <summary>
             Sms Notification Class
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationSms.PhoneNumber">
             <summary>
             Send a notification message to this phone number
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationSms.Message">
             <summary>
             Message to send. Limited to 160 characters
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationSms.#ctor(System.String,System.String)">
             <summary>
             Constructor for sending a notification SMS to a specified phone number
             </summary>
             <param name="number"></param>
             <param name="message"></param>
            </member>
        <member name="T:QuantConnect.Notifications.NotificationEmail">
             <summary>
             Email notification data.
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationEmail.Address">
             <summary>
             Send to address:
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationEmail.Subject">
             <summary>
             Email subject
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationEmail.Message">
             <summary>
             Message to send.
             </summary>
            </member>
        <member name="F:QuantConnect.Notifications.NotificationEmail.Data">
             <summary>
             Email Data
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationEmail.#ctor(System.String,System.String,System.String,System.String)">
             <summary>
             Default constructor for sending an email notification
             </summary>
             <param name="address">Address to send to</param>
             <param name="subject">Subject of the email</param>
             <param name="message">Message body of the email</param>
             <param name="data">Data to attach to the email</param>
            </member>
        <member name="T:QuantConnect.Notifications.NotificationManager">
             <summary>
             Local/desktop implementation of messaging system for Lean Engine.
             </summary>
            </member>
        <member name="P:QuantConnect.Notifications.NotificationManager.Messages">
             <summary>
             Public access to the messages
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationManager.#ctor(System.Boolean)">
             <summary>
             Initialize the messaging system
             </summary>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationManager.Allow">
             <summary>
             Maintain a rate limit of the notification messages per hour send of roughly 20 messages per hour.
             </summary>
             <returns>True on under rate limit and acceptable to send message</returns>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationManager.Email(System.String,System.String,System.String,System.String)">
             <summary>
             Send an email to the address specified for live trading notifications.
             </summary>
             <param name="subject">Subject of the email</param>
             <param name="message">Message body, up to 10kb</param>
             <param name="data">Data attachment (optional)</param>
             <param name="address">Email address to send to</param>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationManager.Sms(System.String,System.String)">
             <summary>
             Send an SMS to the phone number specified
             </summary>
             <param name="phoneNumber">Phone number to send to</param>
             <param name="message">Message to send</param>
            </member>
        <member name="M:QuantConnect.Notifications.NotificationManager.Web(System.String,System.Object)">
             <summary>
             Place REST POST call to the specified address with the specified DATA.
             </summary>
             <param name="address">Endpoint address</param>
             <param name="data">Data to send in body JSON encoded (optional)</param>
            </member>
        <member name="T:QuantConnect.Orders.CancelOrderRequest">
             <summary>
             Defines a request to cancel an order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.CancelOrderRequest.OrderRequestType">
             <summary>
             Gets <see cref="F:QuantConnect.Orders.OrderRequestType.Cancel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.CancelOrderRequest.#ctor(System.DateTime,System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.CancelOrderRequest" /> class
             </summary>
             <param name="time">The time this cancelation was requested</param>
             <param name="orderId">The order id to be canceled</param>
             <param name="tag">A new tag for the order</param>
            </member>
        <member name="M:QuantConnect.Orders.CancelOrderRequest.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Orders.Fees.ConstantFeeModel">
             <summary>
             Provides an order fee model that always returns the same order fee.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fees.ConstantFeeModel.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.Fees.ConstantFeeModel" /> class with the specified <paramref name="fee" />
             </summary>
             <param name="fee">The constant order fee used by the model</param>
            </member>
        <member name="M:QuantConnect.Orders.Fees.ConstantFeeModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns the constant fee for the model
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="T:QuantConnect.Orders.Fees.InteractiveBrokersFeeModel">
             <summary>
             Provides the default implementation of <see cref="T:QuantConnect.Orders.Fees.IFeeModel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.Fills.ImmediateFillModel" />
             </summary>
             <param name="monthlyForexTradeAmountInUSDollars">Monthly FX dollar volume traded</param>
             <param name="monthlyOptionsTradeAmountInContracts">Monthly options contracts traded</param>
            </member>
        <member name="M:QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the order fee associated with the specified order. This returns the cost
             of the transaction in the account currency
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.ProcessForexRateSchedule(System.Decimal,System.Decimal@,System.Decimal@)">
             <summary>
             Determines which tier an account falls into based on the monthly trading volume
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.ProcessOptionsRateSchedule(System.Decimal,System.Func{System.Decimal,System.Decimal,System.Decimal}@)">
             <summary>
             Determines which tier an account falls into based on the monthly trading volume
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.Fees.FxcmFeeModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Orders.Fees.IFeeModel" /> that models FXCM order fees
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fees.FxcmFeeModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Get the fee for this order
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="T:QuantConnect.Orders.Fees.IFeeModel">
             <summary>
             Represents a model the simulates order fees
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the order fee associated with the specified order. This returns the cost
             of the transaction in the account currency
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="T:QuantConnect.Orders.Fills.ImmediateFillModel">
             <summary>
             Represents the default fill model used to simulate order fills
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)">
             <summary>
             Default market fill model for the base security class. Fills at the last traded price.
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)">
             <summary>
             Default stop fill model implementation in base class security. (Stop Market Order Type)
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopLimitOrder)">
             <summary>
             Default stop limit fill model implementation in base class security. (Stop Limit Order Type)
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
             <remarks>
                 There is no good way to model limit orders with OHLC because we never know whether the market has 
                 gapped past our fill price. We have to make the assumption of a fluid, high volume market.
             
                 Stop limit orders we also can't be sure of the order of the H - L values for the limit fill. The assumption
                 was made the limit fill will be done with closing price of the bar after the stop has been triggered..
             </remarks>
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)">
             <summary>
             Default limit order fill model in the base security class.
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)" />
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnOpenOrder)">
             <summary>
             Market on Open Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnCloseOrder)">
             <summary>
             Market on Close Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.GetPrices(QuantConnect.Securities.Security,QuantConnect.Orders.OrderDirection)">
             <summary>
             Get the minimum and maximum price for this security in the last bar:
             </summary>
             <param name="asset">Security asset we're checking</param>
             <param name="direction">The order direction, decides whether to pick bid or ask</param>
            </member>
        <member name="M:QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)">
             <summary>
             Determines if the exchange is open using the current time of the asset
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.Fills.IFillModel">
             <summary>
             Represents a model that simulates order fill events
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)">
             <summary>
             Model the slippage on a market order: fixed percentage of order price
             </summary>
             <param name="asset">Asset we're trading this order</param>
             <param name="order">Order to update</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)">
             <summary>
             Stop Market Fill Model. Return an order event with the fill details.
             </summary>
             <param name="asset">Asset we're trading this order</param>
             <param name="order">Stop Order to Check, return filled if true</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopLimitOrder)">
             <summary>
             Stop Limit Fill Model. Return an order event with the fill details.
             </summary>
             <param name="asset">Asset we're trading this order</param>
             <param name="order">Stop Limit Order to Check, return filled if true</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)">
             <summary>
             Limit Fill Model. Return an order event with the fill details.
             </summary>
             <param name="asset">Stock Object to use to help model limit fill</param>
             <param name="order">Order to fill. Alter the values directly if filled.</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnOpenOrder)">
             <summary>
             Market on Open Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnCloseOrder)">
             <summary>
             Market on Close Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="T:QuantConnect.Orders.MarketOnCloseOrder">
             <summary>
             Market on close order type - submits a market order on exchange close
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.MarketOnCloseOrder.Type">
             <summary>
             MarketOnClose Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnCloseOrder.#ctor">
             <summary>
             Intiializes a new instance of the <see cref="T:QuantConnect.Orders.MarketOnCloseOrder" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnCloseOrder.#ctor(QuantConnect.Symbol,System.Int32,System.DateTime,System.String)">
             <summary>
             Intiializes a new instance of the <see cref="T:QuantConnect.Orders.MarketOnCloseOrder" /> class.
             </summary>
             <param name="symbol">The security's symbol being ordered</param>
             <param name="quantity">The number of units to order</param>
             <param name="time">The current time</param>
             <param name="tag">A user defined tag for the order</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnCloseOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.MarketOnOpenOrder">
             <summary>
             Market on Open order type, submits a market order when the exchange opens
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.MarketOnOpenOrder.Type">
             <summary>
             MarketOnOpen Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnOpenOrder.#ctor">
             <summary>
             Intiializes a new instance of the <see cref="T:QuantConnect.Orders.MarketOnOpenOrder" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnOpenOrder.#ctor(QuantConnect.Symbol,System.Int32,System.DateTime,System.String)">
             <summary>
             Intiializes a new instance of the <see cref="T:QuantConnect.Orders.MarketOnOpenOrder" /> class.
             </summary>
             <param name="symbol">The security's symbol being ordered</param>
             <param name="quantity">The number of units to order</param>
             <param name="time">The current time</param>
             <param name="tag">A user defined tag for the order</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnOpenOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOnOpenOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.OptionExerciseOrder">
             <summary>
             Option exercise order type definition
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OptionExerciseOrder.#ctor">
             <summary>
             Added a default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OptionExerciseOrder.#ctor(QuantConnect.Symbol,System.Int32,System.DateTime,System.String)">
             <summary>
             New option exercise order constructor. We model option exercising as an underlying asset long/short order with strike equal to limit price.
             This means that by exercising a call we get into long asset position, by exercising a put we get into short asset position.
             </summary>
             <param name="symbol">Option symbol we're seeking to exercise</param>
             <param name="quantity">Quantity of the option we're seeking to exercise. Must be a positive value.</param>
             <param name="time">Time the order was placed</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="P:QuantConnect.Orders.OptionExerciseOrder.Type">
             <summary>
             Option Exercise Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OptionExerciseOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in option contracts quoted in options's currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.OptionExerciseOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.OptionExercise.DefaultExerciseModel">
             <summary>
             Represents the default option exercise model (physical, cash settlement)
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OptionExercise.DefaultExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option,QuantConnect.Orders.OptionExerciseOrder)">
             <summary>
             Default option exercise model for the basic equity/index option security class. 
             </summary>
             <param name="option">Option we're trading this order</param>
             <param name="order">Order to update</param>
            </member>
        <member name="M:QuantConnect.Orders.OptionExercise.DefaultExerciseModel.IsExchangeOpen(QuantConnect.Securities.Security)">
             <summary>
             Determines if the exchange is open using the current time of the asset
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OptionExercise.IOptionExerciseModel">
             <summary>
             Represents a model that simulates option exercise and lapse events
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option,QuantConnect.Orders.OptionExerciseOrder)">
             <summary>
             Model the option exercise 
             </summary>
             <param name="option">Option we're trading this order</param>
             <param name="order">Order to update</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="T:QuantConnect.Orders.OrderField">
             <summary>
             Specifies an order field that does not apply to all order types
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderField.LimitPrice">
             <summary>
             The limit price for a <see cref="T:QuantConnect.Orders.LimitOrder" /> or <see cref="T:QuantConnect.Orders.StopLimitOrder" />
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderField.StopPrice">
             <summary>
             The stop price for a <see cref="T:QuantConnect.Orders.StopMarketOrder" /> or a <see cref="T:QuantConnect.Orders.StopLimitOrder" />
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderJsonConverter">
             <summary>
             Provides an implementation of <see cref="T:Newtonsoft.Json.JsonConverter" /> that can deserialize Orders
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderJsonConverter.CanWrite">
             <summary>
             Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON.
             </summary>
             <value>
             <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter" /> can write JSON; otherwise, <c>false</c>.
             </value>
            </member>
        <member name="M:QuantConnect.Orders.OrderJsonConverter.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderJsonConverter.CreateOrderFromJObject(Newtonsoft.Json.Linq.JObject)">
             <summary>
             Create an order from a simple JObject
             </summary>
             <param name="jObject"></param>
             <returns>Order Object</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderJsonConverter.CreateOrder(QuantConnect.Orders.OrderType,Newtonsoft.Json.Linq.JObject)">
             <summary>
             Creates an order of the correct type
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderRequest">
             <summary>
             Represents a request to submit, update, or cancel an order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.OrderRequestType">
             <summary>
             Gets the type of this order request
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.Status">
             <summary>
             Gets the status of this request
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.Time">
             <summary>
             Gets the time the request was created
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.OrderId">
             <summary>
             Gets the order id the request acts on
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.Tag">
             <summary>
             Gets a tag for this request
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderRequest.Response">
             <summary>
             Gets the response for this request. If this request was never processed then this
             will equal <see cref="F:QuantConnect.Orders.OrderResponse.Unprocessed" />. This value is never equal to null.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderRequest.#ctor(System.DateTime,System.Int32,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.OrderRequest" /> class
             </summary>
             <param name="time">The time this request was created</param>
             <param name="orderId">The order id this request acts on, specify zero for <see cref="T:QuantConnect.Orders.SubmitOrderRequest" /></param>
             <param name="tag">A custom tag for the request</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderRequest.SetResponse(QuantConnect.Orders.OrderResponse,QuantConnect.Orders.OrderRequestStatus)">
             <summary>
             Sets the <see cref="P:QuantConnect.Orders.OrderRequest.Response" /> for this request
             </summary>
             <param name="response">The response to this request</param>
             <param name="status">The current status of this request</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderRequest.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Orders.OrderRequestStatus">
             <summary>
             Specifies the status of a request
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestStatus.Unprocessed">
             <summary>
             This is an unprocessed request
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestStatus.Processing">
             <summary>
             This request is partially processed
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestStatus.Processed">
             <summary>
             This request has been completely processed
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestStatus.Error">
             <summary>
             This request encountered an error
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderRequestType">
             <summary>
             Specifies the type of <see cref="T:QuantConnect.Orders.OrderRequest" />
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestType.Submit">
             <summary>
             The request is a <see cref="T:QuantConnect.Orders.SubmitOrderRequest" />
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestType.Update">
             <summary>
             The request is a <see cref="T:QuantConnect.Orders.UpdateOrderRequest" />
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderRequestType.Cancel">
             <summary>
             The request is a <see cref="T:QuantConnect.Orders.CancelOrderRequest" />
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderResponse">
             <summary>
             Represents a response to an <see cref="T:QuantConnect.Orders.OrderRequest" />. See <see cref="P:QuantConnect.Orders.OrderRequest.Response" /> property for
             a specific request's response value
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.OrderId">
             <summary>
             Gets the order id
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.ErrorMessage">
             <summary>
             Gets the error message if the <see cref="P:QuantConnect.Orders.OrderResponse.ErrorCode" /> does not equal <see cref="F:QuantConnect.Orders.OrderResponseErrorCode.None" />, otherwise
             gets <see cref="F:System.String.Empty" />
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.ErrorCode">
             <summary>
             Gets the error code for this response.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.IsSuccess">
             <summary>
             Gets true if this response represents a successful request, false otherwise
             If this is an unprocessed response, IsSuccess will return false.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.IsError">
             <summary>
             Gets true if this response represents an error, false otherwise
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderResponse.IsProcessed">
             <summary>
             Gets true if this response has been processed, false otherwise
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.#ctor(System.Int32,QuantConnect.Orders.OrderResponseErrorCode,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.OrderResponse" /> class
             </summary>
             <param name="orderId">The order id</param>
             <param name="errorCode">The error code of the response, specify <see cref="F:QuantConnect.Orders.OrderResponseErrorCode.None" /> for no error</param>
             <param name="errorMessage">The error message, applies only if the <paramref name="errorCode" /> does not equal <see cref="F:QuantConnect.Orders.OrderResponseErrorCode.None" /></param>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponse.Unprocessed">
             <summary>
             Gets an <see cref="T:QuantConnect.Orders.OrderResponse" /> for a request that has not yet been processed
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)">
             <summary>
             Helper method to create a successful response from a request
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest,QuantConnect.Orders.OrderResponseErrorCode,System.String)">
             <summary>
             Helper method to create an error response from a request
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.InvalidStatus(QuantConnect.Orders.OrderRequest,QuantConnect.Orders.Order)">
             <summary>
             Helper method to create an error response due to an invalid order status
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.UnableToFindOrder(QuantConnect.Orders.OrderRequest)">
             <summary>
             Helper method to create an error response due to a bad order id
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)">
             <summary>
             Helper method to create an error response due to a zero order quantity
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderResponse.WarmingUp(QuantConnect.Orders.OrderRequest)">
             <summary>
             Helper method to create an error response due to algorithm still in warmup mode
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderResponseErrorCode">
             <summary>
             Error detail code
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.None">
             <summary>
             No error
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ProcessingError">
             <summary>
             Unknown error
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.OrderAlreadyExists">
             <summary>
             Cannot submit because order already exists
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.InsufficientBuyingPower">
             <summary>
             Not enough money to to submit order 
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageModelRefusedToSubmitOrder">
             <summary>
             Internal logic invalidated submit order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageFailedToSubmitOrder">
             <summary>
             Brokerage submit error
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageFailedToUpdateOrder">
             <summary>
             Brokerage update error
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageHandlerRefusedToUpdateOrder">
             <summary>
             Internal logic invalidated update order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageFailedToCancelOrder">
             <summary>
             Brokerage cancel error
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.InvalidOrderStatus">
             <summary>
             Only pending orders can be canceled
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.UnableToFindOrder">
             <summary>
             Missing order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.OrderQuantityZero">
             <summary>
             Cannot submit or update orders with zero quantity
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.UnsupportedRequestType">
             <summary>
             This type of request is unsupported
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.PreOrderChecksError">
             <summary>
             Unknown error during pre order request validation
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.MissingSecurity">
             <summary>
             Security is missing. Probably did not subscribe.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ExchangeNotOpen">
             <summary>
             Some order types require open exchange
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.SecurityPriceZero">
             <summary>
             Zero security price is probably due to bad data
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired">
             <summary>
             Need both currencies in cashbook to trade a pair
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ForexConversionRateZero">
             <summary>
             Need conversion rate to account currency
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.SecurityHasNoData">
             <summary>
             Should not attempt trading without at least one data point
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ExceededMaximumOrders">
             <summary>
             Transaction manager's cache is full
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.MarketOnCloseOrderTooLate">
             <summary>
             Need 11 minute buffer before exchange close
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.InvalidRequest">
             <summary>
             Request is invalid or null
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.RequestCanceled">
             <summary>
             Request was canceled by user
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.AlgorithmWarmingUp">
             <summary>
             All orders are invalidated while algorithm is warming up
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.BrokerageModelRefusedToUpdateOrder">
             <summary>
             Internal logic invalidated update order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.QuoteCurrencyRequired">
             <summary>
             Need quote currency in cashbook to trade
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.ConversionRateZero">
             <summary>
             Need conversion rate to account currency
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.NonTradableSecurity">
             <summary>
             The order's symbol references a non-tradable security
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderResponseErrorCode.NonExercisableSecurity">
             <summary>
             The order's symbol references a non-exercisable security
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderExtensions">
             <summary>
             Provides extension methods for the <see cref="T:QuantConnect.Orders.Order" /> class and for the <see cref="T:QuantConnect.Orders.OrderStatus" /> enumeration
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderExtensions.IsClosed(QuantConnect.Orders.OrderStatus)">
             <summary>
             Determines if the specified status is in a closed state.
             </summary>
             <param name="status">The status to check</param>
             <returns>True if the status is <see cref="F:QuantConnect.Orders.OrderStatus.Filled" />, <see cref="F:QuantConnect.Orders.OrderStatus.Canceled" />, or <see cref="F:QuantConnect.Orders.OrderStatus.Invalid" /></returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderExtensions.IsOpen(QuantConnect.Orders.OrderStatus)">
             <summary>
             Determines if the specified status is in an open state.
             </summary>
             <param name="status">The status to check</param>
             <returns>True if the status is not <see cref="F:QuantConnect.Orders.OrderStatus.Filled" />, <see cref="F:QuantConnect.Orders.OrderStatus.Canceled" />, or <see cref="F:QuantConnect.Orders.OrderStatus.Invalid" /></returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderExtensions.IsFill(QuantConnect.Orders.OrderStatus)">
             <summary>
             Determines if the specified status is a fill, that is, <see cref="F:QuantConnect.Orders.OrderStatus.Filled" />
             order <see cref="F:QuantConnect.Orders.OrderStatus.PartiallyFilled" />
             </summary>
             <param name="status">The status to check</param>
             <returns>True if the status is <see cref="F:QuantConnect.Orders.OrderStatus.Filled" /> or <see cref="F:QuantConnect.Orders.OrderStatus.PartiallyFilled" />, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderExtensions.IsLimitOrder(QuantConnect.Orders.OrderType)">
             <summary>
             Determines whether or not the specified order is a limit order
             </summary>
             <param name="orderType">The order to check</param>
             <returns>True if the order is a limit order, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderExtensions.IsStopOrder(QuantConnect.Orders.OrderType)">
             <summary>
             Determines whether or not the specified order is a stop order
             </summary>
             <param name="orderType">The order to check</param>
             <returns>True if the order is a stop order, false otherwise</returns>
            </member>
        <member name="T:QuantConnect.Orders.OrderTicket">
             <summary>
             Provides a single reference to an order for the algorithm to maintain. As the order gets
             updated this ticket will also get updated
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.OrderId">
             <summary>
             Gets the order id of this ticket
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.Status">
             <summary>
             Gets the current status of this order ticket
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.Symbol">
             <summary>
             Gets the symbol being ordered
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.SecurityType">
             <summary>
             Gets the <see cref="T:QuantConnect.Symbol" />'s <see cref="T:QuantConnect.SecurityType" />
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.Quantity">
             <summary>
             Gets the number of units ordered
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.AverageFillPrice">
             <summary>
             Gets the average fill price for this ticket. If no fills have been processed
             then this will return a value of zero.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.QuantityFilled">
             <summary>
             Gets the total qantity filled for this ticket. If no fills have been processed
             then this will return a value of zero.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.Time">
             <summary>
             Gets the time this order was last updated
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.OrderType">
             <summary>
             Gets the type of order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.Tag">
             <summary>
             Gets the order's current tag
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.SubmitRequest">
             <summary>
             Gets the <see cref="T:QuantConnect.Orders.SubmitOrderRequest" /> that initiated this order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.UpdateRequests">
             <summary>
             Gets a list of <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /> containing an item for each
             <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /> that was sent for this order id
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.CancelRequest">
             <summary>
             Gets the <see cref="T:QuantConnect.Orders.CancelOrderRequest" /> if this order was canceled. If this order
             was not canceled, this will return null
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.OrderEvents">
             <summary>
             Gets a list of all order events for this ticket
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderTicket.OrderClosed">
             <summary>
             Gets a wait handle that can be used to wait until this order has filled
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.#ctor(QuantConnect.Securities.SecurityTransactionManager,QuantConnect.Orders.SubmitOrderRequest)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.OrderTicket" /> class
             </summary>
             <param name="transactionManager">The transaction manager used for submitting updates and cancels for this ticket</param>
             <param name="submitRequest">The order request that initiated this order ticket</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)">
             <summary>
             Gets the specified field from the ticket
             </summary>
             <param name="field">The order field to get</param>
             <returns>The value of the field</returns>
             <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)">
             <summary>
             Submits an <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /> with the <see cref="T:QuantConnect.Securities.SecurityTransactionManager" /> to update
             the ticket with data specified in <paramref name="fields" />
             </summary>
             <param name="fields">Defines what properties of the order should be updated</param>
             <returns>The <see cref="T:QuantConnect.Orders.OrderResponse" /> from updating the order</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.Cancel(System.String)">
             <summary>
             Submits a new request to cancel this order
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.GetMostRecentOrderResponse">
             <summary>
             Gets the most recent <see cref="T:QuantConnect.Orders.OrderResponse" /> for this ticket
             </summary>
             <returns>The most recent <see cref="T:QuantConnect.Orders.OrderResponse" /> for this ticket</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.GetMostRecentOrderRequest">
             <summary>
             Gets the most recent <see cref="T:QuantConnect.Orders.OrderRequest" /> for this ticket
             </summary>
             <returns>The most recent <see cref="T:QuantConnect.Orders.OrderRequest" /> for this ticket</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.AddOrderEvent(QuantConnect.Orders.OrderEvent)">
             <summary>
             Adds an order event to this ticket
             </summary>
             <param name="orderEvent">The order event to be added</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.SetOrder(QuantConnect.Orders.Order)">
             <summary>
             Updates the internal order object with the current state
             </summary>
             <param name="order">The order</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.AddUpdateRequest(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Adds a new <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /> to this ticket.
             </summary>
             <param name="request">The recently processed <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /></param>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.TrySetCancelRequest(QuantConnect.Orders.CancelOrderRequest)">
             <summary>
             Sets the <see cref="T:QuantConnect.Orders.CancelOrderRequest" /> for this ticket. This can only be performed once.
             </summary>
             <remarks>
             This method is thread safe.
             </remarks>
             <param name="request">The <see cref="T:QuantConnect.Orders.CancelOrderRequest" /> that canceled this ticket.</param>
             <returns>False if the the CancelRequest has already been set, true if this call set it</returns>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.InvalidCancelOrderId(QuantConnect.Securities.SecurityTransactionManager,QuantConnect.Orders.CancelOrderRequest)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Orders.OrderTicket" /> that represents trying to cancel an order for which no ticket exists
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.InvalidUpdateOrderId(QuantConnect.Securities.SecurityTransactionManager,QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Orders.OrderTicket" /> tht represents trying to update an order for which no ticket exists
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager,QuantConnect.Orders.SubmitOrderRequest,QuantConnect.Orders.OrderResponse)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Orders.OrderTicket" /> that represents trying to submit a new order that had errors embodied in the <paramref name="response" />
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager,QuantConnect.Orders.SubmitOrderRequest)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Orders.OrderTicket" /> that is invalidated because the algorithm was in the middle of warm up still
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.OrderTicket.op_Implicit(QuantConnect.Orders.OrderTicket)~System.Int32">
             <summary>
             This is provided for API backward compatibility and will resolve to the order ID, except during
             an error, where it will return the integer value of the <see cref="T:QuantConnect.Orders.OrderResponseErrorCode" /> from
             the most recent response
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.Slippage.ConstantSlippageModel">
             <summary>
             Represents a slippage model that uses a constant percentage of slip
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Slippage.ConstantSlippageModel.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.Slippage.ConstantSlippageModel" /> class
             </summary>
             <param name="slippagePercent">The slippage percent for each order. Percent is ranged 0 to 1.</param>
            </member>
        <member name="M:QuantConnect.Orders.Slippage.ConstantSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Slippage Model. Return a decimal cash slippage approximation on the order.
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.Slippage.ISlippageModel">
             <summary>
             Represents a model that simulates market order slippage
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Slippage.ISlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Slippage Model. Return a decimal cash slippage approximation on the order.
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.StopLimitOrder">
             <summary>
             Stop Market Order Type Definition
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.StopLimitOrder.StopPrice">
             <summary>
             Stop price for this stop market order.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.StopLimitOrder.StopTriggered">
             <summary>
             Signal showing the "StopLimitOrder" has been converted into a Limit Order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.StopLimitOrder.LimitPrice">
             <summary>
             Limit price for the stop limit order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.StopLimitOrder.Type">
             <summary>
             StopLimit Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.#ctor">
             <summary>
             Default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.#ctor(QuantConnect.Symbol,System.Int32,System.Decimal,System.Decimal,System.DateTime,System.String)">
             <summary>
             New Stop Market Order constructor - 
             </summary>
             <param name="symbol">Symbol asset we're seeking to trade</param>
             <param name="quantity">Quantity of the asset we're seeking to trade</param>
             <param name="limitPrice">Maximum price to fill the order</param>
             <param name="time">Time the order was placed</param>
             <param name="stopPrice">Price the order should be filled at if a limit order</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Modifies the state of this order to match the update request
             </summary>
             <param name="request">The request to update this order object</param>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.StopLimitOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.StopMarketOrder">
             <summary>
             Stop Market Order Type Definition
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.StopMarketOrder.StopPrice">
             <summary>
             Stop price for this stop market order.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.StopMarketOrder.Type">
             <summary>
             StopMarket Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.#ctor">
             <summary>
             Default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.#ctor(QuantConnect.Symbol,System.Int32,System.Decimal,System.DateTime,System.String)">
             <summary>
             New Stop Market Order constructor - 
             </summary>
             <param name="symbol">Symbol asset we're seeking to trade</param>
             <param name="quantity">Quantity of the asset we're seeking to trade</param>
             <param name="time">Time the order was placed</param>
             <param name="stopPrice">Price the order should be filled at if a limit order</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Modifies the state of this order to match the update request
             </summary>
             <param name="request">The request to update this order object</param>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.StopMarketOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.LimitOrder">
             <summary>
             Limit order type definition
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.LimitOrder.LimitPrice">
             <summary>
             Limit price for this order.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.LimitOrder.Type">
             <summary>
             Limit Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.#ctor">
             <summary>
             Added a default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.#ctor(QuantConnect.Symbol,System.Int32,System.Decimal,System.DateTime,System.String)">
             <summary>
             New limit order constructor
             </summary>
             <param name="symbol">Symbol asset we're seeking to trade</param>
             <param name="quantity">Quantity of the asset we're seeking to trade</param>
             <param name="time">Time the order was placed</param>
             <param name="limitPrice">Price the order should be filled at if a limit order</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Modifies the state of this order to match the update request
             </summary>
             <param name="request">The request to update this order object</param>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.LimitOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.MarketOrder">
             <summary>
             Market order type definition
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOrder.#ctor">
             <summary>
             Added a default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.MarketOrder.Type">
             <summary>
             Market Order Type
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.MarketOrder.#ctor(QuantConnect.Symbol,System.Int32,System.DateTime,System.String)">
             <summary>
             New market order constructor
             </summary>
             <param name="symbol">Symbol asset we're seeking to trade</param>
             <param name="quantity">Quantity of the asset we're seeking to trade</param>
             <param name="time">Time the order was placed</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOrder.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.MarketOrder.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="T:QuantConnect.Orders.OrderType">
             <summary>
             Type of the order: market, limit or stop
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.Market">
             <summary>
             Market Order Type
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.Limit">
             <summary>
             Limit Order Type
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.StopMarket">
             <summary>
             Stop Market Order Type - Fill at market price when break target price
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.StopLimit">
             <summary>
             Stop limit order type - trigger fill once pass the stop price; but limit fill to limit price.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.MarketOnOpen">
             <summary>
             Market on open type - executed on exchange open
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.MarketOnClose">
             <summary>
             Market on close type - executed on exchange close
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderType.OptionExercise">
             <summary>
             Option Exercise Order Type
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderDuration">
             <summary>
             Order duration in market
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderDuration.GTC">
             <summary>
             Order good until its filled.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderDuration.Custom">
             <summary>
             Order valid until a custom set date time value.
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderDirection">
             <summary>
             Direction of the order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderDirection.Buy">
             <summary>
             Buy Order 
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderDirection.Sell">
             <summary>
             Sell Order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderDirection.Hold">
             <summary>
             Default Value - No Order Direction
             </summary>
             <remarks>
             Unfortunately this does not have a value of zero because
             there are backtests saved that reference the values in this order
             </remarks>
            </member>
        <member name="T:QuantConnect.Orders.OrderStatus">
             <summary>
             Fill status of the order class.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.New">
             <summary>
             New order pre-submission to the order processor.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.Submitted">
             <summary>
             Order submitted to the market
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.PartiallyFilled">
             <summary>
             Partially filled, In Market Order.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.Filled">
             <summary>
             Completed, Filled, In Market Order.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.Canceled">
             <summary>
             Order cancelled before it was filled
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.None">
             <summary>
             No Order State Yet
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.Invalid">
             <summary>
             Order invalidated before it hit the market (e.g. insufficient capital)..
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderStatus.CancelPending">
             <summary>
             Order waiting for confirmation of cancellation
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.OrderError">
             <summary>
             Specifies the possible error states during presubmission checks
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.CanNotUpdateFilledOrder">
             <summary>
             Order has already been filled and cannot be modified
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.GeneralError">
             <summary>
             General error in order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.TimestampError">
             <summary>
             Order timestamp error. Order appears to be executing in the future
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.MaxOrdersExceeded">
             <summary>
             Exceeded maximum allowed orders for one analysis period
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.InsufficientCapital">
             <summary>
             Insufficient capital to execute order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.MarketClosed">
             <summary>
             Attempting market order outside of market hours
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.NoData">
             <summary>
             There is no data yet for this security - please wait for data (market order price not available yet)
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.ZeroQuantity">
             <summary>
             Order quantity must not be zero
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderError.None">
             <summary>
             The order is OK
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.SubmitOrderRequest">
             <summary>
             Defines a request to submit a new order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.OrderRequestType">
             <summary>
             Gets <see cref="F:QuantConnect.Orders.OrderRequestType.Submit" />
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.SecurityType">
             <summary>
             Gets the security type of the symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.Symbol">
             <summary>
             Gets the symbol to be traded
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.OrderType">
             <summary>
             Gets the order type od the order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.Quantity">
             <summary>
             Gets the quantity of the order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.LimitPrice">
             <summary>
             Gets the limit price of the order, zero if not a limit order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.SubmitOrderRequest.StopPrice">
             <summary>
             Gets the stop price of the order, zero if not a stop order
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.SubmitOrderRequest.#ctor(QuantConnect.Orders.OrderType,QuantConnect.SecurityType,QuantConnect.Symbol,System.Int32,System.Decimal,System.Decimal,System.DateTime,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.SubmitOrderRequest" /> class.
             The <see cref="P:QuantConnect.Orders.OrderRequest.OrderId" /> will default to <see cref="F:QuantConnect.Orders.OrderResponseErrorCode.UnableToFindOrder" />
             </summary>
             <param name="orderType">The order type to be submitted</param>
             <param name="securityType">The symbol's <see cref="T:QuantConnect.SecurityType" /></param>
             <param name="symbol">The symbol to be traded</param>
             <param name="quantity">The number of units to be ordered</param>
             <param name="stopPrice">The stop price for stop orders, non-stop orers this value is ignored</param>
             <param name="limitPrice">The limit price for limit orders, non-limit orders this value is ignored</param>
             <param name="time">The time this request was created</param>
             <param name="tag">A custom tag for this request</param>
            </member>
        <member name="M:QuantConnect.Orders.SubmitOrderRequest.SetOrderId(System.Int32)">
             <summary>
             Sets the <see cref="P:QuantConnect.Orders.OrderRequest.OrderId" />
             </summary>
             <param name="orderId">The order id of the generated order</param>
            </member>
        <member name="M:QuantConnect.Orders.SubmitOrderRequest.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Orders.UpdateOrderFields">
             <summary>
             Specifies the data in an order to be updated
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderFields.Quantity">
             <summary>
             Specify to update the quantity of the order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderFields.LimitPrice">
             <summary>
             Specify to update the limit price of the order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderFields.StopPrice">
             <summary>
             Specify to update the stop price of the order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderFields.Tag">
             <summary>
             Specify to update the order's tag
             </summary>
            </member>
        <member name="T:QuantConnect.Orders.UpdateOrderRequest">
             <summary>
             Defines a request to update an order's values
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderRequest.OrderRequestType">
             <summary>
             Gets <see cref="F:QuantConnect.Orders.OrderRequestType.Update" />
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderRequest.Quantity">
             <summary>
             Gets the new quantity of the order, null to not change the quantity
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderRequest.LimitPrice">
             <summary>
             Gets the new limit price of the order, null to not change the limit price
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.UpdateOrderRequest.StopPrice">
             <summary>
             Gets the new stop price of the order, null to not change the stop price
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.UpdateOrderRequest.#ctor(System.DateTime,System.Int32,QuantConnect.Orders.UpdateOrderFields)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Orders.UpdateOrderRequest" /> class
             </summary>
             <param name="time">The time the request was submitted</param>
             <param name="orderId">The order id to be updated</param>
             <param name="fields">The fields defining what should be updated</param>
            </member>
        <member name="M:QuantConnect.Orders.UpdateOrderRequest.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Packets.CommandResultPacket">
             <summary>
             Contains data held as the result of executing a command
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.CommandResultPacket.CommandName">
             <summary>
             Gets or sets the command that produced this packet
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.CommandResultPacket.Success">
             <summary>
             Gets or sets whether or not the
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.CommandResultPacket.#ctor(QuantConnect.Commands.ICommand,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.CommandResultPacket" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.Controls">
             <summary>
             Specifies values used to control algorithm limits
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.MinuteLimit">
             <summary>
             The maximum number of minute symbols
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.SecondLimit">
             <summary>
             The maximum number of second symbols
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.TickLimit">
             <summary>
             The maximum number of tick symbol
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.RamAllocation">
             <summary>
             Ram allocation for this backtest in MB
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.BacktestLogLimit">
             <summary>
             The user backtesting log limit
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.DailyLogLimit">
             <summary>
             The daily log limit of a user
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Controls.RemainingLogAllowance">
             <summary>
             The remaining log allowance for a user
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.Controls.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Packets.Controls" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.HandledErrorPacket">
             <summary>
             Algorithm runtime error packet from the lean engine. 
             This is a managed error which stops the algorithm execution.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HandledErrorPacket.Message">
             <summary>
             Runtime error message from the exception
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HandledErrorPacket.AlgorithmId">
             <summary>
             Algorithm id which generated this runtime error
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HandledErrorPacket.StackTrace">
             <summary>
             Error stack trace information string passed through from the Lean exception
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.HandledErrorPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.HandledErrorPacket.#ctor(System.String,System.String,System.String)">
             <summary>
             Create a new handled error packet
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.HistoryPacket">
             <summary>
             Packet for history jobs
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryPacket.QueueName">
             <summary>
             The queue where the data should be sent
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryPacket.Requests">
             <summary>
             The individual requests to be processed
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.HistoryPacket.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.HistoryPacket" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.HistoryRequest">
             <summary>
             Specifies request parameters for a single historical request.
             A HistoryPacket is made of multiple requests for data. These
             are used to request data during live mode from a data server
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.StartTimeUtc">
             <summary>
             The start time to request data in UTC
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.EndTimeUtc">
             <summary>
             The end time to request data in UTC
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.Symbol">
             <summary>
             The symbol to request data for
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.SecurityType">
             <summary>
             The symbol's security type
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.Resolution">
             <summary>
             The requested resolution
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryRequest.Market">
             <summary>
             The market the symbol belongs to
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.HistoryResultType">
             <summary>
             Specifies various types of history results
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryResultType.File">
             <summary>
             The requested file data
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryResultType.Status">
             <summary>
             The request's status
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryResultType.Completed">
             <summary>
             The request is completed
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.HistoryResultType.Error">
             <summary>
             The request had an error
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.HistoryResult">
             <summary>
             Provides a container for results from history requests. This contains
             the file path relative to the /Data folder where the data can be written
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.HistoryResult.Type">
             <summary>
             Gets the type of history result
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.HistoryResult.#ctor(QuantConnect.Packets.HistoryResultType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.HistoryResult" /> class
             </summary>
             <param name="type">The type of history result</param>
            </member>
        <member name="T:QuantConnect.Packets.FileHistoryResult">
             <summary>
             Defines requested file data for a history request
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.FileHistoryResult.Filepath">
             <summary>
             The relative file path where the data should be written
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.FileHistoryResult.File">
             <summary>
             The file's contents, this is a zipped csv file
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.FileHistoryResult.#ctor">
             <summary>
             Default constructor for serializers
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.FileHistoryResult.#ctor(System.String,System.Byte[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.HistoryResult" /> class
             </summary>
             <param name="filepath">The relative file path where the file should be written, rooted in /Data, so for example ./forex/fxcm/daily/eurusd.zip</param>
             <param name="file">The zipped csv file content in bytes</param>
            </member>
        <member name="T:QuantConnect.Packets.CompletedHistoryResult">
             <summary>
             Specifies the completed message from a history result
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.CompletedHistoryResult.#ctor">
             <summary>
             Initializes a new instance of <see cref="T:QuantConnect.Packets.CompletedHistoryResult" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.ErrorHistoryResult">
             <summary>
             Specfies an error message in a history result
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.ErrorHistoryResult.Message">
             <summary>
             Gets the error that was encountered
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.ErrorHistoryResult.#ctor">
             <summary>
             Default constructor for serializers
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.ErrorHistoryResult.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.ErrorHistoryResult" /> class
             </summary>
             <param name="message">The error message</param>
            </member>
        <member name="T:QuantConnect.Packets.StatusHistoryResult">
             <summary>
             Specifies the progress of a request
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.StatusHistoryResult.Progress">
             <summary>
             Gets the progress of the request
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.StatusHistoryResult.#ctor">
             <summary>
             Default constructor for serializers
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.StatusHistoryResult.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Packets.StatusHistoryResult" /> class
             </summary>
             <param name="progress">The progress, from 0 to 100</param>
            </member>
        <member name="T:QuantConnect.Parameters.ParameterAttribute">
             <summary>
             Specifies a field or property is a parameter that can be set
             from an <see cref="F:QuantConnect.Packets.AlgorithmNodePacket.Parameters" /> dictionary
             </summary>
            </member>
        <member name="F:QuantConnect.Parameters.ParameterAttribute.BindingFlags">
             <summary>
             Specifies the binding flags used by this implementation to resolve parameter attributes
             </summary>
            </member>
        <member name="P:QuantConnect.Parameters.ParameterAttribute.Name">
             <summary>
             Gets the name of this parameter
             </summary>
            </member>
        <member name="M:QuantConnect.Parameters.ParameterAttribute.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Parameters.ParameterAttribute" /> class
             </summary>
             <param name="name">The name of the parameter. If null is specified
             then the field or property name will be used</param>
            </member>
        <member name="M:QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
             <summary>
             Uses reflections to inspect the instance for any parameter attributes.
             If a value is found in the parameters dictionary, it is set.
             </summary>
             <param name="parameters">The parameters dictionary</param>
             <param name="instance">The instance to set parameters on</param>
            </member>
        <member name="M:QuantConnect.Parameters.ParameterAttribute.GetParametersFromAssembly(System.Reflection.Assembly)">
             <summary>
             Resolves all parameter attributes from the specified compiled assembly path
             </summary>
             <param name="assembly">The assembly to inspect</param>
             <returns>Parameters dictionary keyed by parameter name with a value of the member type</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.CompositeTimeRule">
             <summary>
             Combines multiple time rules into a single rule that emits for each rule
             </summary>
            </member>
        <member name="F:QuantConnect.Scheduling.CompositeTimeRule.Rules">
             <summary>
             Gets the individual rules for this composite rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.CompositeTimeRule.#ctor(QuantConnect.Scheduling.ITimeRule[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.CompositeTimeRule" /> class
             </summary>
             <param name="timeRules">The time rules to compose</param>
            </member>
        <member name="M:QuantConnect.Scheduling.CompositeTimeRule.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Scheduling.ITimeRule})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.CompositeTimeRule" /> class
             </summary>
             <param name="timeRules">The time rules to compose</param>
            </member>
        <member name="P:QuantConnect.Scheduling.CompositeTimeRule.Name">
             <summary>
             Gets a name for this rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.CompositeTimeRule.CreateUtcEventTimes(System.Collections.Generic.IEnumerable{System.DateTime})">
             <summary>
             Creates the event times for the specified dates in UTC
             </summary>
             <param name="dates">The dates to apply times to</param>
             <returns>An enumerable of date times that is the result
             of applying this rule to the specified dates</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.DateRules">
             <summary>
             Helper class used to provide better syntax when defining date rules
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.#ctor(QuantConnect.Securities.SecurityManager)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.DateRules" /> helper class
             </summary>
             <param name="securities">The security manager</param>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.On(System.Int32,System.Int32,System.Int32)">
             <summary>
             Specifies an event should fire only on the specified day
             </summary>
             <param name="year">The year</param>
             <param name="month">The month</param>
             <param name="day">The day</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.On(System.DateTime[])">
             <summary>
             Specifies an event should fire only on the specified days
             </summary>
             <param name="dates">The dates the event should fire</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.Every(System.DayOfWeek[])">
             <summary>
             Specifies an event should fire on each of the specified days of week
             </summary>
             <param name="days">The days the event shouls fire</param>
             <returns>A date rule that fires on every specified day of week</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.EveryDay">
             <summary>
             Specifies an event should fire every day
             </summary>
             <returns>A date rule that fires every day</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.EveryDay(QuantConnect.Symbol)">
             <summary>
             Specifies an event should fire every day the symbol is trading
             </summary>
             <param name="symbol">The symbol whose exchange is used to determine tradeable dates</param>
             <returns>A date rule that fires every day the specified symbol trades</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.MonthStart">
             <summary>
             Specifies an event should fire on the first of each month
             </summary>
             <returns>A date rule that fires on the first of each month</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.MonthStart(QuantConnect.Symbol)">
             <summary>
             Specifies an event should fire on the first tradeable date for the specified
             symbol of each month
             </summary>
             <param name="symbol">The symbol whose exchange is used to determine the first 
             tradeable date of the month</param>
             <returns>A date rule that fires on the first tradeable date for the specified security each month</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.DateRules.GetSecurity(QuantConnect.Symbol)">
             <summary>
             Gets the security with the specified symbol, or throws an exception if the symbol is not found
             </summary>
             <param name="symbol">The security's symbol to search for</param>
             <returns>The security object matching the given symbol</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.FluentScheduledEventBuilder">
             <summary>
             Provides a builder class to allow for fluent syntax when constructing new events
             </summary>
             <remarks>
             This builder follows the following steps for event creation:
             
             1. Specify an event name (optional)
             2. Specify an IDateRule
             3. Specify an ITimeRule
                 a. repeat 3. to define extra time rules (optional)
             4. Specify additional where clause (optional)
             5. Register event via call to Run
             </remarks>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.#ctor(QuantConnect.Scheduling.ScheduleManager,QuantConnect.Securities.SecurityManager,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.FluentScheduledEventBuilder" /> class
             </summary>
             <param name="schedule">The schedule to send created events to</param>
             <param name="securities">The algorithm's security manager</param>
             <param name="name">A specific name for this event</param>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#Every(System.DayOfWeek[])">
             <summary>
             Creates events on each of the specified day of week
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#EveryDay">
             <summary>
             Creates events on every day of the year
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#EveryDay(QuantConnect.Symbol)">
             <summary>
             Creates events on every trading day of the year for the symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#MonthStart">
             <summary>
             Creates events on the first day of the month
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#MonthStart(QuantConnect.Symbol)">
             <summary>
             Creates events on the first trading day of the month
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingDateSpecifier#Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingTimeSpecifier#At(System.TimeSpan)">
             <summary>
             Creates events that fire at the specific time of day in the algorithm's time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingTimeSpecifier#AfterMarketOpen(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Creates events that fire a specified number of minutes after market open
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingTimeSpecifier#BeforeMarketClose(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Creates events that fire a specified numer of minutes before market close
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingTimeSpecifier#Every(System.TimeSpan)">
             <summary>
             Creates events that fire on a period define by the specified interval
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingTimeSpecifier#Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingRunnable#Run(System.Action)">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingRunnable#Run(System.Action{System.DateTime})">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingRunnable#Run(System.Action{System.String,System.DateTime})">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingRunnable#Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FluentScheduledEventBuilder.QuantConnect#Scheduling#IFluentSchedulingRunnable#DuringMarketHours(QuantConnect.Symbol,System.Boolean)">
             <summary>
             Filters the event times to only include times where the symbol's market is considered open
             </summary>
            </member>
        <member name="T:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier">
             <summary>
             Specifies the date rule component of a scheduled event
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.On(System.Int32,System.Int32,System.Int32)">
             <summary>
             Creates events only on the specified date
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.On(System.DateTime[])">
             <summary>
             Creates events only on the specified dates
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.Every(System.DayOfWeek[])">
             <summary>
             Creates events on each of the specified day of week
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.EveryDay">
             <summary>
             Creates events on every day of the year
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.EveryDay(QuantConnect.Symbol)">
             <summary>
             Creates events on every trading day of the year for the symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.MonthStart">
             <summary>
             Creates events on the first day of the month
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.MonthStart(QuantConnect.Symbol)">
             <summary>
             Creates events on the first trading day of the month
             </summary>
            </member>
        <member name="T:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier">
             <summary>
             Specifies the time rule component of a scheduled event
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.At(System.Int32,System.Int32,System.Int32)">
             <summary>
             Creates events that fire at the specified time of day in the specified time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.At(System.Int32,System.Int32,NodaTime.DateTimeZone)">
             <summary>
             Creates events that fire at the specified time of day in the specified time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.At(System.Int32,System.Int32,System.Int32,NodaTime.DateTimeZone)">
             <summary>
             Creates events that fire at the specified time of day in the specified time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.At(System.TimeSpan,NodaTime.DateTimeZone)">
             <summary>
             Creates events that fire at the specified time of day in the specified time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.At(System.TimeSpan)">
             <summary>
             Creates events that fire at the specific time of day in the algorithm's time zone
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.Every(System.TimeSpan)">
             <summary>
             Creates events that fire on a period define by the specified interval
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.AfterMarketOpen(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Creates events that fire a specified number of minutes after market open
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.BeforeMarketClose(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Creates events that fire a specified numer of minutes before market close
             </summary>
            </member>
        <member name="T:QuantConnect.Scheduling.IFluentSchedulingRunnable">
             <summary>
             Specifies the callback component of a scheduled event, as well as final filters
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingRunnable.Where(System.Func{System.DateTime,System.Boolean})">
             <summary>
             Filters the event times using the predicate
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingRunnable.DuringMarketHours(QuantConnect.Symbol,System.Boolean)">
             <summary>
             Filters the event times to only include times where the symbol's market is considered open
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingRunnable.Run(System.Action)">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingRunnable.Run(System.Action{System.DateTime})">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IFluentSchedulingRunnable.Run(System.Action{System.String,System.DateTime})">
             <summary>
             Register the defined event with the callback
             </summary>
            </member>
        <member name="T:QuantConnect.Scheduling.FuncDateRule">
             <summary>
             Uses a function to define an enumerable of dates over a requested start/end period
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FuncDateRule.#ctor(System.String,System.Func{System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.DateTime}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.FuncDateRule" /> class
             </summary>
             <param name="name">The name of this rule</param>
             <param name="getDatesFuntion">The time applicator function</param>
            </member>
        <member name="P:QuantConnect.Scheduling.FuncDateRule.Name">
             <summary>
             Gets a name for this rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FuncDateRule.GetDates(System.DateTime,System.DateTime)">
             <summary>
             Gets the dates produced by this date rule between the specified times
             </summary>
             <param name="start">The start of the interval to produce dates for</param>
             <param name="end">The end of the interval to produce dates for</param>
             <returns>All dates in the interval matching this date rule</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.IDateRule">
             <summary>
             Specifies dates that events should be fired, used in conjunction with the <see cref="T:QuantConnect.Scheduling.ITimeRule" />
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.IDateRule.Name">
             <summary>
             Gets a name for this rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IDateRule.GetDates(System.DateTime,System.DateTime)">
             <summary>
             Gets the dates produced by this date rule between the specified times
             </summary>
             <param name="start">The start of the interval to produce dates for</param>
             <param name="end">The end of the interval to produce dates for</param>
             <returns>All dates in the interval matching this date rule</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.IEventSchedule">
             <summary>
             Provides the ability to add/remove scheduled events from the real time handler
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.IEventSchedule.Add(QuantConnect.Scheduling.ScheduledEvent)">
             <summary>
             Adds the specified event to the schedule using the <see cref="P:QuantConnect.Scheduling.ScheduledEvent.Name" /> as a key.
             </summary>
             <param name="scheduledEvent">The event to be scheduled, including the date/times the event fires and the callback</param>
            </member>
        <member name="M:QuantConnect.Scheduling.IEventSchedule.Remove(System.String)">
             <summary>
             Removes the event with the specified name from the schedule
             </summary>
             <param name="name">The name of the event to be removed</param>
            </member>
        <member name="T:QuantConnect.Scheduling.ITimeRule">
             <summary>
             Specifies times times on dates for events, used in conjunction with <see cref="T:QuantConnect.Scheduling.IDateRule" />
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ITimeRule.Name">
             <summary>
             Gets a name for this rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.ITimeRule.CreateUtcEventTimes(System.Collections.Generic.IEnumerable{System.DateTime})">
             <summary>
             Creates the event times for the specified dates in UTC
             </summary>
             <param name="dates">The dates to apply times to</param>
             <returns>An enumerable of date times that is the result
             of applying this rule to the specified dates</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.ScheduledEvent">
             <summary>
             Real time self scheduling event
             </summary>
            </member>
        <member name="F:QuantConnect.Scheduling.ScheduledEvent.SecurityEndOfDayDelta">
             <summary>
             Gets the default time before market close end of trading day events will fire
             </summary>
            </member>
        <member name="F:QuantConnect.Scheduling.ScheduledEvent.AlgorithmEndOfDayDelta">
             <summary>
             Gets the default time before midnight end of day events will fire
             </summary>
            </member>
        <member name="E:QuantConnect.Scheduling.ScheduledEvent.EventFired">
             <summary>
             Event that fires each time this scheduled event happens
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduledEvent.Enabled">
             <summary>
             Gets or sets whether this event is enabled
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduledEvent.IsLoggingEnabled">
             <summary>
             Gets or sets whether this event will log each time it fires
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduledEvent.NextEventUtcTime">
             <summary>
             Gets the next time this scheduled event will fire in UTC
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduledEvent.Name">
             <summary>
             Gets an identifier for this event
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.#ctor(System.String,System.DateTime,System.Action{System.String,System.DateTime})">
             <summary>
             Initalizes a new instance of the <see cref="T:QuantConnect.Scheduling.ScheduledEvent" /> class
             </summary>
             <param name="name">An identifier for this event</param>
             <param name="eventUtcTime">The date time the event should fire</param>
             <param name="callback">Delegate to be called when the event time passes</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.#ctor(System.String,System.Collections.Generic.IEnumerable{System.DateTime},System.Action{System.String,System.DateTime})">
             <summary>
             Initalizes a new instance of the <see cref="T:QuantConnect.Scheduling.ScheduledEvent" /> class
             </summary>
             <param name="name">An identifier for this event</param>
             <param name="orderedEventUtcTimes">An enumerable that emits event times</param>
             <param name="callback">Delegate to be called each time an event passes</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.#ctor(System.String,System.Collections.Generic.IEnumerator{System.DateTime},System.Action{System.String,System.DateTime})">
             <summary>
             Initalizes a new instance of the <see cref="T:QuantConnect.Scheduling.ScheduledEvent" /> class
             </summary>
             <param name="name">An identifier for this event</param>
             <param name="orderedEventUtcTimes">An enumerator that emits event times</param>
             <param name="callback">Delegate to be called each time an event passes</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.Scan(System.DateTime)">
             <summary>
             Scans this event and fires the callback if an event happened
             </summary>
             <param name="utcTime">The current time in UTC</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.SkipEventsUntil(System.DateTime)">
             <summary>
             Fast forwards this schedule to the specified time without invoking the events
             </summary>
             <param name="utcTime">Frontier time</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.System#IDisposable#Dispose">
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
             </summary>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduledEvent.OnEventFired(System.DateTime)">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Scheduling.ScheduledEvent.EventFired" /> event
             </summary>
             <param name="triggerTime">The event's time in UTC</param>
            </member>
        <member name="T:QuantConnect.Scheduling.ScheduleManager">
             <summary>
             Provides access to the real time handler's event scheduling feature
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduleManager.DateRules">
             <summary>
             Gets the date rules helper object to make specifying dates for events easier
             </summary>
            </member>
        <member name="P:QuantConnect.Scheduling.ScheduleManager.TimeRules">
             <summary>
             Gets the time rules helper object to make specifying times for events easier
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.#ctor(QuantConnect.Securities.SecurityManager,NodaTime.DateTimeZone)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.ScheduleManager" /> class
             </summary>
             <param name="securities">Securities manager containing the algorithm's securities</param>
             <param name="timeZone">The algorithm's time zone</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)">
             <summary>
             Sets the <see cref="T:QuantConnect.Scheduling.IEventSchedule" /> implementation
             </summary>
             <param name="eventSchedule">The event schedule implementation to be used. This is the IRealTimeHandler</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.Add(QuantConnect.Scheduling.ScheduledEvent)">
             <summary>
             Adds the specified event to the schedule using the <see cref="P:QuantConnect.Scheduling.ScheduledEvent.Name" /> as a key.
             </summary>
             <param name="scheduledEvent">The event to be scheduled, including the date/times the event fires and the callback</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.Remove(System.String)">
             <summary>
             Removes the event with the specified name from the schedule
             </summary>
             <param name="name">The name of the event to be removed</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.On(QuantConnect.Scheduling.IDateRule,QuantConnect.Scheduling.ITimeRule,System.Action)">
             <summary>
             Schedules the callback to run using the specified date and time rules
             </summary>
             <param name="dateRule">Specifies what dates the event should run</param>
             <param name="timeRule">Specifies the times on those dates the event should run</param>
             <param name="callback">The callback to be invoked</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.On(QuantConnect.Scheduling.IDateRule,QuantConnect.Scheduling.ITimeRule,System.Action{System.String,System.DateTime})">
             <summary>
             Schedules the callback to run using the specified date and time rules
             </summary>
             <param name="dateRule">Specifies what dates the event should run</param>
             <param name="timeRule">Specifies the times on those dates the event should run</param>
             <param name="callback">The callback to be invoked</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.On(System.String,QuantConnect.Scheduling.IDateRule,QuantConnect.Scheduling.ITimeRule,System.Action)">
             <summary>
             Schedules the callback to run using the specified date and time rules
             </summary>
             <param name="name">The event's unique name</param>
             <param name="dateRule">Specifies what dates the event should run</param>
             <param name="timeRule">Specifies the times on those dates the event should run</param>
             <param name="callback">The callback to be invoked</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.On(System.String,QuantConnect.Scheduling.IDateRule,QuantConnect.Scheduling.ITimeRule,System.Action{System.String,System.DateTime})">
             <summary>
             Schedules the callback to run using the specified date and time rules
             </summary>
             <param name="name">The event's unique name</param>
             <param name="dateRule">Specifies what dates the event should run</param>
             <param name="timeRule">Specifies the times on those dates the event should run</param>
             <param name="callback">The callback to be invoked</param>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.Event">
             <summary>
             Entry point for the fluent scheduled event builder
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.ScheduleManager.Event(System.String)">
             <summary>
             Entry point for the fluent scheduled event builder
             </summary>
            </member>
        <member name="T:QuantConnect.Scheduling.FuncTimeRule">
             <summary>
             Uses a function to define a time rule as a projection of date times to date times
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FuncTimeRule.#ctor(System.String,System.Func{System.Collections.Generic.IEnumerable{System.DateTime},System.Collections.Generic.IEnumerable{System.DateTime}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.FuncTimeRule" /> class
             </summary>
             <param name="name">The name of the time rule</param>
             <param name="createUtcEventTimesFunction">Function used to transform dates into event date times</param>
            </member>
        <member name="P:QuantConnect.Scheduling.FuncTimeRule.Name">
             <summary>
             Gets a name for this rule
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.FuncTimeRule.CreateUtcEventTimes(System.Collections.Generic.IEnumerable{System.DateTime})">
             <summary>
             Creates the event times for the specified dates in UTC
             </summary>
             <param name="dates">The dates to apply times to</param>
             <returns>An enumerable of date times that is the result
             of applying this rule to the specified dates</returns>
            </member>
        <member name="T:QuantConnect.Scheduling.TimeRules">
             <summary>
             Helper class used to provide better syntax when defining time rules
             </summary>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.#ctor(QuantConnect.Securities.SecurityManager,NodaTime.DateTimeZone)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Scheduling.TimeRules" /> helper class
             </summary>
             <param name="securities">The security manager</param>
             <param name="timeZone">The algorithm's default time zone</param>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(NodaTime.DateTimeZone)">
             <summary>
             Sets the default time zone
             </summary>
             <param name="timeZone">The time zone to use for helper methods that can't resolve a time zone</param>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.At(System.TimeSpan)">
             <summary>
             Specifies an event should fire at the specified time of day in the algorithm's time zone
             </summary>
             <param name="timeOfDay">The time of day in the algorithm's time zone the event should fire</param>
             <returns>A time rule that fires at the specified time in the algorithm's time zone</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.At(System.Int32,System.Int32,System.Int32)">
             <summary>
             Specifies an event should fire at the specified time of day in the algorithm's time zone
             </summary>
             <param name="hour">The hour</param>
             <param name="minute">The minute</param>
             <param name="second">The second</param>
             <returns>A time rule that fires at the specified time in the algorithm's time zone</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.At(System.Int32,System.Int32,NodaTime.DateTimeZone)">
             <summary>
             Specifies an event should fire at the specified time of day in the specified time zone
             </summary>
             <param name="hour">The hour</param>
             <param name="minute">The minute</param>
             <param name="timeZone">The time zone the event time is represented in</param>
             <returns>A time rule that fires at the specified time in the algorithm's time zone</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.At(System.Int32,System.Int32,System.Int32,NodaTime.DateTimeZone)">
             <summary>
             Specifies an event should fire at the specified time of day in the specified time zone
             </summary>
             <param name="hour">The hour</param>
             <param name="minute">The minute</param>
             <param name="second">The second</param>
             <param name="timeZone">The time zone the event time is represented in</param>
             <returns>A time rule that fires at the specified time in the algorithm's time zone</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.At(System.TimeSpan,NodaTime.DateTimeZone)">
             <summary>
             Specifies an event should fire at the specified time of day in the specified time zone
             </summary>
             <param name="timeOfDay">The time of day in the algorithm's time zone the event should fire</param>
             <param name="timeZone">The time zone the date time is expressed in</param>
             <returns>A time rule that fires at the specified time in the algorithm's time zone</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.Every(System.TimeSpan)">
             <summary>
             Specifies an event should fire periodically on the requested interval
             </summary>
             <param name="interval">The frequency with which the event should fire</param>
             <returns>A time rule that fires after each interval passes</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.AfterMarketOpen(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Specifies an event should fire at market open +- <paramref name="minutesAfterOpen" />
             </summary>
             <param name="symbol">The symbol whose market open we want an event for</param>
             <param name="minutesAfterOpen">The time after market open that the event should fire</param>
             <param name="extendedMarketOpen">True to use extended market open, false to use regular market open</param>
             <returns>A time rule that fires the specified number of minutes after the symbol's market open</returns>
            </member>
        <member name="M:QuantConnect.Scheduling.TimeRules.BeforeMarketClose(QuantConnect.Symbol,System.Double,System.Boolean)">
             <summary>
             Specifies an event should fire at the market close +- <paramref name="minutesBeforeClose" />
             </summary>
             <param name="symbol">The symbol whose market close we want an event for</param>
             <param name="minutesBeforeClose">The time before market close that the event should fire</param>
             <param name="extendedMarketClose">True to use extended market close, false to use regular market close</param>
             <returns>A time rule that fires the specified number of minutes before the symbol's market close</returns>
            </member>
        <member name="T:QuantConnect.Securities.BrokerageModelSecurityInitializer">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.ISecurityInitializer" /> that initializes a security
             by settings the <see cref="P:QuantConnect.Securities.Security.FillModel" />, <see cref="P:QuantConnect.Securities.Security.FeeModel" />, 
             <see cref="P:QuantConnect.Securities.Security.SlippageModel" />, and the <see cref="P:QuantConnect.Securities.Security.SettlementModel" /> properties
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.BrokerageModelSecurityInitializer.#ctor(QuantConnect.Brokerages.IBrokerageModel,QuantConnect.Securities.ISecuritySeeder)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.BrokerageModelSecurityInitializer" /> class
             for the specified algorithm
             </summary>
             <param name="brokerageModel">The brokerage model used to initialize the security models</param>
             <param name="securitySeeder">An <see cref="T:QuantConnect.Securities.ISecuritySeeder" /> used to seed the initial price of the security</param>
            </member>
        <member name="M:QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security)">
             <summary>
             Initializes the specified security by setting up the models
             </summary>
             <param name="security">The security to be initialized</param>
            </member>
        <member name="T:QuantConnect.Securities.Cash">
             <summary>
             Represents a holding of a currency in cash.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cash.SecuritySymbol">
             <summary>
             Gets the symbol of the security required to provide conversion rates.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cash.Symbol">
             <summary>
             Gets the symbol used to represent this cash
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cash.Amount">
             <summary>
             Gets or sets the amount of cash held
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cash.ConversionRate">
             <summary>
             Gets the conversion rate into account currency
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cash.ValueInAccountCurrency">
             <summary>
             Gets the value of this cash in the accout currency
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Cash.#ctor(System.String,System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Cash" /> class
             </summary>
             <param name="symbol">The symbol used to represent this cash</param>
             <param name="amount">The amount of this currency held</param>
             <param name="conversionRate">The initial conversion rate of this currency into the <see cref="F:QuantConnect.Securities.CashBook.AccountCurrency" /></param>
            </member>
        <member name="M:QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)">
             <summary>
             Updates this cash object with the specified data
             </summary>
             <param name="data">The new data for this cash object</param>
            </member>
        <member name="M:QuantConnect.Securities.Cash.AddAmount(System.Decimal)">
             <summary>
             Adds the specified amount of currency to this Cash instance and returns the new total.
             This operation is thread-safe
             </summary>
             <param name="amount">The amount of currency to be added</param>
             <returns>The amount of currency directly after the addition</returns>
            </member>
        <member name="M:QuantConnect.Securities.Cash.SetAmount(System.Decimal)">
             <summary>
             Sets the Quantity to the specified amount
             </summary>
             <param name="amount">The amount to set the quantity to</param>
            </member>
        <member name="M:QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase,System.Collections.Generic.IReadOnlyDictionary{QuantConnect.SecurityType,System.String},QuantConnect.Securities.CashBook)">
             <summary>
             Ensures that we have a data feed to convert this currency into the base currency.
             This will add a subscription at the lowest resolution if one is not found.
             </summary>
             <param name="securities">The security manager</param>
             <param name="subscriptions">The subscription manager used for searching and adding subscriptions</param>
             <param name="marketHoursDatabase">A security exchange hours provider instance used to resolve exchange hours for new subscriptions</param>
             <param name="symbolPropertiesDatabase">A symbol properties database instance</param>
             <param name="marketMap">The market map that decides which market the new security should be in</param>
             <param name="cashBook">The cash book - used for resolving quote currencies for created conversion securities</param>
             <returns>Returns the added currency security if needed, otherwise null</returns>
            </member>
        <member name="M:QuantConnect.Securities.Cash.ToString">
             <summary>
             Returns a <see cref="T:System.String" /> that represents the current <see cref="T:QuantConnect.Securities.Cash" />.
             </summary>
             <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:QuantConnect.Securities.Cash" />.</returns>
            </member>
        <member name="T:QuantConnect.Securities.CashBook">
             <summary>
             Provides a means of keeping track of the different cash holdings of an algorithm
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.CashBook.AccountCurrency">
             <summary>
             Gets the base currency used
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.TotalValueInAccountCurrency">
             <summary>
             Gets the total value of the cash book in units of the base currency
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.CashBook" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Add(System.String,System.Decimal,System.Decimal)">
             <summary>
             Adds a new cash of the specified symbol and quantity
             </summary>
             <param name="symbol">The symbol used to reference the new cash</param>
             <param name="quantity">The amount of new cash to start</param>
             <param name="conversionRate">The conversion rate used to determine the initial
             portfolio value/starting capital impact caused by this currency position.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase,System.Collections.Generic.IReadOnlyDictionary{QuantConnect.SecurityType,System.String})">
             <summary>
             Checks the current subscriptions and adds necessary currency pair feeds to provide real time conversion data
             </summary>
             <param name="securities">The SecurityManager for the algorithm</param>
             <param name="subscriptions">The SubscriptionManager for the algorithm</param>
             <param name="marketHoursDatabase">A security exchange hours provider instance used to resolve exchange hours for new subscriptions</param>
             <param name="symbolPropertiesDatabase">A symbol properties database instance</param>
             <param name="marketMap">The market map that decides which market the new security should be in</param>
             <returns>Returns a list of added currency securities</returns>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Convert(System.Decimal,System.String,System.String)">
             <summary>
             Converts a quantity of source currency units into the specified destination currency
             </summary>
             <param name="sourceQuantity">The quantity of source currency to be converted</param>
             <param name="sourceCurrency">The source currency symbol</param>
             <param name="destinationCurrency">The destination currency symbol</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.ConvertToAccountCurrency(System.Decimal,System.String)">
             <summary>
             Converts a quantity of source currency units into the account currency
             </summary>
             <param name="sourceQuantity">The quantity of source currency to be converted</param>
             <param name="sourceCurrency">The source currency symbol</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.Count">
             <summary>
             Gets the count of Cash items in this CashBook.
             </summary>
             <value>The count.</value>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.IsReadOnly">
             <summary>
             Gets a value indicating whether this instance is read only.
             </summary>
             <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair{System.String,QuantConnect.Securities.Cash})">
             <summary>
             Add the specified item to this CashBook.
             </summary>
             <param name="item">KeyValuePair of symbol -&gt; Cash item</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Add(System.String,QuantConnect.Securities.Cash)">
             <summary>
             Add the specified key and value.
             </summary>
             <param name="symbol">The symbol of the Cash value.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Clear">
             <summary>
             Clear this instance of all Cash entries.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Remove(System.String)">
             <summary>
             Remove the Cash item corresponding to the specified symbol
             </summary>
             <param name="symbol">The symbolto be removed</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Remove(System.Collections.Generic.KeyValuePair{System.String,QuantConnect.Securities.Cash})">
             <summary>
             Remove the specified item.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.ContainsKey(System.String)">
             <summary>
             Determines whether the current instance contains an entry with the specified symbol.
             </summary>
             <returns><c>true</c>, if key was contained, <c>false</c> otherwise.</returns>
             <param name="symbol">Key.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.TryGetValue(System.String,QuantConnect.Securities.Cash@)">
             <summary>
             Try to get the value.
             </summary>
             <remarks>To be added.</remarks>
             <returns><c>true</c>, if get value was tryed, <c>false</c> otherwise.</returns>
             <param name="symbol">The symbol.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair{System.String,QuantConnect.Securities.Cash})">
             <summary>
             Determines whether the current collection contains the specified value.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair{System.String,QuantConnect.Securities.Cash}[],System.Int32)">
             <summary>
             Copies to the specified array.
             </summary>
             <param name="array">Array.</param>
             <param name="arrayIndex">Array index.</param>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.Item(System.String)">
             <summary>
             Gets or sets the <see cref="T:QuantConnect.Securities.Cash" /> with the specified symbol.
             </summary>
             <param name="symbol">Symbol.</param>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.Keys">
             <summary>
             Gets the keys.
             </summary>
             <value>The keys.</value>
            </member>
        <member name="P:QuantConnect.Securities.CashBook.Values">
             <summary>
             Gets the values.
             </summary>
             <value>The values.</value>
            </member>
        <member name="M:QuantConnect.Securities.CashBook.GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns>The enumerator.</returns>
            </member>
        <member name="T:QuantConnect.Securities.Cfd.Cfd">
             <summary>
             CFD Security Object Implementation for CFD Assets
             </summary>
             <seealso cref="T:QuantConnect.Securities.Security" />
            </member>
        <member name="M:QuantConnect.Securities.Cfd.Cfd.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the CFD security
             </summary>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="config">The subscription configuration for this security</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="M:QuantConnect.Securities.Cfd.Cfd.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the CFD security
             </summary>
             <param name="symbol">The security's symbol</param>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="P:QuantConnect.Securities.Cfd.Cfd.ContractMultiplier">
             <summary>
             Gets the contract multiplier for this CFD security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Cfd.Cfd.MinimumPriceVariation">
             <summary>
             Gets the minimum price variation for this CFD security
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Cfd.CfdCache">
             <summary>
             CFD specific caching support
             </summary>
             <remarks>Class is virtually empty and scheduled to be made obsolete. Potentially could be used for user data storage.</remarks>
             <seealso cref="T:QuantConnect.Securities.SecurityCache" />
            </member>
        <member name="T:QuantConnect.Securities.Cfd.CfdDataFilter">
             <summary>
             CFD packet by packet data filtering mechanism for dynamically detecting bad ticks.
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityDataFilter" />
            </member>
        <member name="T:QuantConnect.Securities.Cfd.CfdExchange">
             <summary>
             CFD exchange class - information and helper tools for CFD exchange properties
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Cfd.CfdExchange.TradingDaysPerYear">
             <summary>
             Number of trading days per year for this security, used for performance statistics.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Cfd.CfdExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Cfd.CfdExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="T:QuantConnect.Securities.Cfd.CfdHolding">
             <summary>
             CFD holdings implementation of the base securities class
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityHolding" />
            </member>
        <member name="M:QuantConnect.Securities.Cfd.CfdHolding.#ctor(QuantConnect.Securities.Cfd.Cfd)">
             <summary>
             CFD Holding Class constructor
             </summary>
             <param name="security">The CFD security being held</param>
            </member>
        <member name="T:QuantConnect.Securities.CompositeSecurityInitializer">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.ISecurityInitializer" /> that executes
             each initializer in order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.CompositeSecurityInitializer.#ctor(QuantConnect.Securities.ISecurityInitializer[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.CompositeSecurityInitializer" /> class
             </summary>
             <param name="initializers">The initializers to execute in order</param>
            </member>
        <member name="M:QuantConnect.Securities.CompositeSecurityInitializer.Initialize(QuantConnect.Securities.Security)">
             <summary>
             Execute each of the internally held initializers in sequence
             </summary>
             <param name="security">The security to be initialized</param>
            </member>
        <member name="T:QuantConnect.Securities.ConstantFeeTransactionModel">
             <summary>
             Provides a transaction model that always returns the same order fee.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ConstantFeeTransactionModel.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.ConstantFeeTransactionModel" /> class with the specified <paramref name="fee" />
             </summary>
             <param name="fee">The constant order fee used by the model</param>
            </member>
        <member name="M:QuantConnect.Securities.ConstantFeeTransactionModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Returns the constant fee for the model
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="T:QuantConnect.Securities.DelayedSettlementModel">
             <summary>
             Represents the model responsible for applying cash settlement rules
             </summary>
             <remarks>This model applies cash settlement after T+N days</remarks>
            </member>
        <member name="M:QuantConnect.Securities.DelayedSettlementModel.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates an instance of the <see cref="T:QuantConnect.Securities.DelayedSettlementModel" /> class
             </summary>
             <param name="numberOfDays">The number of days required for settlement</param>
             <param name="timeOfDay">The time of day used for settlement</param>
            </member>
        <member name="M:QuantConnect.Securities.DelayedSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,System.DateTime,System.String,System.Decimal)">
             <summary>
             Applies cash settlement rules
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The fill's security</param>
             <param name="applicationTimeUtc">The fill time (in UTC)</param>
             <param name="currency">The currency symbol</param>
             <param name="amount">The amount of cash to apply</param>
            </member>
        <member name="T:QuantConnect.Securities.AdjustedPriceVariationModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.IPriceVariationModel" />
             for use when data is <see cref="F:QuantConnect.DataNormalizationMode.Adjusted" />.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.AdjustedPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)">
             <summary>
             Get the minimum price variation from a security
             </summary>
             <param name="security">Security which we want the minimum price variation from</param>
             <returns>Zero</returns>
            </member>
        <member name="T:QuantConnect.Securities.FuncSecuritySeeder">
             <summary>
             Seed a security price from a history function
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecuritySeeder.#ctor(System.Func{QuantConnect.Securities.Security,QuantConnect.Data.BaseData})">
             <summary>
             Constructor that takes as a parameter the security used to seed the price
             </summary>
             <param name="seedFunction"></param>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecuritySeeder.GetSeedData(QuantConnect.Securities.Security)">
             <summary>
             Get the last data point using the seed function
             </summary>
             <param name="security"><see cref="T:QuantConnect.Securities.Security" /> being seeded</param>
             <returns><see cref="T:QuantConnect.Data.BaseData" /> representing the last known data of the security</returns>
            </member>
        <member name="T:QuantConnect.Securities.FutureExpirationCycles">
             <summary>
             Static class contains definitions of popular futures expiration cycles
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.January">
             <summary>
             January Cycle: Expirations in January, April, July, October (the first month of each quarter)
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.February">
             <summary>
             February Cycle: Expirations in February, May, August, November (second month)
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.March">
             <summary>
             March Cycle: Expirations in March, June, September, December (third month)
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.AllYear">
             <summary>
             All Year Cycle: Expirations in every month of the year
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.HMUZ">
             <summary>
             HMUZ Cycle
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.HKNUZ">
             <summary>
             HKNUZ Cycle
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.HKNUVZ">
             <summary>
             HKNUVZ Cycle
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.FHKNQUVZ">
             <summary>
             FHKNQUVZ Cycle
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.FHKNQUX">
             <summary>
             FHKNQUX Cycle
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureExpirationCycles.FGHJKMNQUVXZ">
             <summary>
             FGHJKMNQUVXZ Cycle
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.FutureFilterUniverse">
             <summary>
             Represents futures symbols universe used in filtering.
             </summary> 
            </member>
        <member name="P:QuantConnect.Securities.FutureFilterUniverse.Underlying">
             <summary>
             The underlying price data
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.FutureFilterUniverse.IsDynamic">
             <summary>
             True if the universe is dynamic and filter needs to be reapplied
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Symbol},QuantConnect.Data.BaseData)">
             <summary>
             Constructs FutureFilterUniverse
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.FrontMonth">
             <summary>
             Returns front month contract
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.BackMonths">
             <summary>
             Returns a list of back month contracts
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.BackMonth">
             <summary>
             Returns first of back month contracts
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan,System.TimeSpan)">
             <summary>
             Applies filter selecting futures contracts based on a range of expiration dates relative to the current day 
             </summary>
             <param name="minExpiry">The minimum time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in less than 10 days</param>
             <param name="maxExpiry">The maxmium time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in more than 10 days</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.ExpirationCycle(System.Int32[])">
             <summary>
             Applies filter selecting futures contracts based on expiration cycles. See <see cref="T:QuantConnect.Securities.FutureExpirationCycles" /> for details 
             </summary>
             <param name="months"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.GetEnumerator">
             <summary>
             IEnumerable interface method implementation
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverse.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             IEnumerable interface method implementation
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.FutureFilterUniverseEx">
             <summary>
             Extensions for Linq support
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverseEx.Where(QuantConnect.Securities.FutureFilterUniverse,System.Func{QuantConnect.Symbol,System.Boolean})">
             <summary>
             Filters universe 
             </summary>
             <param name="universe"></param>
             <param name="predicate"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverseEx.Select(QuantConnect.Securities.FutureFilterUniverse,System.Func{QuantConnect.Symbol,QuantConnect.Symbol})">
             <summary>
             Maps universe 
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureFilterUniverseEx.SelectMany(QuantConnect.Securities.FutureFilterUniverse,System.Func{QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Binds universe 
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.OptionFilterUniverse">
             <summary>
             Represents options symbols universe used in filtering.
             </summary> 
            </member>
        <member name="T:QuantConnect.Securities.OptionFilterUniverse.Type">
             <summary>
             Defines listed option types
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.OptionFilterUniverse.Type.Standard">
             <summary>
             Listed stock options that expire 3rd Friday of the month
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.OptionFilterUniverse.Type.Weeklys">
             <summary>
             Weeklys options that expire every week
             These are options listed with approximately one week to expiration
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.OptionFilterUniverse.Underlying">
             <summary>
             The underlying price data
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.OptionFilterUniverse.IsDynamic">
             <summary>
             True if the universe is dynamic and filter needs to be reapplied
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Symbol},QuantConnect.Data.BaseData)">
             <summary>
             Constructs OptionFilterUniverse
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys">
             <summary>
             Includes universe of weeklys options (if any) into selection
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly">
             <summary>
             Sets universe of weeklys options (if any) as a selection
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter">
             <summary>
             Returns universe, filtered by option type
             </summary>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.IsStandardType(QuantConnect.Symbol)">
             <summary>
             Returns true is the option is a standard contract that expire 3rd Friday of the month
             </summary>
             <param name="symbol"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.FrontMonth">
             <summary>
             Returns front month contract
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.BackMonths">
             <summary>
             Returns a list of back month contracts
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.BackMonth">
             <summary>
             Returns first of back month contracts
             </summary>
             <param name="universe"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.Strikes(System.Int32,System.Int32)">
             <summary>
             Applies filter selecting options contracts based on a range of strikes in relative terms
             </summary>
             <param name="minStrike">The minimum strike relative to the underlying price, for example, -1 would filter out contracts further than 1 strike below market price</param>
             <param name="maxStrike">The maximum strike relative to the underlying price, for example, +1 would filter out contracts further than 1 strike above market price</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan,System.TimeSpan)">
             <summary>
             Applies filter selecting options contracts based on a range of expiration dates relative to the current day 
             </summary>
             <param name="minExpiry">The minimum time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in less than 10 days</param>
             <param name="maxExpiry">The maxmium time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in more than 10 days</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.GetEnumerator">
             <summary>
             IEnumerable interface method implementation
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverse.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             IEnumerable interface method implementation
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.OptionFilterUniverseEx">
             <summary>
             Extensions for Linq support
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse,System.Func{QuantConnect.Symbol,System.Boolean})">
             <summary>
             Filters universe 
             </summary>
             <param name="universe"></param>
             <param name="predicate"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse,System.Func{QuantConnect.Symbol,QuantConnect.Symbol})">
             <summary>
             Maps universe 
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse,System.Func{QuantConnect.Symbol,System.Collections.Generic.IEnumerable{QuantConnect.Symbol}})">
             <summary>
             Binds universe 
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.IDerivativeSecurityFilterUniverse">
             <summary>
             Represents derivative symbols universe used in filtering.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.IDerivativeSecurityFilterUniverse.Underlying">
             <summary>
             The underlying price data
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.IDerivativeSecurityFilterUniverse.IsDynamic">
             <summary>
             True if the universe is dynamic and filter needs to be reapplied during trading day
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.IMarginCallModel">
             <summary>
             Represents the model responsible for picking which orders should be executed during a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Generates a new order for the specified security taking into account the total margin
             used by the account. Returns null when no margin call is to be issued.
             </summary>
             <param name="security">The security to generate a margin call order for</param>
             <param name="netLiquidationValue">The net liquidation value for the entire account</param>
             <param name="totalMargin">The totl margin used by the account in units of base currency</param>
             <param name="maintenanceMarginRequirement">The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call</param>
             <returns>An order object representing a liquidation order to be executed to bring the account within margin requirements</returns>
            </member>
        <member name="M:QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable{QuantConnect.Orders.SubmitOrderRequest})">
             <summary>
             Executes synchronous orders to bring the account within margin requirements.
             </summary>
             <param name="generatedMarginCallOrders">These are the margin call orders that were generated
             by individual security margin models.</param>
             <returns>The list of orders that were actually executed</returns>
            </member>
        <member name="T:QuantConnect.Securities.MarginCallModel">
             <summary>
             Provides access to a null implementation for <see cref="T:QuantConnect.Securities.IMarginCallModel" />
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarginCallModel.Null">
             <summary>
             Gets an instance of <see cref="T:QuantConnect.Securities.IMarginCallModel" /> that will always
             return an empty list of executed orders.
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.ISecuritySeeder">
             <summary>
             Used to seed the security with the correct price
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.SecurityPriceVariationModel">
             <summary>
             Provides default implementation of <see cref="T:QuantConnect.Securities.IPriceVariationModel" />
             for use in defining the minimum price variation.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)">
             <summary>
             Get the minimum price variation from a security
             </summary>
             <param name="security">Security which we want the minimum price variation from</param>
             <returns>Decimal minimum price variation of a given security</returns>
            </member>
        <member name="T:QuantConnect.Securities.FuncSecurityDerivativeFilter">
             <summary>
             Provides a functional implementation of <see cref="T:QuantConnect.Securities.IDerivativeSecurityFilter" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecurityDerivativeFilter.#ctor(System.Func{QuantConnect.Securities.IDerivativeSecurityFilterUniverse,QuantConnect.Securities.IDerivativeSecurityFilterUniverse})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.FuncSecurityDerivativeFilter" /> class
             </summary>
             <param name="filter">The functional implementation of the <see cref="M:QuantConnect.Securities.FuncSecurityDerivativeFilter.Filter(QuantConnect.Securities.IDerivativeSecurityFilterUniverse)" /> method</param>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecurityDerivativeFilter.Filter(QuantConnect.Securities.IDerivativeSecurityFilterUniverse)">
             <summary>
             Filters the input set of symbols represented by the universe 
             </summary>
             <param name="universe">Derivative symbols universe used in filtering</param>
             <returns>The filtered set of symbols</returns>
            </member>
        <member name="T:QuantConnect.Securities.FuncSecurityInitializer">
             <summary>
             Provides a functional implementation of <see cref="T:QuantConnect.Securities.ISecurityInitializer" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecurityInitializer.#ctor(System.Action{QuantConnect.Securities.Security})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.FuncSecurityInitializer" /> class
             </summary>
             <param name="initializer">The functional implementation of <see cref="M:QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)" /></param>
            </member>
        <member name="M:QuantConnect.Securities.FuncSecurityInitializer.Initialize(QuantConnect.Securities.Security)">
             <summary>
             Initializes the specified security
             </summary>
             <param name="security">The security to be initialized</param>
            </member>
        <member name="T:QuantConnect.Securities.EquityPriceVariationModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.IPriceVariationModel" />
             for use in defining the minimum price variation for a given equity
             under Regulation NMS – Rule 612 (a.k.a – the “sub-penny rule”)
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.EquityPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)">
             <summary>
             Get the minimum price variation from a security
             </summary>
             <param name="security">Security which we want the minimum price variation from</param>
             <returns>Decimal minimum price variation of a given security</returns>
            </member>
        <member name="T:QuantConnect.Securities.IPriceVariationModel">
             <summary>
             Gets the minimum price variation of a given security  
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IPriceVariationModel.GetMinimumPriceVariation(QuantConnect.Securities.Security)">
             <summary>
             Get the minimum price variation from a security
             </summary>
             <param name="security">Security which we want the minimum price variation from</param>
             <returns>Decimal minimum price variation of a given security</returns>
            </member>
        <member name="T:QuantConnect.Securities.Future.Future">
             <summary>
             Futures Security Object Implementation for Futures Assets
             </summary>
             <seealso cref="T:QuantConnect.Securities.Security" />
            </member>
        <member name="F:QuantConnect.Securities.Future.Future.DefaultSettlementDays">
             <summary>
             The default number of days required to settle a futures sale
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Future.Future.DefaultSettlementTime">
             <summary>
             The default time of day for settlement
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Future.Future.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the Future security
             </summary>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="config">The subscription configuration for this security</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="M:QuantConnect.Securities.Future.Future.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the Future security
             </summary>
             <param name="symbol">The subscription security symbol</param>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="P:QuantConnect.Securities.Future.Future.Expiry">
             <summary>
             Gets the expiration date
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Future.Future.SettlementType">
             <summary>
             Specifies if futures contract has physical or cash settlement on settlement
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Future.Future.Underlying">
             <summary>
             Gets or sets the underlying security object.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Future.Future.ContractFilter">
             <summary>
             Gets or sets the contract filter
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan,System.TimeSpan)">
             <summary>
             Sets the <see cref="P:QuantConnect.Securities.Future.Future.ContractFilter" /> to a new instance of the filter
             using the specified expiration range values
             </summary>
             <param name="minExpiry">The minimum time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in less than 10 days</param>
             <param name="maxExpiry">The maximum time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in more than 10 days</param>
            </member>
        <member name="M:QuantConnect.Securities.Future.Future.SetFilter(System.Func{QuantConnect.Securities.FutureFilterUniverse,QuantConnect.Securities.FutureFilterUniverse})">
             <summary>
             Sets the <see cref="P:QuantConnect.Securities.Future.Future.ContractFilter" /> to a new universe selection function
             </summary>
             <param name="universeFunc">new universe selection function</param>
            </member>
        <member name="T:QuantConnect.Securities.Future.FutureCache">
             <summary>
             Future specific caching support
             </summary>
             <remarks>Class is virtually empty and scheduled to be made obsolete. Potentially could be used for user data storage.</remarks>
             <seealso cref="T:QuantConnect.Securities.SecurityCache" />
            </member>
        <member name="T:QuantConnect.Securities.Future.FutureExchange">
             <summary>
             Future exchange class - information and helper tools for future exchange properties
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Future.FutureExchange.TradingDaysPerYear">
             <summary>
             Number of trading days per year for this security, 252.
             </summary>
             <remarks>Used for performance statistics to calculate sharpe ratio accurately</remarks>
            </member>
        <member name="M:QuantConnect.Securities.Future.FutureExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Future.FutureExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="T:QuantConnect.Securities.Future.FutureHolding">
             <summary>
             Future holdings implementation of the base securities class
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityHolding" />
            </member>
        <member name="M:QuantConnect.Securities.Future.FutureHolding.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Future Holding Class constructor
             </summary>
             <param name="security">The future security being held</param>
            </member>
        <member name="T:QuantConnect.Securities.Futures">
             <summary>
             Futures static class contains shortcut definitions of major futures contracts available for trading
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Grains">
             <summary>
             Grains and Oilseeds group 
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.Wheat">
             <summary>
             Wheat Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.Corn">
             <summary>
             Corn Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.Soybeans">
             <summary>
             Soybeans Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.SoybeanMeal">
             <summary>
             Soybean Meal Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.SoybeanOil">
             <summary>
             Soybean Oil Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Grains.Oats">
             <summary>
             Oats Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Currencies">
             <summary>
             Currencies group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.USD">
             <summary>
             U.S. Dollar Index Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.GBP">
             <summary>
             British Pound Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.CAD">
             <summary>
             Canadian Dollar Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.JPY">
             <summary>
             Japanese Yen Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.CHF">
             <summary>
             Swiss Franc Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.EUR">
             <summary>
             Euro FX Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.AUD">
             <summary>
             Australian Dollar Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Currencies.NZD">
             <summary>
             New Zealand Dollar Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Energies">
             <summary>
             Energies group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Energies.CrudeOilWTI">
             <summary>
             Crude Oil WTI Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Energies.HeatingOil">
             <summary>
             Heating Oil Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Energies.Gasoline">
             <summary>
             Gasoline RBOB Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Energies.NaturalGas">
             <summary>
             Natural Gas Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Financials">
             <summary>
             Financials group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Financials.Y30TreasuryBond">
             <summary>
             30Y U.S. Treasury Bond Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Financials.Y10TreasuryNote">
             <summary>
             10Y U.S. Treasury Note Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Financials.Y5TreasuryNote">
             <summary>
             5Y U.S. Treasury Note Futures 
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Financials.Y2TreasuryNote">
             <summary>
             2Y U.S. Treasury Note Futures 
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Financials.EuroDollar">
             <summary>
             EuroDollar Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Indices">
             <summary>
             Indices group
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member F:QuantConnect.Securities.Futures.Indices.SP500EMini-->
        <member name="F:QuantConnect.Securities.Futures.Indices.NASDAQ100EMini">
             <summary>
             E-mini NASDAQ 100 Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Indices.Dow30EMini">
             <summary>
             E-mini Dow Indu 30 Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Indices.VIX">
             <summary>
             CBOE Volatility Index Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Meats">
             <summary>
             Meats group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Meats.LiveCattle">
             <summary>
             Live Cattle Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Meats.FeederCattle">
             <summary>
             Feeder Cattle Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Meats.LeanHogs">
             <summary>
             Lean Hogs Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Metals">
             <summary>
             Metals group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Metals.Gold">
             <summary>
             Gold Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Metals.Silver">
             <summary>
             Silver Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Metals.Platinum">
             <summary>
             Platinum Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Metals.Palladium">
             <summary>
             Palladium Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.Futures.Softs">
             <summary>
             Softs group
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Softs.Cotton2">
             <summary>
             Cotton #2 Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Softs.OrangeJuice">
             <summary>
             Orange Juice Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Softs.Coffee">
             <summary>
             Coffee C Arabica Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Softs.Sugar11">
             <summary>
             Sugar #11 Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="F:QuantConnect.Securities.Futures.Softs.Cocoa">
             <summary>
             Cocoa Futures  
             </summary>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.FutureMarginModel">
             <summary>
             Represents a simple margining model for margining futures. Margin file contains Initial and Maintenance margins 
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.FutureMarginModel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the current leverage of the security
             </summary>
             <param name="security">The security to get leverage for</param>
             <returns>The current leverage in the security</returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.SetLeverage(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Sets the leverage for the applicable securities, i.e, futures
             </summary>
             <remarks>
             This is added to maintain backwards compatibility with the old margin/leverage system
             </remarks>
             <param name="security"></param>
             <param name="leverage">The new leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the total margin required to execute the specified order in units of the account currency including fees
             </summary>
             <param name="security">The security to compute initial margin for</param>
             <param name="order">The order to be executed</param>
             <returns>The total margin in terms of the currency quoted in the order</returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)">
             <summary>
             Gets the margin currently alloted to the specified holding
             </summary>
             <param name="security">The security to compute maintenance margin for</param>
             <returns>The maintenance margin required for the </returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin cash available for a trade
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The security to be traded</param>
             <param name="direction">The direction of the trade</param>
             <returns>The margin available for the trade</returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.LoadMarginRequirementsHistory(QuantConnect.Symbol)">
             <summary>
             Gets the sorted list of historical margin changes produced by reading in the margin requirements 
             data found in /Data/symbol-margin/
             </summary>
             <returns>Sorted list of historical margin changes</returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.FromCsvFile(System.String)">
             <summary>
             Reads margin requirements file and returns a sorted list of historical margin changes
             </summary>
             <param name="file">The csv file to be read</param>
             <returns>Sorted list of historical margin changes</returns>
            </member>
        <member name="M:QuantConnect.Securities.FutureMarginModel.FromCsvLine(System.String)">
             <summary>
             Creates a new instance of <see cref="T:QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry" /> from the specified csv line
             </summary>
             <param name="csvLine">The csv line to be parsed</param>
             <returns>A new <see cref="T:QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry" /> for the specified csv line</returns>
            </member>
        <member name="F:QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry.Date">
             <summary>
             Date of margin requirements change
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry.InitialOvernight">
             <summary>
             Initial overnight margin for the contract effective from the date of change
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.FutureMarginModel.MarginRequirementsEntry.MaintenanceOvernight">
             <summary>
             Maintenance overnight margin for the contract effective from the date of change
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.IDerivativeSecurityFilter">
             <summary>
             Filters a set of derivative symbols using the underlying price data.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IDerivativeSecurityFilter.Filter(QuantConnect.Securities.IDerivativeSecurityFilterUniverse)">
             <summary>
             Filters the input set of symbols represented by the universe 
             </summary>
             <param name="universe">derivative symbols universe used in filtering</param>
             <returns>The filtered set of symbols</returns>
            </member>
        <member name="T:QuantConnect.Securities.IndicatorVolatilityModel`1">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.IVolatilityModel" /> that uses an indicator
             to compute its value
             </summary>
             <typeparam name="T">The indicator's input type</typeparam>
            </member>
        <member name="P:QuantConnect.Securities.IndicatorVolatilityModel`1.Volatility">
             <summary>
             Gets the volatility of the security as a percentage
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IndicatorVolatilityModel`1.#ctor(QuantConnect.Indicators.IIndicator{`0})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.IVolatilityModel" /> using
             the specified <paramref name="indicator" />. The <paramref name="indicator" />
             is assumed to but updated externally from this model, such as being registered
             into the consolidator system.
             </summary>
             <param name="indicator">The auto-updating indicator</param>
            </member>
        <member name="M:QuantConnect.Securities.IndicatorVolatilityModel`1.#ctor(QuantConnect.Indicators.IIndicator{`0},System.Action{QuantConnect.Securities.Security,QuantConnect.Data.BaseData,QuantConnect.Indicators.IIndicator{`0}})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.IVolatilityModel" /> using
             the specified <paramref name="indicator" />. The <paramref name="indicator" />
             is assumed to but updated externally from this model, such as being registered
             into the consolidator system.
             </summary>
             <param name="indicator">The auto-updating indicator</param>
             <param name="indicatorUpdate">Function delegate used to update the indicator on each call to <see cref="M:QuantConnect.Securities.IndicatorVolatilityModel{`0}.Update(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)" /></param>
            </member>
        <member name="M:QuantConnect.Securities.IndicatorVolatilityModel`1.Update(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Updates this model using the new price information in
             the specified security instance
             </summary>
             <param name="security">The security to calculate volatility for</param>
             <param name="data">The new piece of data for the security</param>
            </member>
        <member name="M:QuantConnect.Securities.IndicatorVolatilityModel`1.GetHistoryRequirements(QuantConnect.Securities.Security,System.DateTime)">
             <summary>
             Returns history requirements for the volatility model expressed in the form of history request
             </summary>
             <param name="security">The security of the request</param>
             <param name="utcTime">The date/time of the request</param>
             <returns>History request object list, or empty if no requirements</returns>
            </member>
        <member name="T:QuantConnect.Securities.Interfaces.AdjustmentType">
             <summary>
             Enum defines types of possible price adjustments in continuous contract modeling. 
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Interfaces.AdjustmentType.ForwardAdjusted">
             ForwardAdjusted - new quotes are adjusted as new data comes
            </member>
        <member name="F:QuantConnect.Securities.Interfaces.AdjustmentType.BackAdjusted">
             BackAdjusted - old quotes are retrospectively adjusted as new data comes
            </member>
        <member name="T:QuantConnect.Securities.Interfaces.IContinuousContractModel">
             <summary>
             Continuous contract model interface. Interfaces is implemented by different classes 
             realizing various methods for modeling continuous security series. Primarily, modeling of continuous futures. 
             Continuous contracts are used in backtesting of otherwise expiring derivative contracts. 
             Continuous contracts are not traded, and are not products traded on exchanges.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Interfaces.IContinuousContractModel.AdjustmentType">
             <summary>
             Adjustment type, implemented by the model
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Interfaces.IContinuousContractModel.InputSeries">
             <summary>
             List of current and historical data series for one root symbol. 
             e.g. 6BH16, 6BM16, 6BU16, 6BZ16
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Interfaces.IContinuousContractModel.GetContinuousData(System.DateTime)">
             <summary>
             Method returns continuous prices from the list of current and historical data series for one root symbol. 
             It returns enumerator of stitched continuous quotes, produced by the model.
             e.g. 6BH15, 6BM15, 6BU15, 6BZ15 will result in one 6B continuous historical series for 2015
             </summary>
             <returns>Continuous prices</returns>
            </member>
        <member name="M:QuantConnect.Securities.Interfaces.IContinuousContractModel.GetRollDates">
             <summary>
             Returns the list of roll dates for the contract. 
             </summary>
             <returns>The list of roll dates</returns>
            </member>
        <member name="M:QuantConnect.Securities.Interfaces.IContinuousContractModel.GetCurrentSymbol(System.DateTime)">
             <summary>
             Returns current symbol name that corresponds to the current continuous model, 
             or null if none.
             </summary>
             <returns>Current symbol name</returns>
            </member>
        <member name="T:QuantConnect.Securities.ISecurityInitializer">
             <summary>
             Represents a type capable of initializing a new security
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)">
             <summary>
             Initializes the specified security
             </summary>
             <param name="security">The security to be initialized</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityInitializer">
             <summary>
             Provides static access to the <see cref="F:QuantConnect.Securities.SecurityInitializer.Null" /> security initializer
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityInitializer.Null">
             <summary>
             Gets an implementation of <see cref="T:QuantConnect.Securities.ISecurityInitializer" /> that is a no-op
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.ISettlementModel">
             <summary>
             Represents the model responsible for applying cash settlement rules
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,System.DateTime,System.String,System.Decimal)">
             <summary>
             Applies cash settlement rules
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The fill's security</param>
             <param name="applicationTimeUtc">The fill time (in UTC)</param>
             <param name="currency">The currency symbol</param>
             <param name="amount">The amount of cash to apply</param>
            </member>
        <member name="T:QuantConnect.Securities.IVolatilityModel">
             <summary>
             Represents a model that computes the volatility of a security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.IVolatilityModel.Volatility">
             <summary>
             Gets the volatility of the security as a percentage
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Updates this model using the new price information in
             the specified security instance
             </summary>
             <param name="security">The security to calculate volatility for</param>
             <param name="data">The new data used to update the model</param>
            </member>
        <member name="M:QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security,System.DateTime)">
             <summary>
             Returns history requirements for the volatility model expressed in the form of history request
             </summary>
             <param name="security">The security of the request</param>
             <param name="utcTime">The date/time of the request</param>
             <returns>History request object list, or empty if no requirements</returns>
            </member>
        <member name="T:QuantConnect.Securities.VolatilityModel">
             <summary>
             Provides access to a null implementation for <see cref="T:QuantConnect.Securities.IVolatilityModel" />
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.VolatilityModel.Null">
             <summary>
             Gets an instance of <see cref="T:QuantConnect.Securities.IVolatilityModel" /> that will always
             return 0 for its volatility and does nothing during Update.
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.LocalMarketHours">
             <summary>
             Represents the market hours under normal conditions for an exchange and a specific day of the week in terms of local time
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.LocalMarketHours.IsClosedAllDay">
             <summary>
             Gets whether or not this exchange is closed all day
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.LocalMarketHours.IsOpenAllDay">
             <summary>
             Gets whether or not this exchange is closed all day
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.LocalMarketHours.DayOfWeek">
             <summary>
             Gets the day of week these hours apply to
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.LocalMarketHours.Segments">
             <summary>
             Gets the individual market hours segments that define the hours of operation for this day
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.#ctor(System.DayOfWeek,QuantConnect.Securities.MarketHoursSegment[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.LocalMarketHours" /> class
             </summary>
             <param name="day">The day of the week these hours are applicable</param>
             <param name="segments">The open/close segments defining the market hours for one day</param>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.#ctor(System.DayOfWeek,System.Collections.Generic.IEnumerable{QuantConnect.Securities.MarketHoursSegment})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.LocalMarketHours" /> class
             </summary>
             <param name="day">The day of the week these hours are applicable</param>
             <param name="segments">The open/close segments defining the market hours for one day</param>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.#ctor(System.DayOfWeek,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.LocalMarketHours" /> class from the specified open/close times
             </summary>
             <param name="day">The day of week these hours apply to</param>
             <param name="extendedMarketOpen">The extended market open time</param>
             <param name="marketOpen">The regular market open time, must be greater than or equal to the extended market open time</param>
             <param name="marketClose">The regular market close time, must be greater than the regular market open time</param>
             <param name="extendedMarketClose">The extended market close time, must be greater than or equal to the regular market close time</param>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.#ctor(System.DayOfWeek,System.TimeSpan,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.LocalMarketHours" /> class from the specified open/close times
             using the market open as the extended market open and the market close as the extended market close, effectively
             removing any 'extended' session from these exchange hours
             </summary>
             <param name="day">The day of week these hours apply to</param>
             <param name="marketOpen">The regular market open time</param>
             <param name="marketClose">The regular market close time, must be greater than the regular market open time</param>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan,System.Boolean)">
             <summary>
             Gets the market opening time of day
             </summary>
             <param name="time">The reference time, the open returned will be the first open after the specified time if there are multiple market open segments</param>
             <param name="extendedMarket">True to include extended market hours, false for regular market hours</param>
             <returns>The market's opening time of day</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.GetMarketClose(System.TimeSpan,System.Boolean)">
             <summary>
             Gets the market closing time of day
             </summary>
             <param name="time">The reference time, the close returned will be the first close after the specified time if there are multiple market open segments</param>
             <param name="extendedMarket">True to include extended market hours, false for regular market hours</param>
             <returns>The market's closing time of day</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.IsOpen(System.TimeSpan,System.Boolean)">
             <summary>
             Determines if the exchange is open at the specified time
             </summary>
             <param name="time">The time of day to check</param>
             <param name="extendedMarket">True to check exended market hours, false to check regular market hours</param>
             <returns>True if the exchange is considered open, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.IsOpen(System.TimeSpan,System.TimeSpan,System.Boolean)">
             <summary>
             Determines if the exchange is open during the specified interval
             </summary>
             <param name="start">The start time of the interval</param>
             <param name="end">The end time of the interval</param>
             <param name="extendedMarket">True to check exended market hours, false to check regular market hours</param>
             <returns>True if the exchange is considered open, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.ClosedAllDay(System.DayOfWeek)">
             <summary>
             Gets a <see cref="T:QuantConnect.Securities.LocalMarketHours" /> instance that is always closed
             </summary>
             <param name="dayOfWeek">The day of week</param>
             <returns>A <see cref="T:QuantConnect.Securities.LocalMarketHours" /> instance that is always closed</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.OpenAllDay(System.DayOfWeek)">
             <summary>
             Gets a <see cref="T:QuantConnect.Securities.LocalMarketHours" /> instance that is always open
             </summary>
             <param name="dayOfWeek">The day of week</param>
             <returns>A <see cref="T:QuantConnect.Securities.LocalMarketHours" /> instance that is always open</returns>
            </member>
        <member name="M:QuantConnect.Securities.LocalMarketHours.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Securities.MarketHoursSegment">
             <summary>
             Represents the state of an exchange during a specified time range
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.MarketHoursSegment.Start">
             <summary>
             Gets the start time for this segment
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.MarketHoursSegment.End">
             <summary>
             Gets the end time for this segment
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.MarketHoursSegment.State">
             <summary>
             Gets the market hours state for this segment
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.#ctor(QuantConnect.Securities.MarketHoursState,System.TimeSpan,System.TimeSpan)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.MarketHoursSegment" /> class
             </summary>
             <param name="state">The state of the market during the specified times</param>
             <param name="start">The start time of the segment</param>
             <param name="end">The end time of the segment</param>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.OpenAllDay">
             <summary>
             Gets a new market hours segment representing being open all day
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.ClosedAllDay">
             <summary>
             Gets a new market hours segment representing being open all day
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.Contains(System.TimeSpan)">
             <summary>
             Determines whether or not the specified time is contained within this segment
             </summary>
             <param name="time">The time to check</param>
             <returns>True if this segment contains the specified time, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.Overlaps(System.TimeSpan,System.TimeSpan)">
             <summary>
             Determines whether or not the specified time range overlaps with this segment
             </summary>
             <param name="start">The start of the range</param>
             <param name="end">The end of the range</param>
             <returns>True if the specified range overlaps this time segment, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursSegment.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
            </member>
        <member name="T:QuantConnect.Securities.MarketHoursState">
             <summary>
             Specifies the open/close state for a <see cref="T:QuantConnect.Securities.MarketHoursSegment" />
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursState.Closed">
             <summary>
             The market is not open
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursState.PreMarket">
             <summary>
             The market is open, but before normal trading hours
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursState.Market">
             <summary>
             The market is open and within normal trading hours
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursState.PostMarket">
             <summary>
             The market is open, but after normal trading hours
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Option.CurrentPriceOptionPriceModel">
             <summary>
             Provides a default implementation of <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" /> that does not compute any
             greeks and uses the current price for the theoretical price. 
             <remarks>This is a stub implementation until the real models are implemented</remarks>
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.CurrentPriceOptionPriceModel.Evaluate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> containing the current <see cref="P:QuantConnect.Securities.Security.Price" />
             and a default, empty instance of <see cref="!:FirstOrderGreeks" />
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>An instance of <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> containing the theoretical
             price of the specified option contract</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.ConstantQLDividendYieldEstimator">
             <summary>
             Class implements default flat dividend yield curve estimator, implementing <see cref="T:QuantConnect.Securities.Option.IQLDividendYieldEstimator" />.  
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.ConstantQLDividendYieldEstimator.#ctor(System.Double)">
             <summary>
             Constructor initializes class with constant dividend yield. 
             </summary>
             <param name="dividendYield"></param>
            </member>
        <member name="M:QuantConnect.Securities.Option.ConstantQLDividendYieldEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current flat estimate of the dividend yield
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>The estimate</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.ConstantQLRiskFreeRateEstimator">
             <summary>
             Class implements default flat risk free curve, implementing <see cref="T:QuantConnect.Securities.Option.IQLRiskFreeRateEstimator" />.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.ConstantQLRiskFreeRateEstimator.#ctor(System.Double)">
             <summary>
             Constructor initializes class with risk free rate constant
             </summary>
             <param name="riskFreeRate"></param>
            </member>
        <member name="M:QuantConnect.Securities.Option.ConstantQLRiskFreeRateEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current flat estimate of the risk free rate
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>The estimate</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.ConstantQLUnderlyingVolatilityEstimator">
             <summary>
             Class implements default underlying constant volatility estimator (<see cref="T:QuantConnect.Securities.Option.IQLUnderlyingVolatilityEstimator" />.), that projects the underlying own volatility 
             model into corresponding option pricing model.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.ConstantQLUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current estimate of the underlying volatility
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>The estimate</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.IQLDividendYieldEstimator">
             <summary>
             Defines QuantLib dividend yield estimator for option pricing model. User may define his own estimators, 
             including those forward and backward looking ones.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.IQLDividendYieldEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current estimate of the stock dividend yield
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>Dividend yield</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.IOptionPriceModel">
             <summary>
             Defines a model used to calculate the theoretical price of an option contract.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Evaluates the specified option contract to compute a theoretical price, IV and greeks
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>An instance of <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> containing the theoretical
             price of the specified option contract</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.IQLRiskFreeRateEstimator">
             <summary>
             Defines QuantLib risk free rate estimator for option pricing model. 
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.IQLRiskFreeRateEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current estimate of the risk free rate
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>Risk free rate</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.IQLUnderlyingVolatilityEstimator">
             <summary>
             Defines QuantLib underlying volatility estimator for option pricing model. User may define his own estimators, 
             including those forward and backward looking ones.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.IQLUnderlyingVolatilityEstimator.Estimate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Returns current estimate of the underlying volatility
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>Volatility</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.Option">
             <summary>
             Option Security Object Implementation for Option Assets
             </summary>
             <seealso cref="T:QuantConnect.Securities.Security" />
            </member>
        <member name="F:QuantConnect.Securities.Option.Option.DefaultSettlementDays">
             <summary>
             The default number of days required to settle an equity sale
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Option.Option.DefaultSettlementTime">
             <summary>
             The default time of day for settlement
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.Cash,QuantConnect.Securities.Option.OptionSymbolProperties)">
             <summary>
             Constructor for the option security
             </summary>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="config">The subscription configuration for this security</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.Option.OptionSymbolProperties)">
             <summary>
             Constructor for the option security
             </summary>
             <param name="symbol">The symbol of the security</param>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.StrikePrice">
             <summary>
             Gets the strike price
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.Expiry">
             <summary>
             Gets the expiration date
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.Right">
             <summary>
             Gets the right being purchased (call [right to buy] or put [right to sell])
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.Style">
             <summary>
             Gets the option style
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.ContractUnitOfTrade">
             <summary>
             When the holder of an equity option exercises one contract, or when the writer of an equity option is assigned 
             an exercise notice on one contract, this unit of trade, usually 100 shares of the underlying security, changes hands.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.ContractMultiplier">
             <summary>
             The contract multiplier for the option security
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.GetAggregateExerciseAmount">
             <summary>
             Aggregate exercise amount or aggregate contract value. It is the total amount of cash one will pay (or receive) for the shares of the 
             underlying stock if he/she decides to exercise (or is assigned an exercise notice). This amount is not the premium paid or received for an equity option.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.GetExerciseQuantity(System.Int32)">
             <summary>
             Returns the actual number of the underlying shares that are going to change hands on exercise. For instance, after reverse split 
             we may have 1 option contract with multiplier of 100 with right to buy/sell only 50 shares of underlying stock. 
             </summary>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.IsAutoExercised(System.Decimal)">
             <summary>
             Checks if option is eligible for automatic exercise on expiration
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.GetIntrinsicValue(System.Decimal)">
             <summary>
             Intrinsic value function of the option
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.GetPayOff(System.Decimal)">
             <summary>
             Option payoff function at expiration time
             </summary>
             <param name="underlyingPrice">The price of the underlying</param>
             <returns></returns>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.ExerciseSettlement">
             <summary>
             Specifies if option contract has physical or cash settlement on exercise
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.Underlying">
             <summary>
             Gets or sets the underlying security object.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.PriceModel">
             <summary>
             Gets or sets the price model for this option security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.OptionExerciseModel">
             <summary>
             Fill model used to produce fill events for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.EnableGreekApproximation">
             <summary>
             When enabled, approximates Greeks if corresponding pricing model didn't calculate exact numbers
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.Option.ContractFilter">
             <summary>
             Gets or sets the contract filter
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.SetFilter(System.Int32,System.Int32)">
             <summary>
             Sets the <see cref="P:QuantConnect.Securities.Option.Option.ContractFilter" /> to a new instance of the filter
             using the specified min and max strike values. Contracts with expirations further than 35
             days out will also be filtered.
             </summary>
             <param name="minStrike">The min strike rank relative to market price, for example, -1 would put
             a lower bound of one strike under market price, where a +1 would put a lower bound of one strike
             over market price</param>
             <param name="maxStrike">The max strike rank relative to market place, for example, -1 would put
             an upper bound of on strike under market price, where a +1 would be an upper bound of one strike
             over market price</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.SetFilter(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan)">
             <summary>
             Sets the <see cref="P:QuantConnect.Securities.Option.Option.ContractFilter" /> to a new instance of the filter
             using the specified min and max strike and expiration range values
             </summary>
             <param name="minStrike">The min strike rank relative to market price, for example, -1 would put
             a lower bound of one strike under market price, where a +1 would put a lower bound of one strike
             over market price</param>
             <param name="maxStrike">The max strike rank relative to market place, for example, -1 would put
             an upper bound of on strike under market price, where a +1 would be an upper bound of one strike
             over market price</param>
             <param name="minExpiry">The minimum time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in less than 10 days</param>
             <param name="maxExpiry">The maxmium time until expiry to include, for example, TimeSpan.FromDays(10)
             would exclude contracts expiring in more than 10 days</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.Option.SetFilter(System.Func{QuantConnect.Securities.OptionFilterUniverse,QuantConnect.Securities.OptionFilterUniverse})">
             <summary>
             Sets the <see cref="P:QuantConnect.Securities.Option.Option.ContractFilter" /> to a new universe selection function
             </summary>
             <param name="universeFunc">new universe selection function</param>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionCache">
             <summary>
             Option specific caching support
             </summary>
             <remarks>Class is virtually empty and scheduled to be made obsolete. Potentially could be used for user data storage.</remarks>
             <seealso cref="T:QuantConnect.Securities.SecurityCache" />
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionDataFilter">
             <summary>
             Option packet by packet data filtering mechanism for dynamically detecting bad ticks.
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityDataFilter" />
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionExchange">
             <summary>
             Option exchange class - information and helper tools for option exchange properties
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionExchange.TradingDaysPerYear">
             <summary>
             Number of trading days per year for this security, 252.
             </summary>
             <remarks>Used for performance statistics to calculate sharpe ratio accurately</remarks>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Option.OptionExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionHolding">
             <summary>
             Option holdings implementation of the base securities class
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityHolding" />
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionHolding.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Option Holding Class constructor
             </summary>
             <param name="security">The option security being held</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionHolding.#ctor(QuantConnect.Securities.Security,QuantConnect.Securities.Option.OptionHolding)">
             <summary>
             Option Holding Class constructor
             </summary>
             <param name="security">The option security being held</param>
             <param name="holding">The option security holding</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionHolding.SplitUnderlying(System.Decimal)">
             <summary>
             Sets new option holding parameters (strike price, multiplier, unit of size) in accordance with underlying split event details
             </summary>
             <param name="splitFactor">Split ratio of the underlying split</param>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionPortfolioModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.ISecurityPortfolioModel" /> for options that supports
             default fills as well as option exercising.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderEvent)">
             <summary>
             Performs application of an OrderEvent to the portfolio
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">Option security</param>
             <param name="fill">The order event fill object to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPortfolioModel.ProcessExerciseFill(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.OrderEvent)">
             <summary>
             Processes exercise event to the portfolio
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">Option security</param>
             <param name="order">The order object to be applied</param>
             <param name="fill">The order event fill object to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPortfolioModel.ProcessAssignmentFill(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.Order,QuantConnect.Orders.OrderEvent)">
             <summary>
             Processes assignment event to the portfolio
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">Option security</param>
             <param name="order">The order object to be applied</param>
             <param name="fill">The order event fill object to be applied</param>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionPriceModelResult">
             <summary>
             Result type for <see cref="M:QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)" />
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionPriceModelResult.TheoreticalPrice">
             <summary>
             Gets the theoretical price as computed by the <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" />
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionPriceModelResult.ImpliedVolatility">
             <summary>
             Gets the implied volatility of the option contract
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionPriceModelResult.Greeks">
             <summary>
             Gets the various sensitivities as computed by the <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModelResult.#ctor(System.Decimal,QuantConnect.Data.Market.Greeks)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> class
             </summary>
             <param name="theoreticalPrice">The theoretical price computed by the price model</param>
             <param name="greeks">The sensitivities (greeks) computed by the price model</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModelResult.#ctor(System.Decimal,System.Func{System.Decimal},System.Func{QuantConnect.Data.Market.Greeks})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> class with lazy calculations of implied volatility and greeks
             </summary>
             <param name="theoreticalPrice">The theoretical price computed by the price model</param>
             <param name="impliedVolatility">The calculated implied volatility</param>
             <param name="greeks">The sensitivities (greeks) computed by the price model</param>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionPriceModels">
             <summary>
             Static class contains definitions of major option pricing models that can be used in LEAN
             </summary>
             <remarks>
             To introduce particular model into algorithm add the following line to the algorithm's Initialize() method: 
                 
                 option.PriceModel = OptionPriceModels.BjerksundStensland(); // Option pricing model of choice
             
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BlackScholes">
             <summary>
             Pricing engine for European vanilla options using analytical formulae. 
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_analytic_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BaroneAdesiWhaley">
             <summary>
             Barone-Adesi and Whaley pricing engine for American options (1987)
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_barone_adesi_whaley_approximation_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BjerksundStensland">
             <summary>
             Bjerksund and Stensland pricing engine for American options (1993) 
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_bjerksund_stensland_approximation_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.Integral">
             <summary>
             Pricing engine for European vanilla options using integral approach. 
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_integral_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.CrankNicolsonFD">
             <summary>
             Pricing engine for European options using finite-differences. 
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialJarrowRudd">
             <summary>
             Pricing engine for vanilla options using binomial trees. Jarrow-Rudd model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialCoxRossRubinstein">
             <summary>
             Pricing engine for vanilla options using binomial trees. Cox-Ross-Rubinstein(CRR) model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.AdditiveEquiprobabilities">
             <summary>
             Pricing engine for vanilla options using binomial trees. Additive Equiprobabilities model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialTrigeorgis">
             <summary>
             Pricing engine for vanilla options using binomial trees. Trigeorgis model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialTian">
             <summary>
             Pricing engine for vanilla options using binomial trees. Tian model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialLeisenReimer">
             <summary>
             Pricing engine for vanilla options using binomial trees. Leisen-Reimer model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionPriceModels.BinomialJoshi">
             <summary>
             Pricing engine for vanilla options using binomial trees. Joshi model.
             QuantLib reference: http://quantlib.org/reference/class_quant_lib_1_1_f_d_european_engine.html
             </summary>
             <returns>New option price model instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.BearCallSpread(QuantConnect.Symbol,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Bear Call Spread strategy, that consists of two calls with the same expiration but different strikes.
             The strike price of the short call is below the strike of the long call. This is a credit spread.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The strike price of the short call</param>
             <param name="leg2Strike">The strike price of the long call</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.BearPutSpread(QuantConnect.Symbol,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Bear Put Spread strategy, that consists of two puts with the same expiration but different strikes.
             The strike price of the short put is below the strike of the long put. This is a debit spread.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The strike price of the long put</param>
             <param name="leg2Strike">The strike price of the short put</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.BullCallSpread(QuantConnect.Symbol,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Bull Call Spread strategy, that consists of two calls with the same expiration but different strikes.
             The strike price of the short call is higher than the strike of the long call. This is a debit spread.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The strike price of the long call</param>
             <param name="leg2Strike">The strike price of the short call</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.BullPutSpread(QuantConnect.Symbol,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Bull Put Spread strategy, that consists of two puts with the same expiration but different strikes.
             The strike price of the short put is above the strike of the long put. This is a credit spread.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The strike price of the short put</param>
             <param name="leg2Strike">The strike price of the long put</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.Straddle(QuantConnect.Symbol,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Straddle strategy, that is a combination of buying a call and buying a put, both with the same strike price and expiration.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="strike">The strike price of the both legs</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.Strangle(QuantConnect.Symbol,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Strangle strategy, that buying a call option and a put option with the same expiration date.
             The strike price of the call is above the strike of the put. 
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The strike price of the long call</param>
             <param name="leg2Strike">The strike price of the long put</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.CallButterfly(QuantConnect.Symbol,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Call Butterfly strategy, that consists of two short calls at a middle strike, and one long call each at a lower and upper strike.
             The upper and lower strikes must both be equidistant from the middle strike. 
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The upper strike price of the long call</param>
             <param name="leg2Strike">The middle strike price of the two short calls</param>
             <param name="leg3Strike">The lower strike price of the long call</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.PutButterfly(QuantConnect.Symbol,System.Decimal,System.Decimal,System.Decimal,System.DateTime)">
             <summary>
             Method creates new Put Butterfly strategy, that consists of two short puts at a middle strike, and one long put each at a lower and upper strike.
             The upper and lower strikes must both be equidistant from the middle strike. 
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="leg1Strike">The upper strike price of the long put</param>
             <param name="leg2Strike">The middle strike price of the two short puts</param>
             <param name="leg3Strike">The lower strike price of the long put</param>
             <param name="expiration">Option expiration date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.CallCalendarSpread(QuantConnect.Symbol,System.Decimal,System.DateTime,System.DateTime)">
             <summary>
             Method creates new Call Calendar Spread strategy, that is a short one call option and long a second call option with a more distant expiration.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="strike">The strike price of the both legs</param>
             <param name="expiration1">Option expiration near date</param>
             <param name="expiration2">Option expiration far date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionStrategies.PutCalendarSpread(QuantConnect.Symbol,System.Decimal,System.DateTime,System.DateTime)">
             <summary>
             Method creates new Put Calendar Spread strategy, that is a short one put option and long a second put option with a more distant expiration.
             </summary>
             <param name="canonicalOption">Option symbol</param>
             <param name="strike">The strike price of the both legs</param>
             <param name="expiration1">Option expiration near date</param>
             <param name="expiration2">Option expiration far date</param>
             <returns>Option strategy specification</returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionStrategy">
             <summary>
             Option strategy specification class. Describes option strategy and its parameters for trading.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.Name">
             <summary>
             Option strategy name
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.Underlying">
             <summary>
             Underlying symbol of the strategy
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegs">
             <summary>
             Option strategy legs 
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.UnderlyingLegs">
             <summary>
             Option strategy underlying legs (usually 0 or 1 legs)
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionStrategy.OptionLegData">
             <summary>
             This class is a POCO containing basic data for the option legs of the strategy
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.Right">
             <summary>
             Option right (type) of the option leg
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.Quantity">
             <summary>
             Quantity multiplier used to specify proper scale (and direction) of the leg within the strategy
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.Expiration">
             <summary>
             Expiration date of the leg
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.Strike">
             <summary>
             Strike price of the leg
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.OrderType">
             <summary>
             Type of order that is to be sent to the market on strategy execution
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.OptionLegData.OrderPrice">
             <summary>
             Order limit price of the leg in case limit order is sent to the market on strategy execution
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionStrategy.UnderlyingLegData">
             <summary>
             This class is a POCO containing basic data for the underlying leg of the strategy
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.UnderlyingLegData.Quantity">
             <summary>
             Quantity multiplier used to specify proper scale (and direction) of the leg within the strategy
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.UnderlyingLegData.OrderType">
             <summary>
             Type of order that is to be sent to the market on strategy execution
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionStrategy.UnderlyingLegData.OrderPrice">
             <summary>
             Order limit price of the leg in case limit order is sent to the market on strategy execution
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Option.OptionSymbolProperties">
             <summary>
             Represents common properties for a specific option contract
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Option.OptionSymbolProperties.ContractUnitOfTrade">
             <summary>
             When the holder of an equity option exercises one contract, or when the writer of an equity option is assigned 
             an exercise notice on one contract, this unit of trade, usually 100 shares of the underlying security, changes hands.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionSymbolProperties.#ctor(System.String,System.String,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Creates an instance of the <see cref="T:QuantConnect.Securities.Option.OptionSymbolProperties" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.OptionSymbolProperties.#ctor(QuantConnect.Securities.SymbolProperties)">
             <summary>
             Creates an instance of the <see cref="T:QuantConnect.Securities.Option.OptionSymbolProperties" /> class from <see cref="T:QuantConnect.Securities.SymbolProperties" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.OptionMarginModel">
             <summary>
             Represents a simple option margining model. 
             </summary>
             <remarks>
             Options are not traded on margin. Margin requirements exist though for those portfolios with short positions. 
             Current implementation covers only single long/naked short option positions.
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.OptionMarginModel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the current leverage of the security
             </summary>
             <param name="security">The security to get leverage for</param>
             <returns>The current leverage in the security</returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.SetLeverage(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Sets the leverage for the applicable securities, i.e, options.
             </summary>
             <param name="security"></param>
             <param name="leverage">The new leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the total margin required to execute the specified order in units of the account currency including fees
             </summary>
             <param name="security">The security to compute initial margin for</param>
             <param name="order">The order to be executed</param>
             <returns>The total margin in terms of the currency quoted in the order</returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)">
             <summary>
             Gets the margin currently alloted to the specified holding
             </summary>
             <param name="security">The security to compute maintenance margin for</param>
             <returns>The maintenance margin required for the </returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin cash available for a trade
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The security to be traded</param>
             <param name="direction">The direction of the trade</param>
             <returns>The margin available for the trade</returns>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OptionMarginModel.GetMarginRequirement(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Private method takes option security and its holding and returns required margin. Method considers all short positions naked. 
             </summary>
             <param name="security">Option security</param>
             <param name="value">Holding value</param>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Securities.Option.QLOptionPriceModel">
             <summary>
             Provides QuantLib(QL) implementation of <see cref="T:QuantConnect.Securities.Option.IOptionPriceModel" /> to support major option pricing models, available in QL. 
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Option.QLOptionPriceModel.#ctor(System.Func{QLNet.GeneralizedBlackScholesProcess,QLNet.IPricingEngine},QuantConnect.Securities.Option.IQLUnderlyingVolatilityEstimator,QuantConnect.Securities.Option.IQLRiskFreeRateEstimator,QuantConnect.Securities.Option.IQLDividendYieldEstimator)">
             <summary>
             Method constructs QuantLib option price model with necessary estimators of underlying volatility, risk free rate, and underlying dividend yield
             </summary>
             <param name="pricingEngineFunc">Function modeled stochastic process, and returns new pricing engine to run calculations for that option</param>
             <param name="underlyingVolEstimator">The underlying volatility estimator</param>
             <param name="riskFreeRateEstimator">The risk free rate estimator</param>
             <param name="dividendYieldEstimator">The underlying dividend yield estimator</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.QLOptionPriceModel.#ctor(System.Func{QuantConnect.Symbol,QLNet.GeneralizedBlackScholesProcess,QLNet.IPricingEngine},QuantConnect.Securities.Option.IQLUnderlyingVolatilityEstimator,QuantConnect.Securities.Option.IQLRiskFreeRateEstimator,QuantConnect.Securities.Option.IQLDividendYieldEstimator)">
             <summary>
             Method constructs QuantLib option price model with necessary estimators of underlying volatility, risk free rate, and underlying dividend yield
             </summary>
             <param name="pricingEngineFunc">Function takes option and modeled stochastic process, and returns new pricing engine to run calculations for that option</param>
             <param name="underlyingVolEstimator">The underlying volatility estimator</param>
             <param name="riskFreeRateEstimator">The risk free rate estimator</param>
             <param name="dividendYieldEstimator">The underlying dividend yield estimator</param>
            </member>
        <member name="M:QuantConnect.Securities.Option.QLOptionPriceModel.Evaluate(QuantConnect.Securities.Security,QuantConnect.Data.Slice,QuantConnect.Data.Market.OptionContract)">
             <summary>
             Evaluates the specified option contract to compute a theoretical price, IV and greeks
             </summary>
             <param name="security">The option security object</param>
             <param name="slice">The current data slice. This can be used to access other information
             available to the algorithm</param>
             <param name="contract">The option contract to evaluate</param>
             <returns>An instance of <see cref="T:QuantConnect.Securities.Option.OptionPriceModelResult" /> containing the theoretical
             price of the specified option contract</returns>
            </member>
        <member name="M:QuantConnect.Securities.Option.QLOptionPriceModel.EvaluateOption(QLNet.VanillaOption)">
             <summary>
             Runs option evaluation and logs exceptions
             </summary>
             <param name="option"></param>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Securities.PatternDayTradingMarginModel">
             <summary>
             Represents a simple margining model where margin/leverage depends on market state (open or close).
             During regular market hours, leverage is 4x, otherwise 2x
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.PatternDayTradingMarginModel" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.PatternDayTradingMarginModel" />
             </summary>
             <param name="closedMarketLeverage">Leverage used outside regular market hours</param>
             <param name="openMarketLeverage">Leverage used during regular market hours</param>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.SetLeverage(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Sets the leverage for the applicable securities, i.e, equities
             </summary>
             <remarks>
             Do nothing, we use a constant leverage for this model
             </remarks>
             <param name="security">The security to set leverage to</param>
             <param name="leverage">The new leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.PatternDayTradingMarginModel.GetMarginCorrectionFactor(QuantConnect.Securities.Security)">
             <summary>
             Get margin correction factor if not in regular market hours
             </summary>
             <param name="security">The security to apply conditional leverage to</param>
             <returns>The margin correction factor</returns>
            </member>
        <member name="T:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.IVolatilityModel" /> that computes the
             annualized sample standard deviation of daily returns as the volatility of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.Volatility">
             <summary>
             Gets the volatility of the security as a percentage
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel" /> class
             </summary>
             <param name="periods">The number of periods (days) to wait until updating the value</param>
            </member>
        <member name="M:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.Update(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Updates this model using the new price information in
             the specified security instance
             </summary>
             <param name="security">The security to calculate volatility for</param>
             <param name="data"></param>
            </member>
        <member name="M:QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security,System.DateTime)">
             <summary>
             Returns history requirements for the volatility model expressed in the form of history request
             </summary>
             <param name="security">The security of the request</param>
             <param name="utcTime">The date of the request</param>
             <returns>History request object list, or empty if no requirements</returns>
            </member>
        <member name="T:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel">
             <summary>
             Provides an implementation of <see cref="T:QuantConnect.Securities.IVolatilityModel" /> that computes the
             relative standard deviation as the volatility of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel.Volatility">
             <summary>
             Gets the volatility of the security as a percentage
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel.#ctor(System.TimeSpan,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel" /> class
             </summary>
             <param name="periodSpan">The time span representing one 'period' length</param>
             <param name="periods">The nuber of 'period' lengths to wait until updating the value</param>
            </member>
        <member name="M:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel.Update(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Updates this model using the new price information in
             the specified security instance
             </summary>
             <param name="security">The security to calculate volatility for</param>
             <param name="data"></param>
            </member>
        <member name="M:QuantConnect.Securities.RelativeStandardDeviationVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security,System.DateTime)">
             <summary>
             Returns history requirements for the volatility model expressed in the form of history request
             </summary>
             <param name="security">The security of the request</param>
             <param name="utcTime">The date/time of the request</param>
             <returns>History request object list, or empty if no requirements</returns>
            </member>
        <member name="T:QuantConnect.Securities.SecurityDatabaseKey">
             <summary>
             Represents the key to a single entry in the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> or the <see cref="T:QuantConnect.Securities.SymbolPropertiesDatabase" />
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityDatabaseKey.Wildcard">
             <summary>
             Represents that the specified symbol or market field will match all
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityDatabaseKey.Market">
             <summary>
             The market. If null, ignore market filtering
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityDatabaseKey.Symbol">
             <summary>
             The symbol. If null, ignore symbol filtering
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityDatabaseKey.SecurityType">
             <summary>
             The security type
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.#ctor(System.String,System.String,QuantConnect.SecurityType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityDatabaseKey" /> class
             </summary>
             <param name="market">The market</param>
             <param name="symbol">The symbol. specify null to apply to all symbols in market/security type</param>
             <param name="securityType">The security type</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.Parse(System.String)">
             <summary>
             Parses the specified string as a <see cref="T:QuantConnect.Securities.SecurityDatabaseKey" />
             </summary>
             <param name="key">The string representation of the key</param>
             <returns>A new <see cref="T:QuantConnect.Securities.SecurityDatabaseKey" /> instance</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.Equals(QuantConnect.Securities.SecurityDatabaseKey)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.Equals(System.Object)">
             <summary>
             Determines whether the specified object is equal to the current object.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.GetHashCode">
             <summary>
             Serves as the default hash function. 
             </summary>
             <returns>
             A hash code for the current object.
             </returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDatabaseKey.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
            </member>
        <member name="T:QuantConnect.Securities.SecurityExchangeHours">
             <summary>
             Represents the schedule of a security exchange. This includes daily regular and extended market hours
             as well as holidays and early closes.
             </summary>
             <remarks>
             This type assumes that IsOpen will be called with increasingly future times, that is, the calls should never back
             track in time. This assumption is required to prevent time zone conversions on every call.
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchangeHours.TimeZone">
             <summary>
             Gets the time zone this exchange resides in
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchangeHours.Holidays">
             <summary>
             Gets the holidays for the exchange
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchangeHours.MarketHours">
             <summary>
             Gets the market hours for this exchange
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchangeHours.EarlyCloses">
             <summary>
             Gets the early closes for this exchange
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(NodaTime.DateTimeZone)">
             <summary>
             Gets a <see cref="T:QuantConnect.Securities.SecurityExchangeHours" /> instance that is always open
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.#ctor(NodaTime.DateTimeZone,System.Collections.Generic.IEnumerable{System.DateTime},System.Collections.Generic.IReadOnlyDictionary{System.DayOfWeek,QuantConnect.Securities.LocalMarketHours},System.Collections.Generic.IReadOnlyDictionary{System.DateTime,System.TimeSpan})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityExchangeHours" /> class
             </summary>
             <param name="timeZone">The time zone the dates and hours are represented in</param>
             <param name="holidayDates">The dates this exchange is closed for holiday</param>
             <param name="marketHoursForEachDayOfWeek">The exchange's schedule for each day of the week</param>
             <param name="earlyCloses">The dates this exchange has an early close</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime,System.Boolean)">
             <summary>
             Determines if the exchange is open at the specified local date time.
             </summary>
             <param name="localDateTime">The time to check represented as a local time</param>
             <param name="extendedMarket">True to use the extended market hours, false for just regular market hours</param>
             <returns>True if the exchange is considered open at the specified time, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime,System.DateTime,System.Boolean)">
             <summary>
             Determines if the exchange is open at any point in time over the specified interval.
             </summary>
             <param name="startLocalDateTime">The start of the interval in local time</param>
             <param name="endLocalDateTime">The end of the interval in local time</param>
             <param name="extendedMarket">True to use the extended market hours, false for just regular market hours</param>
             <returns>True if the exchange is considered open at the specified time, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)">
             <summary>
             Determines if the exchange will be open on the date specified by the local date time
             </summary>
             <param name="localDateTime">The date time to check if the day is open</param>
             <returns>True if the exchange will be open on the specified date, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.GetMarketHours(System.DateTime)">
             <summary>
             Helper to access the market hours field based on the day of week
             </summary>
             <param name="localDateTime">The local date time to retrieve market hours for</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime,System.Boolean)">
             <summary>
             Gets the local date time corresponding to the next market open following the specified time
             </summary>
             <param name="localDateTime">The time to begin searching for market open (non-inclusive)</param>
             <param name="extendedMarket">True to include extended market hours in the search</param>
             <returns>The next market opening date time following the specified local date time</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime,System.Boolean)">
             <summary>
             Gets the local date time corresponding to the next market close following the specified time
             </summary>
             <param name="localDateTime">The time to begin searching for market close (non-inclusive)</param>
             <param name="extendedMarket">True to include extended market hours in the search</param>
             <returns>The next market closing date time following the specified local date time</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.SetMarketHoursForDay(System.DayOfWeek,QuantConnect.Securities.LocalMarketHours@)">
             <summary>
             Helper to extract market hours from the <see cref="F:QuantConnect.Securities.SecurityExchangeHours._openHoursByDay" /> dictionary, filling
             in Closed instantes when not present
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.GetMarketHours(System.DayOfWeek)">
             <summary>
             Helper to access the market hours field based on the day of week
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchangeHours.IsTimeAfterEarlyClose(System.DateTime)">
             <summary>
             Helper to determine if the current time is after a market early close
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.MarketHoursDatabase">
             <summary>
             Provides access to exchange hours and raw data times zones in various markets
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.MarketHoursDatabase.AlwaysOpen">
             <summary>
             Gets an instant of <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> that will always return <see cref="M:QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(NodaTime.DateTimeZone)" />
             for each call to <see cref="M:QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(System.String,QuantConnect.Symbol,QuantConnect.SecurityType,NodaTime.DateTimeZone)" />
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.MarketHoursDatabase.ExchangeHoursListing">
             <summary>
             Gets all the exchange hours held by this provider
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.#ctor(System.Collections.Generic.IReadOnlyDictionary{QuantConnect.Securities.SecurityDatabaseKey,QuantConnect.Securities.MarketHoursDatabase.Entry})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class
             </summary>
             <param name="exchangeHours">The full listing of exchange hours by key</param>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(QuantConnect.Data.SubscriptionDataConfig,NodaTime.DateTimeZone)">
             <summary>
             Performs a lookup using the specified information and returns the exchange hours if found,
             if exchange hours are not found, an exception is thrown
             </summary>
             <param name="configuration">The subscription data config to get exchange hours for</param>
             <param name="overrideTimeZone">Specify this time zone to override the resolved time zone from the market hours database.
             This value will also be used as the time zone for SecurityType.Base with no market hours database entry.
             If null is specified, no override will be performed. If null is specified, and it's SecurityType.Base, then Utc will be used.</param>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(System.String,QuantConnect.Symbol,QuantConnect.SecurityType,NodaTime.DateTimeZone)">
             <summary>
             Performs a lookup using the specified information and returns the exchange hours if found,
             if exchange hours are not found, an exception is thrown
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="overrideTimeZone">Specify this time zone to override the resolved time zone from the market hours database.
             This value will also be used as the time zone for SecurityType.Base with no market hours database entry.
             If null is specified, no override will be performed. If null is specified, and it's SecurityType.Base, then Utc will be used.</param>
             <returns>The exchange hours for the specified security</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(System.String,QuantConnect.Symbol,QuantConnect.SecurityType)">
             <summary>
             Performs a lookup using the specified information and returns the data's time zone if found,
             if an entry is not found, an exception is thrown
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded</param>
             <param name="securityType">The security type of the symbol</param>
             <returns>The raw data time zone for the specified security</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.FromDataFolder">
             <summary>
             Gets the instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class produced by reading in the market hours
             data found in /Data/market-hours/
             </summary>
             <returns>A <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class that represents the data in the market-hours folder</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.FromFile(System.String)">
             <summary>
             Reads the specified file as a market hours database instance
             </summary>
             <param name="path">The market hours database file path</param>
             <returns>A new instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.GetEntry(System.String,System.String,QuantConnect.SecurityType,NodaTime.DateTimeZone)">
             <summary>
             Gets the entry for the specified market/symbol/security-type
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="overrideTimeZone">Specify this time zone to override the resolved time zone from the market hours database.
             This value will also be used as the time zone for SecurityType.Base with no market hours database entry.
             If null is specified, no override will be performed. If null is specified, and it's SecurityType.Base, then Utc will be used.</param>
             <returns>The entry matching the specified market/symbol/security-type</returns>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.GetEntry(System.String,QuantConnect.Symbol,QuantConnect.SecurityType,NodaTime.DateTimeZone)">
             <summary>
             Gets the entry for the specified market/symbol/security-type
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded (Symbol class)</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="overrideTimeZone">Specify this time zone to override the resolved time zone from the market hours database.
             This value will also be used as the time zone for SecurityType.Base with no market hours database entry.
             If null is specified, no override will be performed. If null is specified, and it's SecurityType.Base, then Utc will be used.</param>
             <returns>The entry matching the specified market/symbol/security-type</returns>
            </member>
        <member name="T:QuantConnect.Securities.MarketHoursDatabase.Entry">
             <summary>
             Represents a single entry in the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" />
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursDatabase.Entry.DataTimeZone">
             <summary>
             Gets the raw data time zone for this entry
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.MarketHoursDatabase.Entry.ExchangeHours">
             <summary>
             Gets the exchange hours for this entry
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.MarketHoursDatabase.Entry.#ctor(NodaTime.DateTimeZone,QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase.Entry" /> class
             </summary>
             <param name="dataTimeZone">The raw data time zone</param>
             <param name="exchangeHours">The security exchange hours for this entry</param>
            </member>
        <member name="T:QuantConnect.Securities.ISecurityProvider">
             <summary>
             Represents a type capable of fetching the holdings for the specified symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)">
             <summary>
             Retrieves a summary of the holdings for the specified symbol
             </summary>
             <param name="symbol">The symbol to get holdings for</param>
             <returns>The holdings for the symbol or null if the symbol is invalid and/or not in the portfolio</returns>
            </member>
        <member name="T:QuantConnect.Securities.SecurityProviderExtensions">
             <summary>
             Provides extension methods for the <see cref="T:QuantConnect.Securities.ISecurityProvider" /> interface.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityProviderExtensions.GetHoldingsQuantity(QuantConnect.Securities.ISecurityProvider,QuantConnect.Symbol)">
             <summary>
             Extension method to return the quantity of holdings, if no holdings are present, then zero is returned.
             </summary>
             <param name="provider">The <see cref="T:QuantConnect.Securities.ISecurityProvider" /></param>
             <param name="symbol">The symbol we want holdings quantity for</param>
             <returns>The quantity of holdings for the specified symbol</returns>
            </member>
        <member name="T:QuantConnect.Securities.IOrderProcessor">
             <summary>
             Represents a type capable of processing orders
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProcessor.Process(QuantConnect.Orders.OrderRequest)">
             <summary>
             Adds the specified order to be processed
             </summary>
             <param name="request">The <see cref="T:QuantConnect.Orders.OrderRequest" /> to be processed</param>
             <returns>The <see cref="T:QuantConnect.Orders.OrderTicket" /> for the corresponding <see cref="P:QuantConnect.Orders.OrderRequest.OrderId" /></returns>
            </member>
        <member name="T:QuantConnect.Securities.ISecurityMarginModel">
             <summary>
             Represents a security's model of margining
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the current leverage of the security
             </summary>
             <param name="security">The security to get leverage for</param>
             <returns>The current leverage in the security</returns>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Sets the leverage for the applicable securities, i.e, equities
             </summary>
             <remarks>
             This is added to maintain backwards compatibility with the old margin/leverage system
             </remarks>
             <param name="security">The security to set leverage for</param>
             <param name="leverage">The new leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the total margin required to execute the specified order
             </summary>
             <param name="security"></param>
             <param name="order">The order to be executed</param>
             <returns>The total margin in terms of the currency quoted in the order</returns>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)">
             <summary>
             Gets the margin currently alloted to the specified holding
             </summary>
             <param name="security">The security to compute maintenance margin for</param>
             <returns>The maintenance margin required for the </returns>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin cash available for a trade
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The security to be traded</param>
             <param name="direction">The direction of the trade</param>
             <returns>The margin available for the trade</returns>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.IOrderProvider">
             <summary>
             Represents a type capable of fetching Order instances by its QC order id or by a brokerage id
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.IOrderProvider.OrdersCount">
             <summary>
             Gets the current number of orders that have been processed
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProvider.GetOrderById(System.Int32)">
             <summary>
             Get the order by its id
             </summary>
             <param name="orderId">Order id to fetch</param>
             <returns>The order with the specified id, or null if no match is found</returns>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(System.String)">
             <summary>
             Gets the order by its brokerage id
             </summary>
             <param name="brokerageId">The brokerage id to fetch</param>
             <returns>The first order matching the brokerage id, or null if no match is found</returns>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func{QuantConnect.Orders.OrderTicket,System.Boolean})">
             <summary>
             Gets and enumerable of <see cref="T:QuantConnect.Orders.OrderTicket" /> matching the specified <paramref name="filter" />
             </summary>
             <param name="filter">The filter predicate used to find the required order tickets. If null is specified then all tickets are returned</param>
             <returns>An enumerable of <see cref="T:QuantConnect.Orders.OrderTicket" /> matching the specified <paramref name="filter" /></returns>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProvider.GetOrderTicket(System.Int32)">
             <summary>
             Gets the order ticket for the specified order id. Returns null if not found
             </summary>
             <param name="orderId">The order's id</param>
             <returns>The order ticket with the specified id, or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Securities.IOrderProvider.GetOrders(System.Func{QuantConnect.Orders.Order,System.Boolean})">
             <summary>
             Gets all orders matching the specified filter. Specifying null will return an enumerable
             of all orders.
             </summary>
             <param name="filter">Delegate used to filter the orders</param>
             <returns>All open orders this order provider currently holds</returns>
            </member>
        <member name="T:QuantConnect.Securities.OrderProviderExtensions">
             <summary>
             Provides extension methods for the <see cref="T:QuantConnect.Securities.IOrderProvider" /> interface
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider,System.Int64)">
             <summary>
             Gets the order by its brokerage id
             </summary>
             <param name="orderProvider">The order provider to search</param>
             <param name="brokerageId">The brokerage id to fetch</param>
             <returns>The first order matching the brokerage id, or null if no match is found</returns>
            </member>
        <member name="M:QuantConnect.Securities.OrderProviderExtensions.GetOrderByBrokerageId(QuantConnect.Securities.IOrderProvider,System.Int32)">
             <summary>
             Gets the order by its brokerage id
             </summary>
             <param name="orderProvider">The order provider to search</param>
             <param name="brokerageId">The brokerage id to fetch</param>
             <returns>The first order matching the brokerage id, or null if no match is found</returns>
            </member>
        <member name="T:QuantConnect.Securities.ISecurityPortfolioModel">
             <summary>
             Performs order fill application to portfolio
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderEvent)">
             <summary>
             Performs application of an OrderEvent to the portfolio
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The fill's security</param>
             <param name="fill">The order event fill object to be applied</param>
            </member>
        <member name="T:QuantConnect.Securities.DefaultMarginCallModel">
             <summary>
             Represents the model responsible for picking which orders should be executed during a margin call
             </summary>
             <remarks>
             This is a default implementation that orders the generated margin call orders by the unrealized
             profit (losers first) and executes each order synchronously until we're within the margin requirements
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.DefaultMarginCallModel.Portfolio">
             <summary>
             Gets the portfolio that margin calls will be transacted against
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.DefaultMarginCallModel.#ctor(QuantConnect.Securities.SecurityPortfolioManager)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.DefaultMarginCallModel" /> class
             </summary>
             <param name="portfolio">The portfolio object to receive margin calls</param>
            </member>
        <member name="M:QuantConnect.Securities.DefaultMarginCallModel.GenerateMarginCallOrder(QuantConnect.Securities.Security,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Generates a new order for the specified security taking into account the total margin
             used by the account. Returns null when no margin call is to be issued.
             </summary>
             <param name="security">The security to generate a margin call order for</param>
             <param name="netLiquidationValue">The net liquidation value for the entire account</param>
             <param name="totalMargin">The total margin used by the account in units of base currency</param>
             <param name="maintenanceMarginRequirement">The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call</param>
             <returns>An order object representing a liquidation order to be executed to bring the account within margin requirements</returns>
            </member>
        <member name="M:QuantConnect.Securities.DefaultMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable{QuantConnect.Orders.SubmitOrderRequest})">
             <summary>
             Executes synchronous orders to bring the account within margin requirements.
             </summary>
             <param name="generatedMarginCallOrders">These are the margin call orders that were generated
             by individual security margin models.</param>
             <returns>The list of orders that were actually executed</returns>
            </member>
        <member name="T:QuantConnect.Securities.SecurityPortfolioModel">
             <summary>
             Provides a default implementation of <see cref="T:QuantConnect.Securities.ISecurityPortfolioModel" /> that simply
             applies the fills to the algorithm's portfolio. This implementation is intended to 
             handle all security types.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderEvent)">
             <summary>
             Performs application of an OrderEvent to the portfolio
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The fill's security</param>
             <param name="fill">The order event fill object to be applied</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityMarginModel">
             <summary>
             Represents a simple, constant margining model by specifying the percentages of required margin.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.#ctor(System.Decimal,System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityMarginModel" />
             </summary>
             <param name="initialMarginRequirement">The percentage of an order's absolute cost
             that must be held in free cash in order to place the order</param>
             <param name="maintenanceMarginRequirement">The percentage of the holding's absolute
             cost that must be held in free cash in order to avoid a margin call</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityMarginModel" />
             </summary>
             <param name="leverage">The leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)">
             <summary>
             Gets the current leverage of the security
             </summary>
             <param name="security">The security to get leverage for</param>
             <returns>The current leverage in the security</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security,System.Decimal)">
             <summary>
             Sets the leverage for the applicable securities, i.e, equities
             </summary>
             <remarks>
             This is added to maintain backwards compatibility with the old margin/leverage system
             </remarks>
             <param name="security"></param>
             <param name="leverage">The new leverage</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Gets the total margin required to execute the specified order in units of the account currency including fees
             </summary>
             <param name="security">The security to compute initial margin for</param>
             <param name="order">The order to be executed</param>
             <returns>The total margin in terms of the currency quoted in the order</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)">
             <summary>
             Gets the margin currently alloted to the specified holding
             </summary>
             <param name="security">The security to compute maintenance margin for</param>
             <returns>The maintenance margin required for the </returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin cash available for a trade
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The security to be traded</param>
             <param name="direction">The direction of the trade</param>
             <returns>The margin available for the trade</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of an order's absolute cost that must be held in free cash in order to place the order
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)">
             <summary>
             The percentage of the holding's absolute cost that must be held in free cash in order to avoid a margin call
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.ImmediateSettlementModel">
             <summary>
             Represents the model responsible for applying cash settlement rules
             </summary>
             <remarks>This model applies cash settlement immediately</remarks>
            </member>
        <member name="M:QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Securities.Security,System.DateTime,System.String,System.Decimal)">
             <summary>
             Applies cash settlement rules
             </summary>
             <param name="portfolio">The algorithm's portfolio</param>
             <param name="security">The fill's security</param>
             <param name="applicationTimeUtc">The fill time (in UTC)</param>
             <param name="currency">The currency symbol</param>
             <param name="amount">The amount of cash to apply</param>
            </member>
        <member name="T:QuantConnect.Securities.SymbolProperties">
             <summary>
             Represents common properties for a specific security, uniquely identified by market, symbol and security type
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SymbolProperties.Description">
             <summary>
             The description of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SymbolProperties.QuoteCurrency">
             <summary>
             The quote currency of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SymbolProperties.ContractMultiplier">
             <summary>
             The contract multiplier for the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SymbolProperties.MinimumPriceVariation">
             <summary>
             The minimum price variation (tick size) for the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SymbolProperties.LotSize">
             <summary>
             The lot size (lot size of the order) for the security
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SymbolProperties.#ctor(System.String,System.String,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Creates an instance of the <see cref="T:QuantConnect.Securities.SymbolProperties" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SymbolProperties.GetDefault(System.String)">
             <summary>
             Gets a default instance of the <see cref="T:QuantConnect.Securities.SymbolProperties" /> class for the specified <paramref name="quoteCurrency" />
             </summary>
             <param name="quoteCurrency">The quote currency of the symbol</param>
             <returns>A default instance of the<see cref="T:QuantConnect.Securities.SymbolProperties" /> class</returns>
            </member>
        <member name="T:QuantConnect.Securities.SymbolPropertiesDatabase">
             <summary>
             Provides access to specific properties for various symbols
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(System.String,System.String,QuantConnect.SecurityType,System.String)">
             <summary>
             Gets the symbol properties for the specified market/symbol/security-type
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="defaultQuoteCurrency">Specifies the quote currency to be used when returning a default instance of an entry is not found in the database</param>
             <returns>The symbol properties matching the specified market/symbol/security-type or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(System.String,QuantConnect.Symbol,QuantConnect.SecurityType,System.String)">
             <summary>
             Gets the symbol properties for the specified market/symbol/security-type
             </summary>
             <param name="market">The market the exchange resides in, i.e, 'usa', 'fxcm', ect...</param>
             <param name="symbol">The particular symbol being traded (Symbol class)</param>
             <param name="securityType">The security type of the symbol</param>
             <param name="defaultQuoteCurrency">Specifies the quote currency to be used when returning a default instance of an entry is not found in the database</param>
             <returns>The symbol properties matching the specified market/symbol/security-type or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder">
             <summary>
             Gets the instance of the <see cref="T:QuantConnect.Securities.SymbolPropertiesDatabase" /> class produced by reading in the symbol properties
             data found in /Data/symbol-properties/
             </summary>
             <returns>A <see cref="T:QuantConnect.Securities.SymbolPropertiesDatabase" /> class that represents the data in the symbol-properties folder</returns>
            </member>
        <member name="M:QuantConnect.Securities.SymbolPropertiesDatabase.FromCsvFile(System.String)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Securities.SymbolPropertiesDatabase" /> class by reading the specified csv file
             </summary>
             <param name="file">The csv file to be read</param>
             <returns>A new instance of the <see cref="T:QuantConnect.Securities.SymbolPropertiesDatabase" /> class representing the data in the specified file</returns>
            </member>
        <member name="M:QuantConnect.Securities.SymbolPropertiesDatabase.FromCsvLine(System.String,QuantConnect.Securities.SecurityDatabaseKey@)">
             <summary>
             Creates a new instance of <see cref="T:QuantConnect.Securities.SymbolProperties" /> from the specified csv line
             </summary>
             <param name="line">The csv line to be parsed</param>
             <param name="key">The key used to uniquely identify this security</param>
             <returns>A new <see cref="T:QuantConnect.Securities.SymbolProperties" /> for the specified csv line</returns>
            </member>
        <member name="T:QuantConnect.Securities.UniverseManager">
             <summary>
             Manages the algorithm's collection of universes
             </summary>
            </member>
        <member name="E:QuantConnect.Securities.UniverseManager.CollectionChanged">
             <summary>
             Event fired when a universe is added or removed
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.UniverseManager" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Add(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe})">
             <summary>
             Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Clear">
             <summary>
             Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Contains(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe})">
             <summary>
             Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
             </summary>
             <returns>
             true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
             </returns>
             <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.CopyTo(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe}[],System.Int32)">
             <summary>
             Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
             </summary>
             <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array" /> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex" /> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Remove(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe})">
             <summary>
             Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <returns>
             true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
             </returns>
             <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
            </member>
        <member name="P:QuantConnect.Securities.UniverseManager.Count">
             <summary>
             Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </summary>
             <returns>
             The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
             </returns>
            </member>
        <member name="P:QuantConnect.Securities.UniverseManager.IsReadOnly">
             <summary>
             Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
             </summary>
             <returns>
             true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
             </returns>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)">
             <summary>
             Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
             </summary>
             <returns>
             true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.
             </returns>
             <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe)">
             <summary>
             Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <param name="key">The object to use as the key of the element to add.</param><param name="universe">The object to use as the value of the element to add.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception><exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.Remove(QuantConnect.Symbol)">
             <summary>
             Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
             <param name="key">The key of the element to remove.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol,QuantConnect.Data.UniverseSelection.Universe@)">
             <summary>
             Gets the value associated with the specified key.
             </summary>
             <returns>
             true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.
             </returns>
             <param name="key">The key whose value to get.</param><param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param><exception cref="T:System.ArgumentNullException"><paramref name="key" /> is null.</exception>
            </member>
        <member name="P:QuantConnect.Securities.UniverseManager.Item(QuantConnect.Symbol)">
             <summary>
             Gets or sets the element with the specified key.
             </summary>
             <returns>
             The element with the specified key.
             </returns>
             <param name="symbol">The key of the element to get or set.</param><exception cref="T:System.ArgumentNullException"><paramref name="symbol" /> is null.</exception><exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="symbol" /> is not found.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</exception>
            </member>
        <member name="P:QuantConnect.Securities.UniverseManager.Keys">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
            </member>
        <member name="P:QuantConnect.Securities.UniverseManager.Values">
             <summary>
             Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </summary>
             <returns>
             An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
             </returns>
            </member>
        <member name="M:QuantConnect.Securities.UniverseManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Securities.UniverseManager.CollectionChanged" /> event
             </summary>
             <param name="e"></param>
            </member>
        <member name="T:QuantConnect.Securities.UnsettledCashAmount">
             <summary>
             Represents a pending cash amount waiting for settlement time
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.UnsettledCashAmount.SettlementTimeUtc">
             <summary>
             The settlement time (in UTC)
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.UnsettledCashAmount.Currency">
             <summary>
             The currency symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.UnsettledCashAmount.Amount">
             <summary>
             The amount of cash
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.UnsettledCashAmount.#ctor(System.DateTime,System.String,System.Decimal)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Securities.UnsettledCashAmount" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.SecurityIdentifier">
             <summary>
             Defines a unique identifier for securities
             </summary>
             <remarks>
             The SecurityIdentifier contains information about a specific security.
             This includes the symbol and other data specific to the SecurityType.
             The symbol is limited to 12 characters
             </remarks>
            </member>
        <member name="F:QuantConnect.SecurityIdentifier.Empty">
             <summary>
             Gets an instance of <see cref="T:QuantConnect.SecurityIdentifier" /> that is empty, that is, one with no symbol specified
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityIdentifier.DefaultDate">
             <summary>
             Gets the date to be used when it does not apply.
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityIdentifier.InvalidSymbolCharacters">
             <summary>
             Gets the set of invalids symbol characters
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.HasUnderlying">
             <summary>
             Gets whether or not this <see cref="T:QuantConnect.SecurityIdentifier" /> is a derivative,
             that is, it has a valid <see cref="P:QuantConnect.SecurityIdentifier.Underlying" /> property
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.Underlying">
             <summary>
             Gets the underlying security identifier for this security identifier. When there is
             no underlying, this property will return a value of <see cref="F:QuantConnect.SecurityIdentifier.Empty" />.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.Date">
             <summary>
             Gets the date component of this identifier. For equities this
             is the first date the security traded. Technically speaking,
             in LEAN, this is the first date mentioned in the map_files.
             For options this is the expiry date. For futures this is the
             settlement date. For forex and cfds this property will throw an
             exception as the field is not specified.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.Symbol">
             <summary>
             Gets the original symbol used to generate this security identifier.
             For equities, by convention this is the first ticker symbol for which
             the security traded
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.Market">
             <summary>
             Gets the market component of this security identifier. If located in the
             internal mappings, the full string is returned. If the value is unknown,
             the integer value is returned as a string.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.SecurityType">
             <summary>
             Gets the security type component of this security identifier.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.StrikePrice">
             <summary>
             Gets the option strike price. This only applies to SecurityType.Option
             and will thrown anexception if accessed otherwse.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.OptionRight">
             <summary>
             Gets the option type component of this security identifier. This
             only applies to SecurityType.Open and will throw an exception if
             accessed otherwise.
             </summary>
            </member>
        <member name="P:QuantConnect.SecurityIdentifier.OptionStyle">
             <summary>
             Gets the option style component of this security identifier. This
             only applies to SecurityType.Open and will throw an exception if
             accessed otherwise.
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.#ctor(System.String,System.UInt64)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.SecurityIdentifier" /> class
             </summary>
             <param name="symbol">The base36 string encoded as a long using alpha [0-9A-Z]</param>
             <param name="properties">Other data defining properties of the symbol including market,
             security type, listing or expiry date, strike/call/put/style for options, ect...</param>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.#ctor(System.String,System.UInt64,QuantConnect.SecurityIdentifier)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.SecurityIdentifier" /> class
             </summary>
             <param name="symbol">The base36 string encoded as a long using alpha [0-9A-Z]</param>
             <param name="properties">Other data defining properties of the symbol including market,
             security type, listing or expiry date, strike/call/put/style for options, ect...</param>
             <param name="underlying">Specifies a <see cref="T:QuantConnect.SecurityIdentifier" /> that represents the underlying security</param>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime,QuantConnect.SecurityIdentifier,System.String,System.Decimal,QuantConnect.OptionRight,QuantConnect.OptionStyle)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for an option
             </summary>
             <param name="expiry">The date the option expires</param>
             <param name="underlying">The underlying security's symbol</param>
             <param name="market">The market</param>
             <param name="strike">The strike price</param>
             <param name="optionRight">The option type, call or put</param>
             <param name="optionStyle">The option style, American or European</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified option security</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime,QuantConnect.SecurityIdentifier,System.String)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for a future
             </summary>
             <param name="expiry">The date the option expires</param>
             <param name="underlying">The underlying security's symbol</param>
             <param name="market">The market</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified futures security</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateEquity(System.String,System.String,System.Boolean)">
             <summary>
             Helper overload that will search the mapfiles to resolve the first date. This implementation
             uses the configured <see cref="T:QuantConnect.Interfaces.IMapFileProvider" /> via the <see cref="F:QuantConnect.Util.Composer.Instance" />
             </summary>
             <param name="symbol">The symbol as it is known today</param>
             <param name="market">The market</param>
             <param name="mapSymbol">Specifies if symbol should be mapped using map file provider</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified symbol today</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime,System.String,System.String)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for an equity
             </summary>
             <param name="date">The first date this security traded (in LEAN this is the first date in the map_file</param>
             <param name="symbol">The ticker symbol this security traded under on the <paramref name="date" /></param>
             <param name="market">The security's market</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified equity security</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateBase(System.String,System.String)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for a custom security
             </summary>
             <param name="symbol">The ticker symbol of this security</param>
             <param name="market">The security's market</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified base security</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateForex(System.String,System.String)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for a forex pair
             </summary>
             <param name="symbol">The currency pair in the format similar to: 'EURUSD'</param>
             <param name="market">The security's market</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified forex pair</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GenerateCfd(System.String,System.String)">
             <summary>
             Generates a new <see cref="T:QuantConnect.SecurityIdentifier" /> for a CFD security
             </summary>
             <param name="symbol">The CFD contract symbol</param>
             <param name="market">The security's market</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> representing the specified CFD security</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.Generate(System.DateTime,System.String,QuantConnect.SecurityType,System.String,System.Decimal,QuantConnect.OptionRight,QuantConnect.OptionStyle,System.Nullable{QuantConnect.SecurityIdentifier})">
             <summary>
             Generic generate method. This method should be used carefully as some parameters are not required and
             some parameters mean different things for different security types
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.DecodeBase36(System.String)">
             <summary>
             Converts an upper case alpha numeric string into a long
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.EncodeBase36(System.UInt64)">
             <summary>
             Converts a long to an uppercase alpha numeric string
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.NormalizeStrike(System.Decimal,System.UInt64@)">
             <summary>
             The strike is normalized into deci-cents and then a scale factor
             is also saved to bring it back to un-normalized
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.Pow(System.UInt32,System.Int32)">
             <summary>
             Accurately performs the integer exponentiation
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.Parse(System.String)">
             <summary>
             Parses the specified string into a <see cref="T:QuantConnect.SecurityIdentifier" />
             The string must be a 40 digit number. The first 20 digits must be parseable
             to a 64 bit unsigned integer and contain ancillary data about the security.
             The second 20 digits must also be parseable as a 64 bit unsigned integer and
             contain the symbol encoded from base36, this provides for 12 alpha numeric case
             insensitive characters.
             </summary>
             <param name="value">The string value to be parsed</param>
             <returns>A new <see cref="T:QuantConnect.SecurityIdentifier" /> instance if the <paramref name="value" /> is able to be parsed.</returns>
             <exception cref="T:System.FormatException">This exception is thrown if the string's length is not exactly 40 characters, or
             if the components are unable to be parsed as 64 bit unsigned integers</exception>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.TryParse(System.String,QuantConnect.SecurityIdentifier@)">
             <summary>
             Attempts to parse the specified <see paramref="value" /> as a <see cref="T:QuantConnect.SecurityIdentifier" />.
             </summary>
             <param name="value">The string value to be parsed</param>
             <param name="identifier">The result of parsing, when this function returns true, <paramref name="identifier" />
             was properly created and reflects the input string, when this function returns false <paramref name="identifier" />
             will equal default(SecurityIdentifier)</param>
             <returns>True on success, otherwise false</returns>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.TryParse(System.String,QuantConnect.SecurityIdentifier@,System.Exception@)">
             <summary>
             Helper method impl to be used by parse and tryparse
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.TryParseProperties(System.String,System.Exception@,QuantConnect.SecurityIdentifier@)">
             <summary>
             Parses the string into its component ulong pieces
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.ExtractFromProperties(System.UInt64,System.UInt64)">
             <summary>
             Extracts the embedded value from _otherData
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.Equals(System.Object)">
             <summary>
             Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.GetHashCode">
             <summary>
             Serves as a hash function for a particular type. 
             </summary>
             <returns>
             A hash code for the current <see cref="T:System.Object" />.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.op_Equality(QuantConnect.SecurityIdentifier,QuantConnect.SecurityIdentifier)">
             <summary>
             Override equals operator
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.op_Inequality(QuantConnect.SecurityIdentifier,QuantConnect.SecurityIdentifier)">
             <summary>
             Override not equals operator
             </summary>
            </member>
        <member name="M:QuantConnect.SecurityIdentifier.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.SecurityIdentifier.SidBox">
             <summary>
             Provides a reference type container for a security identifier instance.
             This is used to maintain a reference to an underlying
             </summary>
            </member>
        <member name="T:QuantConnect.SeriesSampler">
             <summary>
             A type capable of taking a chart and resampling using a linear interpolation strategy
             </summary>
            </member>
        <member name="M:QuantConnect.SeriesSampler.#ctor(System.TimeSpan)">
             <summary>
             Creates a new SeriesSampler to sample Series data on the specified resolution
             </summary>
             <param name="resolution">The desired sampling resolution</param>
            </member>
        <member name="M:QuantConnect.SeriesSampler.Sample(QuantConnect.Series,System.DateTime,System.DateTime)">
             <summary>
             Samples the given series
             </summary>
             <param name="series">The series to be sampled</param>
             <param name="start">The date to start sampling, if before start of data then start of data will be used</param>
             <param name="stop">The date to stop sampling, if after stop of data, then stop of data will be used</param>
             <returns>The sampled series</returns>
            </member>
        <member name="M:QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary{System.String,QuantConnect.Chart},System.DateTime,System.DateTime)">
             <summary>
             Samples the given charts
             </summary>
             <param name="charts">The charts to be sampled</param>
             <param name="start">The date to start sampling</param>
             <param name="stop">The date to stop sampling</param>
             <returns>The sampled charts</returns>
            </member>
        <member name="M:QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint,QuantConnect.ChartPoint,System.Int64)">
             <summary>
             Linear interpolation used for sampling
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Custom.Quandl">
             <summary>
             Quandl Data Type - Import generic data from quandl, without needing to define Reader methods. 
             This reads the headers of the data imported, and dynamically creates properties for the imported data.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Custom.Quandl.IsAuthCodeSet">
             <summary>
             Flag indicating whether or not the Quanl auth code has been set yet
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Custom.Quandl.EndTime">
             <summary>
             The end time of this data. Some data covers spans (trade bars) and as such we want
             to know the entire time span covered
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Custom.Quandl.Period">
             <summary>
             Gets a time span of one day
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.Quandl.#ctor">
             <summary>
             Default quandl constructor uses Close as its value column
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Custom.Quandl.#ctor(System.String)">
             <summary>
             Constructor for creating customized quandl instance which doesn't use "Close" as its value item.
             </summary>
             <param name="valueColumnName"></param>
            </member>
        <member name="M:QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Generic Reader Implementation for Quandl Data.
             </summary>
             <param name="config">Subscription configuration</param>
             <param name="line">CSV line of data from the souce</param>
             <param name="date">Date of the requested line</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Custom.Quandl.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Quandl Source Locator: Using the Quandl V1 API automatically set the URL for the dataset.
             </summary>
             <param name="config">Subscription configuration object</param>
             <param name="date">Date of the data file we're looking for</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>STRING API Url for Quandl.</returns>
            </member>
        <member name="M:QuantConnect.Data.Custom.Quandl.SetAuthCode(System.String)">
             <summary>
             Set the auth code for the quandl set to the QuantConnect auth code.
             </summary>
             <param name="authCode"></param>
            </member>
        <member name="T:QuantConnect.Data.DynamicData">
             <summary>
             Dynamic Data Class: Accept flexible data, adapting to the columns provided by source.
             </summary>
             <remarks>Intended for use with Quandl class.</remarks>
            </member>
        <member name="M:QuantConnect.Data.DynamicData.GetMetaObject(System.Linq.Expressions.Expression)">
             <summary>
             Get the metaObject required for Dynamism.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.DynamicData.SetProperty(System.String,System.Object)">
             <summary>
             Sets the property with the specified name to the value. This is a case-insensitve search.
             </summary>
             <param name="name">The property name to set</param>
             <param name="value">The new property value</param>
             <returns>Returns the input value back to the caller</returns>
            </member>
        <member name="M:QuantConnect.Data.DynamicData.GetProperty(System.String)">
             <summary>
             Gets the property's value with the specified name. This is a case-insensitve search.
             </summary>
             <param name="name">The property name to access</param>
             <returns>object value of BaseData</returns>
            </member>
        <member name="M:QuantConnect.Data.DynamicData.HasProperty(System.String)">
             <summary>
             Gets whether or not this dynamic data instance has a property with the specified name.
             This is a case-insensitve search.
             </summary>
             <param name="name">The property name to check for</param>
             <returns>True if the property exists, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Data.DynamicData.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="T:QuantConnect.Data.DynamicData.DynamicDataMetaObject">
             <summary>
             Custom implementation of Dynamic Data MetaObject
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.DataConsolidator`1">
             <summary>
             Represents a type that consumes BaseData instances and fires an event with consolidated
             and/or aggregated data.
             </summary>
             <typeparam name="TInput">The type consumed by the consolidator</typeparam>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DataConsolidator`1.Update(QuantConnect.Data.IBaseData)">
             <summary>
             Updates this consolidator with the specified data
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DataConsolidator`1.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="E:QuantConnect.Data.Consolidators.DataConsolidator`1.DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.DataConsolidator`1.Consolidated">
             <summary>
             Gets the most recently consolidated piece of data. This will be null if this consolidator
             has not produced any data yet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.DataConsolidator`1.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.DataConsolidator`1.InputType">
             <summary>
             Gets the type consumed by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.DataConsolidator`1.OutputType">
             <summary>
             Gets the type produced by this consolidator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DataConsolidator`1.Update(`0)">
             <summary>
             Updates this consolidator with the specified data. This method is
             responsible for raising the DataConsolidated event
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.DataConsolidator`1.OnDataConsolidated(QuantConnect.Data.IBaseData)">
             <summary>
             Event invocator for the DataConsolidated event. This should be invoked
             by derived classes when they have consolidated a new piece of data.
             </summary>
             <param name="consolidated">The newly consolidated data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.DataConsolidatedHandler">
             <summary>
             Event handler type for the IDataConsolidator.DataConsolidated event
             </summary>
             <param name="sender">The consolidator that fired the event</param>
             <param name="consolidated">The consolidated piece of data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.IDataConsolidator">
             <summary>
             Represents a type capable of taking BaseData updates and firing events containing new
             'consolidated' data. These types can be used to produce larger bars, or even be used to
             transform the data before being sent to another component. The most common usage of these
             types is with indicators.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IDataConsolidator.Consolidated">
             <summary>
             Gets the most recently consolidated piece of data. This will be null if this consolidator
             has not produced any data yet.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IDataConsolidator.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IDataConsolidator.InputType">
             <summary>
             Gets the type consumed by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IDataConsolidator.OutputType">
             <summary>
             Gets the type produced by this consolidator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)">
             <summary>
             Updates this consolidator with the specified data
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="E:QuantConnect.Data.Consolidators.IDataConsolidator.DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced
             </summary>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.IdentityDataConsolidator`1">
             <summary>
             Represents the simplest DataConsolidator implementation, one that is defined
             by a straight pass through of the data. No projection or aggregation is performed.
             </summary>
             <typeparam name="T">The type of data</typeparam>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IdentityDataConsolidator`1.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.IdentityDataConsolidator`1.OutputType">
             <summary>
             Gets the type produced by this consolidator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.IdentityDataConsolidator`1.Update(`0)">
             <summary>
             Updates this consolidator with the specified data
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.IdentityDataConsolidator`1.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.SequentialConsolidator">
             <summary>
             This consolidator wires up the events on its First and Second consolidators
             such that data flows from the First to Second consolidator. It's output comes
             from the Second.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.First">
             <summary>
             Gets the first consolidator to receive data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.Second">
             <summary>
             Gets the second consolidator that ends up receiving data produced
             by the first
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.Consolidated">
             <summary>
             Gets the most recently consolidated piece of data. This will be null if this consolidator
             has not produced any data yet.
             
             For a SequentialConsolidator, this is the output from the 'Second' consolidator.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.WorkingData">
             <summary>
             Gets a clone of the data being currently consolidated
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.InputType">
             <summary>
             Gets the type consumed by this consolidator
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Consolidators.SequentialConsolidator.OutputType">
             <summary>
             Gets the type produced by this consolidator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.IBaseData)">
             <summary>
             Updates this consolidator with the specified data
             </summary>
             <param name="data">The new data for the consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.SequentialConsolidator.Scan(System.DateTime)">
             <summary>
             Scans this consolidator to see if it should emit a bar due to time passing
             </summary>
             <param name="currentLocalTime">The current time in the local time zone (same as <see cref="P:QuantConnect.Data.BaseData.Time" />)</param>
            </member>
        <member name="E:QuantConnect.Data.Consolidators.SequentialConsolidator.DataConsolidated">
             <summary>
             Event handler that fires when a new piece of data is produced
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.SequentialConsolidator.#ctor(QuantConnect.Data.Consolidators.IDataConsolidator,QuantConnect.Data.Consolidators.IDataConsolidator)">
             <summary>
             Creates a new consolidator that will pump date through the first, and then the output
             of the first into the second. This enables 'wrapping' or 'composing' of consolidators
             </summary>
             <param name="first">The first consolidator to receive data</param>
             <param name="second">The consolidator to receive first's output</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.IBaseData)">
             <summary>
             Event invocator for the DataConsolidated event. This should be invoked
             by derived classes when they have consolidated a new piece of data.
             </summary>
             <param name="consolidated">The newly consolidated data</param>
            </member>
        <member name="T:QuantConnect.Data.Consolidators.TradeBarConsolidator">
             <summary>
             A data consolidator that can make bigger bars from smaller ones over a given
             time span or a count of pieces of data.
             
             Use this consolidator to turn data of a lower resolution into data of a higher resolution,
             for example, if you subscribe to minute data but want to have a 15 minute bar.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidator.FromResolution(QuantConnect.Resolution)">
             <summary>
             Create a new TradeBarConsolidator for the desired resolution
             </summary>
             <param name="resolution">The resoluton desired</param>
             <returns>A consolidator that produces data on the resolution interval</returns>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidator.#ctor(System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the period
             </summary>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidator.#ctor(System.Int32)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidator.#ctor(System.Int32,System.TimeSpan)">
             <summary>
             Creates a consolidator to produce a new 'TradeBar' representing the last count pieces of data or the period, whichever comes first
             </summary>
             <param name="maxCount">The number of pieces to accept before emiting a consolidated bar</param>
             <param name="period">The minimum span of time before emitting a consolidated bar</param>
            </member>
        <member name="M:QuantConnect.Data.Consolidators.TradeBarConsolidator.AggregateBar(QuantConnect.Data.Market.TradeBar@,QuantConnect.Data.Market.TradeBar)">
             <summary>
             Aggregates the new 'data' into the 'workingBar'. The 'workingBar' will be
             null following the event firing
             </summary>
             <param name="workingBar">The bar we're building, null if the event was just fired and we're starting a new trade bar</param>
             <param name="data">The new data</param>
            </member>
        <member name="T:QuantConnect.Chart">
             <summary>
             Single Parent Chart Object for Custom Charting
             </summary>
            </member>
        <member name="F:QuantConnect.Chart.Name">
             Name of the Chart:
            </member>
        <member name="F:QuantConnect.Chart.ChartType">
             Type of the Chart, Overlayed or Stacked.
            </member>
        <member name="F:QuantConnect.Chart.Series">
             List of Series Objects for this Chart:
            </member>
        <member name="M:QuantConnect.Chart.#ctor">
             <summary>
             Default constructor for chart:
             </summary>
            </member>
        <member name="M:QuantConnect.Chart.#ctor(System.String,QuantConnect.ChartType)">
             <summary>
             Chart Constructor:
             </summary>
             <param name="name">Name of the Chart</param>
             <param name="type"> Type of the chart</param>
            </member>
        <member name="M:QuantConnect.Chart.#ctor(System.String)">
             <summary>
             Constructor for a chart
             </summary>
             <param name="name">String name of the chart</param>
            </member>
        <member name="M:QuantConnect.Chart.AddSeries(QuantConnect.Series)">
             <summary>
             Add a reference to this chart series:
             </summary>
             <param name="series">Chart series class object</param>
            </member>
        <member name="M:QuantConnect.Chart.GetUpdates">
             <summary>
             Fetch the updates of the chart, and save the index position.
             </summary>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Series">
             <summary>
             Chart Series Object - Series data and properties for a chart:
             </summary>
            </member>
        <member name="F:QuantConnect.Series.Name">
             <summary>
             Name of the Series:
             </summary>
            </member>
        <member name="F:QuantConnect.Series.Unit">
             <summary>
             Axis for the chart series.
             </summary>
            </member>
        <member name="F:QuantConnect.Series.Index">
             <summary>
             Index/position of the series on the chart.
             </summary>
            </member>
        <member name="F:QuantConnect.Series.Values">
             <summary>
              Values for the series plot:
             These values are assumed to be in ascending time order (first points earliest, last points latest)
             </summary>
            </member>
        <member name="F:QuantConnect.Series.SeriesType">
             <summary>
             Chart type for the series:
             </summary>
            </member>
        <member name="F:QuantConnect.Series.Color">
             <summary>
             Color the series 
             </summary>
            </member>
        <member name="F:QuantConnect.Series.ScatterMarkerSymbol">
             <summary>
             Shape or symbol for the marker in a scatter plot
             </summary>
            </member>
        <member name="F:QuantConnect.Series._updatePosition">
             Get the index of the last fetch update request to only retrieve the "delta" of the previous request.
            </member>
        <member name="M:QuantConnect.Series.#ctor">
             <summary>
             Default constructor for chart series
             </summary>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String)">
             <summary>
             Constructor method for Chart Series
             </summary>
             <param name="name">Name of the chart series</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType)">
             <summary>
             Foundational constructor on the series class
             </summary>
             <param name="name">Name of the series</param>
             <param name="type">Type of the series</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType,System.Int32)">
             <summary>
             Foundational constructor on the series class
             </summary>
             <param name="name">Name of the series</param>
             <param name="type">Type of the series</param>
             <param name="index">Index position on the chart of the series</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType,System.Int32,System.String)">
             <summary>
             Foundational constructor on the series class
             </summary>
             <param name="name">Name of the series</param>
             <param name="type">Type of the series</param>
             <param name="index">Index position on the chart of the series</param>
             <param name="unit">Unit for the series axis</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType,System.String)">
             <summary>
             Constructor method for Chart Series
             </summary>
             <param name="name">Name of the chart series</param>
             <param name="type">Type of the chart series</param>
             <param name="unit">Unit of the serier</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType,System.String,System.Drawing.Color)">
             <summary>
             Constructor method for Chart Series
             </summary>
             <param name="name">Name of the chart series</param>
             <param name="type">Type of the chart series</param>
             <param name="unit">Unit of the serier</param>
             <param name="color">Color of the series</param>
            </member>
        <member name="M:QuantConnect.Series.#ctor(System.String,QuantConnect.SeriesType,System.String,System.Drawing.Color,QuantConnect.ScatterMarkerSymbol)">
             <summary>
             Constructor method for Chart Series
             </summary>
             <param name="name">Name of the chart series</param>
             <param name="type">Type of the chart series</param>
             <param name="unit">Unit of the serier</param>
             <param name="color">Color of the series</param>
             <param name="symbol">Symbol for the marker in a scatter plot series</param>
            </member>
        <member name="M:QuantConnect.Series.AddPoint(System.DateTime,System.Decimal,System.Boolean)">
             <summary>
             Add a new point to this series:
             </summary>
             <param name="time">Time of the chart point</param>
             <param name="value">Value of the chart point</param>
             <param name="liveMode">This is a live mode point</param>
            </member>
        <member name="M:QuantConnect.Series.GetUpdates">
             <summary>
             Get the updates since the last call to this function.
             </summary>
             <returns>List of the updates from the series</returns>
            </member>
        <member name="M:QuantConnect.Series.Purge">
             <summary>
             Removes the data from this series and resets the update position to 0
             </summary>
            </member>
        <member name="T:QuantConnect.ChartPoint">
             <summary>
             Single Chart Point Value Type for QCAlgorithm.Plot();
             </summary>
            </member>
        <member name="F:QuantConnect.ChartPoint.x">
             Time of this chart point: lower case for javascript encoding simplicty
            </member>
        <member name="F:QuantConnect.ChartPoint.y">
             Value of this chart point:  lower case for javascript encoding simplicty
            </member>
        <member name="M:QuantConnect.ChartPoint.#ctor">
             <summary>
             Default constructor. Using in SeriesSampler.
             </summary>
            </member>
        <member name="M:QuantConnect.ChartPoint.#ctor(System.Int64,System.Decimal)">
             <summary>
             Constructor that takes both x, y value paris
             </summary>
             <param name="xValue">X value often representing a time in seconds</param>
             <param name="yValue">Y value</param>
            </member>
        <member name="M:QuantConnect.ChartPoint.#ctor(System.DateTime,System.Decimal)">
            Constructor for datetime-value arguements:
            </member>
        <member name="M:QuantConnect.ChartPoint.#ctor(QuantConnect.ChartPoint)">
            Cloner Constructor:
            </member>
        <member name="M:QuantConnect.ChartPoint.ToString">
             <summary>
             Provides a readable string representation of this instance.
             </summary>
            </member>
        <member name="T:QuantConnect.SeriesType">
             <summary>
             Available types of charts
             </summary>
            </member>
        <member name="F:QuantConnect.SeriesType.Line">
             Line Plot for Value Types
            </member>
        <member name="F:QuantConnect.SeriesType.Scatter">
             Scatter Plot for Chart Distinct Types
            </member>
        <member name="F:QuantConnect.SeriesType.Candle">
             Charts
            </member>
        <member name="F:QuantConnect.SeriesType.Bar">
             Bar chart.
            </member>
        <member name="F:QuantConnect.SeriesType.Flag">
             Flag indicators
            </member>
        <member name="T:QuantConnect.ChartType">
             <summary>
             Type of chart - should we draw the series as overlayed or stacked
             </summary>
            </member>
        <member name="F:QuantConnect.ChartType.Overlay">
             Overlayed stacked
            </member>
        <member name="F:QuantConnect.ChartType.Stacked">
             Stacked series on top of each other.
            </member>
        <member name="T:QuantConnect.ScatterMarkerSymbol">
             <summary>
             Shape or symbol for the marker in a scatter plot
             </summary>
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.None">
             Circle symbol
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.Circle">
             Circle symbol
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.Square">
             Square symbol
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.Diamond">
             Diamond symbol
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.Triangle">
             Triangle symbol
            </member>
        <member name="F:QuantConnect.ScatterMarkerSymbol.TriangleDown">
             Triangle-down symbol
            </member>
        <member name="T:QuantConnect.Orders.OrderEvent">
             <summary>
             Order Event - Messaging class signifying a change in an order state and record the change in the user's algorithm portfolio 
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.OrderId">
             <summary>
             Id of the order this event comes from.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.Symbol">
             <summary>
             Easy access to the order symbol associated with this event.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.UtcTime">
             <summary>
             The date and time of this event (UTC).
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.Status">
             <summary>
             Status message of the order.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.OrderFee">
             <summary>
             The fee associated with the order (always positive value).
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.FillPrice">
             <summary>
             Fill price information about the order
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.FillPriceCurrency">
             <summary>
             Currency for the fill price
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.FillQuantity">
             <summary>
             Number of shares of the order that was filled in this event.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderEvent.AbsoluteFillQuantity">
             <summary>
             Public Property Absolute Getter of Quantity -Filled
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.OrderEvent.Direction">
             <summary>
             Order direction.
             </summary>
            </member>
        <member name="F:QuantConnect.Orders.OrderEvent.Message">
             <summary>
             Any message from the exchange.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.OrderEvent.#ctor(System.Int32,QuantConnect.Symbol,System.DateTime,QuantConnect.Orders.OrderStatus,QuantConnect.Orders.OrderDirection,System.Decimal,System.Int32,System.Decimal,System.String)">
             <summary>
             Order Event Constructor.
             </summary>
             <param name="orderId">Id of the parent order</param>
             <param name="symbol">Asset Symbol</param>
             <param name="utcTime">Date/time of this event</param>
             <param name="status">Status of the order</param>
             <param name="direction">The direction of the order this event belongs to</param>
             <param name="fillPrice">Fill price information if applicable.</param>
             <param name="fillQuantity">Fill quantity</param>
             <param name="orderFee">The order fee</param>
             <param name="message">Message from the exchange</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderEvent.#ctor(QuantConnect.Orders.Order,System.DateTime,System.Decimal,System.String)">
             <summary>
             Helper Constructor using Order to Initialize.
             </summary>
             <param name="order">Order for this order status</param>
             <param name="utcTime">Date/time of this event</param>
             <param name="orderFee">The order fee</param>
             <param name="message">Message from exchange or QC.</param>
            </member>
        <member name="M:QuantConnect.Orders.OrderEvent.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.OrderEvent.Clone">
             <summary>
             Returns a clone of the current object.
             </summary>
             <returns>The new clone object</returns>
            </member>
        <member name="T:QuantConnect.Packets.AlgorithmNodePacket">
             <summary>
             Algorithm Node Packet is a work task for the Lean Engine
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.AlgorithmNodePacket.#ctor(QuantConnect.Packets.PacketType)">
             <summary>
             Default constructor for the algorithm node:
             </summary>
             <param name="type"></param>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.UserId">
             <summary>
             User Id placing request
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.ProjectId">
             <summary>
             Project Id of the request
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.AlgorithmNodePacket.AlgorithmId">
             <summary>
             Algorithm Id - BacktestId or DeployId - Common Id property between packets.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.SessionId">
             <summary>
             User session Id for authentication
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.UserPlan">
             <summary>
             User subscriptions state - free or paid.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Language">
             <summary>
             Language flag: Currently represents IL code or Dynamic Scripted Types.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.ServerType">
             <summary>
             Server type for the deployment (512, 1024, 2048)
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.CompileId">
             <summary>
             Unique compile id of this backtest
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Version">
             <summary>
             Version number identifier for the lean engine.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Redelivered">
             <summary>
             An algorithm packet which has already been run and is being redelivered on this node.
             In this event we don't want to relaunch the task as it may result in unexpected behaviour for user.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Algorithm">
             <summary>
             Algorithm binary with zip of contents
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.RequestSource">
             <summary>
             Request source - Web IDE or API - for controling result handler behaviour
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.AlgorithmNodePacket.RamAllocation">
             <summary>
             The maximum amount of RAM (in MB) this algorithm is allowed to utilize
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Controls">
             <summary>
             Specifies values to control algorithm limits
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.Parameters">
             <summary>
             The parameter values used to set algorithm parameters
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmNodePacket.HistoryProvider">
             <summary>
             String name of the HistoryProvider we're running with
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.AlgorithmStatusPacket">
             <summary>
             Algorithm status update information packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.Status">
             <summary>
             Current algorithm status
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.ChartSubscription">
             <summary>
             Chart we're subscribed to for live trading.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.Message">
             <summary>
             Optional message or reason for state change.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmId">
             <summary>
             Algorithm Id associated with this status packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.ProjectId">
             <summary>
             Project Id associated with this status packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.AlgorithmStatusPacket.ChannelStatus">
             <summary>
             The current state of the channel
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.AlgorithmStatusPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.AlgorithmStatusPacket.#ctor(System.String,System.Int32,QuantConnect.AlgorithmStatus,System.String)">
             <summary>
             Initialize algorithm state packet:
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.BacktestNodePacket">
             <summary>
             Algorithm backtest task information packet.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.Name">
             <summary>
             Name of the backtest as randomly defined in the IDE.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.BacktestId">
             <summary>
             BacktestId / Algorithm Id for this task
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.PeriodStart">
             <summary>
             Backtest start-date as defined in the Initialize() method.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.PeriodFinish">
             <summary>
             Backtest end date as defined in the Initialize() method.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.TradeableDates">
             <summary>
             Estimated number of trading days in this backtest task based on the start-end dates.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestNodePacket.RunMode">
             <summary>
             Series or parallel runmode for the backtest
             </summary>
             <obsolete>The RunMode property is now obsolete and will always default to Series mode.</obsolete>
            </member>
        <member name="M:QuantConnect.Packets.BacktestNodePacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestNodePacket.#ctor(System.Int32,System.Int32,System.String,System.Byte[],System.Decimal,System.String,QuantConnect.UserPlan)">
             <summary>
             Initialize the backtest task packet.
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.BacktestResultPacket">
             <summary>
             Backtest result packet: send backtest information to GUI for user consumption.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.UserId">
             <summary>
             User Id placing this task
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.ProjectId">
             <summary>
             Project Id of the this task.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.SessionId">
             <summary>
             User Session Id
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.BacktestId">
             <summary>
             BacktestId for this result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.CompileId">
             <summary>
             Compile Id for the algorithm which generated this result packet.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.PeriodStart">
             <summary>
             Start of the backtest period as defined in Initialize() method.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.PeriodFinish">
             <summary>
             End of the backtest period as defined in the Initialize() method.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.DateRequested">
             <summary>
             DateTime (EST) the user requested this backtest.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.DateFinished">
             <summary>
             DateTime (EST) when the backtest was completed.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.Progress">
             <summary>
             Progress of the backtest as a percentage from 0-1 based on the days lapsed from start-finish.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.RunMode">
             <summary>
             Runmode for this backtest.
             </summary>
             <obsolete>The RunMode property has been made obsolete and all backtests will be run in series mode.</obsolete>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.Name">
             <summary>
             Name of this backtest.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.Results">
             <summary>
             Result data object for this backtest
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.ProcessingTime">
             <summary>
             Processing time of the algorithm (from moment the algorithm arrived on the algorithm node)
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResultPacket.TradeableDates">
             <summary>
             Estimated number of tradeable days in the backtest based on the start and end date or the backtest
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestResultPacket.#ctor">
             <summary>
             Default constructor for JSON Serialization
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestResultPacket.#ctor(System.String)">
             <summary>
             Compose the packet from a JSON string:
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestResultPacket.#ctor(QuantConnect.Packets.BacktestNodePacket,QuantConnect.Packets.BacktestResult,System.Decimal)">
             <summary>
             Compose result data packet - with tradable dates from the backtest job task and the partial result packet.
             </summary>
             <param name="job">Job that started this request</param>
             <param name="results">Results class for the Backtest job</param>
             <param name="progress">Progress of the packet. For the packet we assume progess of 100%.</param>
            </member>
        <member name="T:QuantConnect.Packets.BacktestResult">
             <summary>
             Backtest results object class - result specific items from the packet.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.Charts">
             <summary>
             Chart updates in this backtest since the last backtest result packet was sent.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.Orders">
             <summary>
             Order updates since the last backtest result packet was sent.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.ProfitLoss">
             <summary>
             Profit and loss results from closed trades.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.Statistics">
             <summary>
             Statistics information for the backtest.
             </summary>
             <remarks>The statistics are only generated on the last result packet of the backtest.</remarks>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.RuntimeStatistics">
             <summary>
             The runtime / dynamic statistics generated while a backtest is running.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.RollingWindow">
             <summary>
             Rolling window detailed statistics.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.BacktestResult.TotalPerformance">
             <summary>
             Rolling window detailed statistics.
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestResult.#ctor">
             <summary>
             Default Constructor
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.BacktestResult.#ctor(System.Collections.Generic.IDictionary{System.String,QuantConnect.Chart},System.Collections.Generic.IDictionary{System.Int32,QuantConnect.Orders.Order},System.Collections.Generic.IDictionary{System.DateTime,System.Decimal},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,QuantConnect.Statistics.AlgorithmPerformance},QuantConnect.Statistics.AlgorithmPerformance)">
             <summary>
             Constructor for the result class using dictionary objects.
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.DebugPacket">
             <summary>
             Send a simple debug message from the users algorithm to the console.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.DebugPacket.Message">
             <summary>
             String debug message to send to the users console
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.DebugPacket.AlgorithmId">
             <summary>
             Associated algorithm Id.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.DebugPacket.CompileId">
             <summary>
             Compile id of the algorithm sending this message
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.DebugPacket.ProjectId">
             <summary>
             Project Id for this message
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.DebugPacket.Toast">
             <summary>
             True to emit message as a popup notification (toast),
             false to emit message in console as text
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.DebugPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.DebugPacket.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean)">
             <summary>
             Create a new instance of the notify debug packet:
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.LiveNodePacket">
             <summary>
             Live job task packet: container for any live specific job variables
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveNodePacket.DeployId">
             <summary>
             Deploy Id for this live algorithm.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveNodePacket.Brokerage">
             <summary>
             String name of the brokerage we're trading with
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveNodePacket.BrokerageData">
             <summary>
             String-String Dictionary of Brokerage Data for this Live Job
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveNodePacket.DataQueueHandler">
             <summary>
             String name of the DataQueueHandler we're running with
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveNodePacket.#ctor">
             <summary>
             Default constructor for JSON of the Live Task Packet
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.LiveResultPacket">
             <summary>
             Live result packet from a lean engine algorithm.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.UserId">
             <summary>
             User Id sending result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.ProjectId">
             <summary>
             Project Id of the result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.SessionId">
             <summary>
             User session Id who issued the result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.DeployId">
             <summary>
             Live Algorithm Id (DeployId) for this result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.CompileId">
             <summary>
             Compile Id algorithm which generated this result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.Results">
             <summary>
             Result data object for this result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResultPacket.ProcessingTime">
             <summary>
             Processing time / running time for the live algorithm.
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveResultPacket.#ctor">
             <summary>
             Default constructor for JSON Serialization
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveResultPacket.#ctor(System.String)">
             <summary>
             Compose the packet from a JSON string:
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveResultPacket.#ctor(QuantConnect.Packets.LiveNodePacket,QuantConnect.Packets.LiveResult)">
             <summary>
             Compose Live Result Data Packet - With tradable dates
             </summary>
             <param name="job">Job that started this request</param>
             <param name="results">Results class for the Backtest job</param>
            </member>
        <member name="T:QuantConnect.Packets.LiveResult">
             <summary>
             Live results object class for packaging live result data.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.Charts">
             <summary>
             Charts updates for the live algorithm since the last result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.Holdings">
             <summary>
             Holdings dictionary of algorithm holdings information
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.Orders">
             <summary>
             Order updates since the last result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.ProfitLoss">
             <summary>
             Trade profit and loss information since the last algorithm result packet
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.Statistics">
             <summary>
             Statistics information sent during the algorithm operations.
             </summary>
             <remarks>Intended for update mode -- send updates to the existing statistics in the result GUI. If statistic key does not exist in GUI, create it</remarks>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.RuntimeStatistics">
             <summary>
             Runtime banner/updating statistics in the title banner of the live algorithm GUI.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LiveResult.ServerStatistics">
             <summary>
             Server status information, including CPU/RAM usage, ect...
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveResult.#ctor">
             <summary>
             Default Constructor
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LiveResult.#ctor(System.Collections.Generic.Dictionary{System.String,QuantConnect.Chart},System.Collections.Generic.Dictionary{System.Int32,QuantConnect.Orders.Order},System.Collections.Generic.Dictionary{System.DateTime,System.Decimal},System.Collections.Generic.Dictionary{System.String,QuantConnect.Holding},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             Constructor for the result class for dictionary objects
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.LogPacket">
             <summary>
             Simple log message instruction from the lean engine.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LogPacket.Message">
             <summary>
             Log message to the users console:
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.LogPacket.AlgorithmId">
             <summary>
             Algorithm Id requesting this logging
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LogPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.LogPacket.#ctor(System.String,System.String)">
             <summary>
             Create a new instance of the notify Log packet:
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.MarketToday">
             <summary>
             Market today information class
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.MarketToday.Date">
             <summary>
             Date this packet was generated.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketToday.Status">
             <summary>
             Given the dates and times above, what is the current market status - open or closed.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketToday.PreMarket">
             <summary>
             Premarket hours for today
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketToday.Open">
             <summary>
             Normal trading market hours for today
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketToday.PostMarket">
             <summary>
             Post market hours for today
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.MarketToday.#ctor">
             <summary>
             Default constructor (required for JSON serialization)
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.MarketHours">
             <summary>
             Market open hours model for pre, normal and post market hour definitions.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketHours.Start">
             <summary>
             Start time for this market hour category
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.MarketHours.End">
             <summary>
             End time for this market hour category
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.MarketHours.#ctor(System.DateTime,System.Double,System.Double)">
             <summary>
             Market hours initializer given an hours since midnight measure for the market hours today
             </summary>
             <param name="referenceDate">Reference date used for as base date from the specified hour offsets</param>
             <param name="defaultStart">Time in hours since midnight to start this open period.</param>
             <param name="defaultEnd">Time in hours since midnight to end this open period.</param>
            </member>
        <member name="T:QuantConnect.Packets.OrderEventPacket">
             <summary>
             Order event packet for passing updates on the state of an order to the portfolio. 
             </summary>
             <remarks>As an order is updated in pieces/partial fills the order fill price is passed back to the Algorithm Portfolio method</remarks>
            </member>
        <member name="F:QuantConnect.Packets.OrderEventPacket.Event">
             <summary>
             Order event object
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.OrderEventPacket.AlgorithmId">
             <summary>
             Algorithm id for this order event
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.OrderEventPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.OrderEventPacket.#ctor(System.String,QuantConnect.Orders.OrderEvent)">
             <summary>
             Create a new instance of the order event packet
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.Packet">
             <summary>
             Base class for packet messaging system
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Packet.Type">
             <summary>
             Packet type defined by a string enum
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.Packet.Channel">
             <summary>
             User unique specific channel endpoint to send the packets
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.Packet.#ctor(QuantConnect.Packets.PacketType)">
             <summary>
             Initialize the base class and setup the packet type.
             </summary>
             <param name="type">PacketType for the class.</param>
            </member>
        <member name="T:QuantConnect.Packets.PacketType">
             <summary>
             Classifications of internal packet system
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.PacketType.None">
             Default, unset:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.AlgorithmNode">
             Base type for backtest and live work
            </member>
        <member name="F:QuantConnect.Packets.PacketType.AutocompleteWork">
             Autocomplete Work Packet
            </member>
        <member name="F:QuantConnect.Packets.PacketType.AutocompleteResult">
             Result of the Autocomplete Job:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BacktestNode">
             Controller-&gt;Backtest Node Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BacktestResult">
             Packet out of backtest node:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BacktestWork">
             API-&gt; Controller Work Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.LiveNode">
             Controller -&gt; Live Node Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.LiveResult">
             Live Node -&gt; User Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.LiveWork">
             API -&gt; Controller Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.SecurityTypes">
             Node -&gt; User Algo Security Types
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BacktestError">
             Controller -&gt; User Error in Backtest Settings:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.AlgorithmStatus">
             Nodes -&gt; User Algorithm Status Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BuildWork">
             API -&gt; Compiler Work Packet:
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BuildSuccess">
             Compiler -&gt; User Build Success
            </member>
        <member name="F:QuantConnect.Packets.PacketType.BuildError">
             Compiler -&gt; User, Compile Error
            </member>
        <member name="F:QuantConnect.Packets.PacketType.RuntimeError">
             Node -&gt; User Algorithm Runtime Error
            </member>
        <member name="F:QuantConnect.Packets.PacketType.HandledError">
             Error is an internal handled error packet inside users algorithm
            </member>
        <member name="F:QuantConnect.Packets.PacketType.Log">
             Nodes -&gt; User Log Message
            </member>
        <member name="F:QuantConnect.Packets.PacketType.Debug">
             Nodes -&gt; User Debug Message
            </member>
        <member name="F:QuantConnect.Packets.PacketType.OrderEvent">
             Nodes -&gt; User, Order Update Event
            </member>
        <member name="F:QuantConnect.Packets.PacketType.Success">
             Boolean true/false success
            </member>
        <member name="F:QuantConnect.Packets.PacketType.History">
             History live job packets
            </member>
        <member name="F:QuantConnect.Packets.PacketType.CommandResult">
             Result from a command
            </member>
        <member name="F:QuantConnect.Packets.PacketType.GitHubHook">
             Hook from git hub
            </member>
        <member name="F:QuantConnect.Packets.PacketType.DocumentationResult">
             Documentation result from docs server
            </member>
        <member name="F:QuantConnect.Packets.PacketType.Documentation">
             Documentation request to the docs server
            </member>
        <member name="T:QuantConnect.Packets.RuntimeErrorPacket">
             <summary>
             Algorithm runtime error packet from the lean engine. 
             This is a managed error which stops the algorithm execution.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.RuntimeErrorPacket.Message">
             <summary>
             Runtime error message from the exception
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.RuntimeErrorPacket.AlgorithmId">
             <summary>
             Algorithm id which generated this runtime error
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.RuntimeErrorPacket.StackTrace">
             <summary>
             Error stack trace information string passed through from the Lean exception
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.RuntimeErrorPacket.UserId">
             <summary>
             User Id associated with the backtest that threw the error
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.RuntimeErrorPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.RuntimeErrorPacket.#ctor(System.Int32,System.String,System.String,System.String)">
             <summary>
             Create a new runtime error packet
             </summary>
            </member>
        <member name="T:QuantConnect.Packets.SecurityTypesPacket">
             <summary>
             Security types packet contains information on the markets the user data has requested.
             </summary>
            </member>
        <member name="F:QuantConnect.Packets.SecurityTypesPacket.Types">
             <summary>
             List of Security Type the user has requested (Equity, Forex, Futures etc).
             </summary>
            </member>
        <member name="P:QuantConnect.Packets.SecurityTypesPacket.TypesCSV">
             <summary>
             CSV formatted, lower case list of SecurityTypes for the web API.
             </summary>
            </member>
        <member name="M:QuantConnect.Packets.SecurityTypesPacket.#ctor">
             <summary>
             Default constructor for JSON
             </summary>
            </member>
        <member name="T:QuantConnect.Data.BaseData">
             <summary>
             Abstract base data class of QuantConnect. It is intended to be extended to define 
             generic user customizable data types while at the same time implementing the basics of data where possible
             </summary>
            </member>
        <member name="P:QuantConnect.Data.BaseData.DataType">
             <summary>
             Market Data Type of this data - does it come in individual price packets or is it grouped into OHLC.
             </summary>
             <remarks>Data is classed into two categories - streams of instantaneous prices and groups of OHLC data.</remarks>
            </member>
        <member name="P:QuantConnect.Data.BaseData.IsFillForward">
             <summary>
             True if this is a fill forward piece of data
             </summary>
            </member>
        <member name="P:QuantConnect.Data.BaseData.Time">
             <summary>
             Current time marker of this data packet.
             </summary>
             <remarks>All data is timeseries based.</remarks>
            </member>
        <member name="P:QuantConnect.Data.BaseData.EndTime">
             <summary>
             The end time of this data. Some data covers spans (trade bars) and as such we want
             to know the entire time span covered
             </summary>
            </member>
        <member name="P:QuantConnect.Data.BaseData.Symbol">
             <summary>
             Symbol representation for underlying Security
             </summary>
            </member>
        <member name="P:QuantConnect.Data.BaseData.Value">
             <summary>
             Value representation of this data packet. All data requires a representative value for this moment in time.
             For streams of data this is the price now, for OHLC packets this is the closing price.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.BaseData.Price">
             <summary>
             As this is a backtesting platform we'll provide an alias of value as price.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.BaseData.#ctor">
             <summary>
             Constructor for initialising the dase data class
             </summary>
            </member>
        <member name="M:QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. The returned object is assumed to be time stamped in the config.ExchangeTimeZone.
             </summary>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.UpdateTrade(System.Decimal,System.Int64)">
             <summary>
             Updates this base data with a new trade
             </summary>
             <param name="lastTrade">The price of the last trade</param>
             <param name="tradeSize">The quantity traded</param>
            </member>
        <member name="M:QuantConnect.Data.BaseData.UpdateQuote(System.Decimal,System.Int64,System.Decimal,System.Int64)">
             <summary>
             Updates this base data with new quote information
             </summary>
             <param name="bidPrice">The current bid price</param>
             <param name="bidSize">The current bid size</param>
             <param name="askPrice">The current ask price</param>
             <param name="askSize">The current ask size</param>
            </member>
        <member name="M:QuantConnect.Data.BaseData.UpdateBid(System.Decimal,System.Int64)">
             <summary>
             Updates this base data with the new quote bid information
             </summary>
             <param name="bidPrice">The current bid price</param>
             <param name="bidSize">The current bid size</param>
            </member>
        <member name="M:QuantConnect.Data.BaseData.UpdateAsk(System.Decimal,System.Int64)">
             <summary>
             Updates this base data with the new quote ask information
             </summary>
             <param name="askPrice">The current ask price</param>
             <param name="askSize">The current ask size</param>
            </member>
        <member name="M:QuantConnect.Data.BaseData.Update(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Update routine to build a bar/tick from a data update. 
             </summary>
             <param name="lastTrade">The last trade price</param>
             <param name="bidPrice">Current bid price</param>
             <param name="askPrice">Current asking price</param>
             <param name="volume">Volume of this trade</param>
             <param name="bidSize">The size of the current bid, if available</param>
             <param name="askSize">The size of the current ask, if available</param>
            </member>
        <member name="M:QuantConnect.Data.BaseData.Clone(System.Boolean)">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <param name="fillForward">True if this is a fill forward clone</param>
             <returns>A clone of the current object</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.Clone">
             <summary>
             Return a new instance clone of this object, used in fill forward
             </summary>
             <remarks>
             This base implementation uses reflection to copy all public fields and properties
             </remarks>
             <returns>A clone of the current object</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.ToString">
             <summary>
             Formats a string with the symbol and value.
             </summary>
             <returns>string - a string formatted as SPY: 167.753</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,QuantConnect.DataFeedEndpoint)">
             <summary>
             Reader converts each line of the data source into BaseData objects. Each data type creates its own factory method, and returns a new instance of the object 
             each time it is called. 
             </summary>
             <remarks>OBSOLETE:: This implementation is added for backward/forward compatibility purposes. This function is no longer called by the LEAN engine.</remarks>
             <param name="config">Subscription data config setup object</param>
             <param name="line">Line of the source document</param>
             <param name="date">Date of the requested data</param>
             <param name="datafeed">Type of datafeed we're requesting - a live or backtest feed.</param>
             <returns>Instance of the T:BaseData object generated by this line of the CSV</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,QuantConnect.DataFeedEndpoint)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <remarks>OBSOLETE:: This implementation is added for backward/forward compatibility purposes. This function is no longer called by the LEAN engine.</remarks>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <param name="datafeed">Type of datafeed we're reqesting - backtest or live</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.BaseData.DeserializeMessage(System.String)">
             <summary>
             Deserialize the message from the data server
             </summary>
             <param name="serialized">The data server's message</param>
             <returns>An enumerable of base data, if unsuccessful, returns an empty enumerable</returns>
            </member>
        <member name="T:QuantConnect.Data.IBaseData">
             <summary>
             Base Data Class: Type, Timestamp, Key -- Base Features.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.IBaseData.DataType">
             <summary>
             Market Data Type of this data - does it come in individual price packets or is it grouped into OHLC.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.IBaseData.Time">
             <summary>
             Time keeper of data -- all data is timeseries based.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.IBaseData.Symbol">
             <summary>
             Symbol for underlying Security
             </summary>
            </member>
        <member name="P:QuantConnect.Data.IBaseData.Value">
             <summary>
             All timeseries data is a time-value pair:
             </summary>
            </member>
        <member name="P:QuantConnect.Data.IBaseData.Price">
             <summary>
             Alias of Value.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.IBaseData.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,QuantConnect.DataFeedEndpoint)">
             <summary>
             Reader Method :: using set of arguements we specify read out type. Enumerate
             until the end of the data stream or file. E.g. Read CSV file line by line and convert
             into data types.
             </summary>
             <returns>BaseData type set by Subscription Method.</returns>
            </member>
        <member name="M:QuantConnect.Data.IBaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,QuantConnect.DataFeedEndpoint)">
             <summary>
             Return the URL string source of the file. This will be converted to a stream 
             </summary>
             <param name="datafeed">Type of datafeed we're reqesting - backtest or live</param>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source file</param>
             <returns>String URL of source file.</returns>
            </member>
        <member name="M:QuantConnect.Data.IBaseData.Clone">
             <summary>
             Return a new instance clone of this object
             </summary>
             <returns></returns>
            </member>
        <member name="T:QuantConnect.Data.SubscriptionDataConfig">
             <summary>
             Subscription data required including the type of data.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.Type">
             <summary>
             Type of data
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.SecurityType">
             <summary>
             Security type of this data subscription
             </summary>
            </member>
        <member name="P:QuantConnect.Data.SubscriptionDataConfig.Symbol">
             <summary>
             Symbol of the asset we're requesting: this is really a perm tick!!
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.TickType">
             <summary>
             Trade or quote data
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.Resolution">
             <summary>
             Resolution of the asset we're requesting, second minute or tick
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.Increment">
             <summary>
             Timespan increment between triggers of this data:
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.FillDataForward">
             <summary>
             True if wish to send old data when time gaps in data feed.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.ExtendedMarketHours">
             <summary>
             Boolean Send Data from between 4am - 8am (Equities Setting Only)
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.IsInternalFeed">
             <summary>
             True if this subscription was added for the sole purpose of providing currency conversion rates via <see cref="M:QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase,System.Collections.Generic.IReadOnlyDictionary{QuantConnect.SecurityType,System.String})" />
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.IsCustomData">
             <summary>
             True if this subscription is for custom user data, false for QC data
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.SumOfDividends">
             <summary>
             The sum of dividends accrued in this subscription, used for scaling total return prices
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.DataNormalizationMode">
             <summary>
             Gets the normalization mode used for this subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.PriceScaleFactor">
             <summary>
             Price Scaling Factor:
             </summary>
            </member>
        <member name="P:QuantConnect.Data.SubscriptionDataConfig.MappedSymbol">
             <summary>
             Symbol Mapping: When symbols change over time (e.g. CHASE-&gt; JPM) need to update the symbol requested.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.Market">
             <summary>
             Gets the market / scope of the symbol
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.DataTimeZone">
             <summary>
             Gets the data time zone for this subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.ExchangeTimeZone">
             <summary>
             Gets the exchange time zone for this subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.Consolidators">
             <summary>
             Consolidators that are registred with this subscription
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionDataConfig.IsFilteredSubscription">
             <summary>
             Gets whether or not this subscription should have filters applied to it (market hours/user filters from security)
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.#ctor(System.Type,QuantConnect.Symbol,QuantConnect.Resolution,NodaTime.DateTimeZone,NodaTime.DateTimeZone,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{QuantConnect.TickType},System.Boolean,QuantConnect.DataNormalizationMode)">
             <summary>
             Constructor for Data Subscriptions
             </summary>
             <param name="objectType">Type of the data objects.</param>
             <param name="symbol">Symbol of the asset we're requesting</param>
             <param name="resolution">Resolution of the asset we're requesting</param>
             <param name="dataTimeZone">The time zone the raw data is time stamped in</param>
             <param name="exchangeTimeZone">Specifies the time zone of the exchange for the security this subscription is for. This
             is this output time zone, that is, the time zone that will be used on BaseData instances</param>
             <param name="fillForward">Fill in gaps with historical data</param>
             <param name="extendedHours">Equities only - send in data from 4am - 8pm</param>
             <param name="isInternalFeed">Set to true if this subscription is added for the sole purpose of providing currency conversion rates,
             setting this flag to true will prevent the data from being sent into the algorithm's OnData methods</param>
             <param name="isCustom">True if this is user supplied custom data, false for normal QC data</param>
             <param name="tickType">Specifies if trade or quote data is subscribed</param>
             <param name="isFilteredSubscription">True if this subscription should have filters applied to it (market hours/user filters from security), false otherwise</param>
             <param name="dataNormalizationMode">Specifies normalization mode used for this subscription</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.#ctor(QuantConnect.Data.SubscriptionDataConfig,System.Type,QuantConnect.Symbol,System.Nullable{QuantConnect.Resolution},NodaTime.DateTimeZone,NodaTime.DateTimeZone,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{QuantConnect.TickType},System.Nullable{System.Boolean},System.Nullable{QuantConnect.DataNormalizationMode})">
             <summary>
             Copy constructor with overrides
             </summary>
             <param name="config">The config to copy, then overrides are applied and all option</param>
             <param name="objectType">Type of the data objects.</param>
             <param name="symbol">Symbol of the asset we're requesting</param>
             <param name="resolution">Resolution of the asset we're requesting</param>
             <param name="dataTimeZone">The time zone the raw data is time stamped in</param>
             <param name="exchangeTimeZone">Specifies the time zone of the exchange for the security this subscription is for. This
             is this output time zone, that is, the time zone that will be used on BaseData instances</param>
             <param name="fillForward">Fill in gaps with historical data</param>
             <param name="extendedHours">Equities only - send in data from 4am - 8pm</param>
             <param name="isInternalFeed">Set to true if this subscription is added for the sole purpose of providing currency conversion rates,
             setting this flag to true will prevent the data from being sent into the algorithm's OnData methods</param>
             <param name="isCustom">True if this is user supplied custom data, false for normal QC data</param>
             <param name="tickType">Specifies if trade or quote data is subscribed</param>
             <param name="isFilteredSubscription">True if this subscription should have filters applied to it (market hours/user filters from security), false otherwise</param>
             <param name="dataNormalizationMode">Specifies normalization mode used for this subscription</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(System.Decimal)">
             <summary>
             Normalizes the specified price based on the DataNormalizationMode
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.Equals(QuantConnect.Data.SubscriptionDataConfig)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.Equals(System.Object)">
             <summary>
             Determines whether the specified object is equal to the current object.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.GetHashCode">
             <summary>
             Serves as the default hash function. 
             </summary>
             <returns>
             A hash code for the current object.
             </returns>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.op_Equality(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Data.SubscriptionDataConfig)">
             <summary>
             Override equals operator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.op_Inequality(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Data.SubscriptionDataConfig)">
             <summary>
             Override not equals operator
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionDataConfig.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Data.Market.Tick">
             <summary>
             Tick class is the base representation for tick data. It is grouped into a Ticks object
             which implements IDictionary and passed into an OnData event handler.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.TickType">
             <summary>
             Type of the Tick: Trade or Quote.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.Quantity">
             <summary>
             Quantity exchanged in a trade.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.Exchange">
             <summary>
             Exchange we are executing on. String short code expanded in the MarketCodes.US global dictionary
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.SaleCondition">
             <summary>
             Sale condition for the tick.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.Suspicious">
             <summary>
             Bool whether this is a suspicious tick
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.BidPrice">
             <summary>
             Bid Price for Tick
             </summary>
             <remarks>QuantConnect does not currently have quote data but was designed to handle ticks and quotes</remarks>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.AskPrice">
             <summary>
             Asking price for the Tick quote.
             </summary>
             <remarks>QuantConnect does not currently have quote data but was designed to handle ticks and quotes</remarks>
            </member>
        <member name="P:QuantConnect.Data.Market.Tick.LastPrice">
             <summary>
             Alias for "Value" - the last sale for this asset.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.BidSize">
             <summary>
             Size of bid quote.
             </summary>
            </member>
        <member name="F:QuantConnect.Data.Market.Tick.AskSize">
             <summary>
             Size of ask quote.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor">
             <summary>
             Initialize tick class with a default constructor.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(QuantConnect.Data.Market.Tick)">
             <summary>
             Cloner constructor for fill forward engine implementation. Clone the original tick into this new tick:
             </summary>
             <param name="original">Original tick we're cloning</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(System.DateTime,QuantConnect.Symbol,System.Decimal,System.Decimal)">
             <summary>
             Constructor for a FOREX tick where there is no last sale price. The volume in FX is so high its rare to find FX trade data.
             To fake this the tick contains bid-ask prices and the last price is the midpoint.
             </summary>
             <param name="time">Full date and time</param>
             <param name="symbol">Underlying currency pair we're trading</param>
             <param name="bid">FX tick bid value</param>
             <param name="ask">FX tick ask value</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(System.DateTime,QuantConnect.Symbol,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Initializer for a last-trade equity tick with bid or ask prices. 
             </summary>
             <param name="time">Full date and time</param>
             <param name="symbol">Underlying equity security symbol</param>
             <param name="bid">Bid value</param>
             <param name="ask">Ask value</param>
             <param name="last">Last trade price</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(QuantConnect.Symbol,System.String)">
             <summary>
             Constructor for QuantConnect FXCM Data source:
             </summary>
             <param name="symbol">Symbol for underlying asset</param>
             <param name="line">CSV line of data from FXCM</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(QuantConnect.Symbol,System.String,System.DateTime)">
             <summary>
             Constructor for QuantConnect tick data
             </summary>
             <param name="symbol">Symbol for underlying asset</param>
             <param name="line">CSV line of data from QC tick csv</param>
             <param name="baseDate">The base date of the tick</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.#ctor(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parse a tick data line from quantconnect zip source files.
             </summary>
             <param name="line">CSV source line of the compressed source</param>
             <param name="date">Base date for the tick (ticks date is stored as int milliseconds since midnight)</param>
             <param name="config">Subscription configuration object</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             Tick implementation of reader method: read a line of data from the source and convert it to a tick object.
             </summary>
             <param name="config">Subscription configuration object for algorithm</param>
             <param name="line">Line from the datafeed source</param>
             <param name="date">Date of this reader request</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>New Initialized tick</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Get source for tick data feed - not used with QuantConnect data sources implementation.
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source request if source spread across multiple files</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String source location of the file to be opened with a stream</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.Update(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Update the tick price information - not used.
             </summary>
             <param name="lastTrade">This trade price</param>
             <param name="bidPrice">Current bid price</param>
             <param name="askPrice">Current asking price</param>
             <param name="volume">Volume of this trade</param>
             <param name="bidSize">The size of the current bid, if available</param>
             <param name="askSize">The size of the current ask, if available</param>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.IsValid">
             <summary>
             Check if tick contains valid data (either a trade, or a bid or ask)
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Tick.Clone">
             <summary>
             Clone implementation for tick class:
             </summary>
             <returns>New tick object clone of the current class values.</returns>
            </member>
        <member name="T:QuantConnect.Data.Market.TradeBar">
             <summary>
             TradeBar class for second and minute resolution data: 
             An OHLC implementation of the QuantConnect BaseData class with parameters for candles.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.Volume">
             <summary>
             Volume:
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.Open">
             <summary>
             Opening price of the bar: Defined as the price at the start of the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.High">
             <summary>
             High price of the TradeBar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.Low">
             <summary>
             Low price of the TradeBar during the time period.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.Close">
             <summary>
             Closing price of the TradeBar. Defined as the price at Start Time + TimeSpan.
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.EndTime">
             <summary>
             The closing time of this bar, computed via the Time and Period
             </summary>
            </member>
        <member name="P:QuantConnect.Data.Market.TradeBar.Period">
             <summary>
             The period of this trade bar, (second, minute, daily, ect...)
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.#ctor">
             <summary>
             Default initializer to setup an empty tradebar.
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.#ctor(QuantConnect.Data.Market.TradeBar)">
             <summary>
             Cloner constructor for implementing fill forward. 
             Return a new instance with the same values as this original.
             </summary>
             <param name="original">Original tradebar object we seek to clone</param>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.#ctor(System.DateTime,QuantConnect.Symbol,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int64,System.Nullable{System.TimeSpan})">
             <summary>
             Initialize Trade Bar with OHLC Values:
             </summary>
             <param name="time">DateTime Timestamp of the bar</param>
             <param name="symbol">Market MarketType Symbol</param>
             <param name="open">Decimal Opening Price</param>
             <param name="high">Decimal High Price of this bar</param>
             <param name="low">Decimal Low Price of this bar</param>
             <param name="close">Decimal Close price of this bar</param>
             <param name="volume">Volume sum over day</param>
             <param name="period">The period of this bar, specify null for default of 1 minute</param>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
             <summary>
             TradeBar Reader: Fetch the data from the QC storage and feed it line by line into the engine.
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>Enumerable iterator for returning each line of the required data.</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.Parse(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses the trade bar data line assuming QC data formats
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseEquity``1(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses equity trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <typeparam name="T">The requested output type, must derive from TradeBar</typeparam>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseEquity(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses equity trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">Date of this reader request</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseForex``1(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses forex trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <typeparam name="T">The requested output type, must derive from TradeBar</typeparam>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseForex(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses forex trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseCfd``1(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses CFD trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <typeparam name="T">The requested output type, must derive from TradeBar</typeparam>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseCfd(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses CFD trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseDerivative``1(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses Option trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <typeparam name="T">The requested output type, must derive from TradeBar</typeparam>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseOption(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses Option trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.ParseFuture(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime)">
             <summary>
             Parses Future trade bar data into the specified tradebar type, useful for custom types with OHLCV data deriving from TradeBar
             </summary>
             <param name="config">Symbols, Resolution, DataType, </param>
             <param name="line">Line from the data file requested</param>
             <param name="date">The base data used to compute the time of the bar since the line specifies a milliseconds since midnight</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.Update(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Update the tradebar - build the bar from this pricing information:
             </summary>
             <param name="lastTrade">This trade price</param>
             <param name="bidPrice">Current bid price (not used) </param>
             <param name="askPrice">Current asking price (not used) </param>
             <param name="volume">Volume of this trade</param>
             <param name="bidSize">The size of the current bid, if available</param>
             <param name="askSize">The size of the current ask, if available</param>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
             <summary>
             Get Source for Custom Data File
             &gt;&gt; What source file location would you prefer for each type of usage:
             </summary>
             <param name="config">Configuration object</param>
             <param name="date">Date of this source request if source spread across multiple files</param>
             <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
             <returns>String source location of the file</returns>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.Clone">
             <summary>
             Return a new instance clone of this object
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBar.Initialize(System.Decimal)">
             <summary>
             Initializes this bar with a first data point
             </summary>
             <param name="value">The seed value for this bar</param>
            </member>
        <member name="T:QuantConnect.Data.SubscriptionManager">
             <summary>
             Enumerable Subscription Management Class
             </summary>
            </member>
        <member name="F:QuantConnect.Data.SubscriptionManager.Subscriptions">
             Generic Market Data Requested and Object[] Arguements to Get it:
            </member>
        <member name="P:QuantConnect.Data.SubscriptionManager.AvailableDataTypes">
             <summary>
             
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.#ctor(QuantConnect.TimeKeeper)">
             <summary>
             Initialise the Generic Data Manager Class
             </summary>
             <param name="timeKeeper">The algoritm's time keeper</param>
            </member>
        <member name="P:QuantConnect.Data.SubscriptionManager.Count">
             <summary>
             Get the count of assets:
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol,QuantConnect.Resolution,NodaTime.DateTimeZone,NodaTime.DateTimeZone,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Add Market Data Required (Overloaded method for backwards compatibility).
             </summary>
             <param name="symbol">Symbol of the asset we're like</param>
             <param name="resolution">Resolution of Asset Required</param>
             <param name="timeZone">The time zone the subscription's data is time stamped in</param>
             <param name="exchangeTimeZone">Specifies the time zone of the exchange for the security this subscription is for. This
             is this output time zone, that is, the time zone that will be used on BaseData instances</param>
             <param name="isCustomData">True if this is custom user supplied data, false for normal QC data</param>
             <param name="fillDataForward">when there is no data pass the last tradebar forward</param>
             <param name="extendedMarketHours">Request premarket data as well when true </param>
             <returns>The newly created <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /></returns>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.Add(System.Type,QuantConnect.Symbol,QuantConnect.Resolution,NodaTime.DateTimeZone,NodaTime.DateTimeZone,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Add Market Data Required - generic data typing support as long as Type implements BaseData.
             </summary>
             <param name="dataType">Set the type of the data we're subscribing to.</param>
             <param name="symbol">Symbol of the asset we're like</param>
             <param name="resolution">Resolution of Asset Required</param>
             <param name="dataTimeZone">The time zone the subscription's data is time stamped in</param>
             <param name="exchangeTimeZone">Specifies the time zone of the exchange for the security this subscription is for. This
             is this output time zone, that is, the time zone that will be used on BaseData instances</param>
             <param name="isCustomData">True if this is custom user supplied data, false for normal QC data</param>
             <param name="fillDataForward">when there is no data pass the last tradebar forward</param>
             <param name="extendedMarketHours">Request premarket data as well when true </param>
             <param name="isInternalFeed">Set to true to prevent data from this subscription from being sent into the algorithm's OnData events</param>
             <param name="isFilteredSubscription">True if this subscription should have filters applied to it (market hours/user filters from security), false otherwise</param>
             <returns>The newly created <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /></returns>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol,QuantConnect.Data.Consolidators.IDataConsolidator)">
             <summary>
             Add a consolidator for the symbol
             </summary>
             <param name="symbol">Symbol of the asset to consolidate</param>
             <param name="consolidator">The consolidator</param>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.DefaultDataTypes">
             <summary>
             Hard code the set of default available data feeds
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)">
             <summary>
             Get the available data types for a security
             </summary>
            </member>
        <member name="M:QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType,QuantConnect.Resolution,System.Boolean)">
             <summary>
             Get the data feed types for a given <see cref="T:QuantConnect.SecurityType" /> <see cref="T:QuantConnect.Resolution" /> 
             </summary>
             <param name="symbolSecurityType">The <see cref="T:QuantConnect.SecurityType" /> used to determine the types</param>
             <param name="resolution">The resolution of the data requested</param>
             <param name="isCanonical">Indicates whether the security is Canonical (future and options)</param>
             <returns>Types that should be added to the <see cref="T:QuantConnect.Data.SubscriptionDataConfig" /></returns>
            </member>
        <member name="T:QuantConnect.Data.Market.Ticks">
             <summary>
             Ticks collection which implements an IDictionary-string-list of ticks. This way users can iterate over the string indexed ticks of the requested symbol.
             </summary>
             <remarks>Ticks are timestamped to the nearest second in QuantConnect</remarks>
            </member>
        <member name="M:QuantConnect.Data.Market.Ticks.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Ticks" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.Ticks.#ctor(System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Data.Market.Ticks" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Data.Market.TradeBars">
             <summary>
             Collection of TradeBars to create a data type for generic data handler:
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBars.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.TradeBars" /> dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Data.Market.TradeBars.#ctor(System.DateTime)">
             <summary>
             Creates a new instance of the <see cref="T:QuantConnect.Data.Market.TradeBars" /> dictionary
             </summary>
             <param name="frontier">The time associated with the data in this dictionary</param>
            </member>
        <member name="T:QuantConnect.Isolator">
             <summary>
             Isolator class - create a new instance of the algorithm and ensure it doesn't 
             exceed memory or time execution limits.
             </summary>
            </member>
        <member name="P:QuantConnect.Isolator.CancellationTokenSource">
             <summary>
             Algo cancellation controls - cancel source.
             </summary>
            </member>
        <member name="P:QuantConnect.Isolator.CancellationToken">
             <summary>
             Algo cancellation controls - cancellation token for algorithm thread.
             </summary>
            </member>
        <member name="P:QuantConnect.Isolator.IsCancellationRequested">
             <summary>
             Check if this task isolator is cancelled, and exit the analysis
             </summary>
            </member>
        <member name="M:QuantConnect.Isolator.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Isolator" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan,System.Func{System.String},System.Action,System.Int64)">
             <summary>
             Execute a code block with a maximum limit on time and memory.
             </summary>
             <param name="timeSpan">Timeout in timespan</param>
             <param name="withinCustomLimits">Function used to determine if the codeBlock is within custom limits, such as with algorithm manager
             timing individual time loops, return a non-null and non-empty string with a message indicating the error/reason for stoppage</param>
             <param name="codeBlock">Action codeblock to execute</param>
             <param name="memoryCap">Maximum memory allocation, default 1024Mb</param>
             <returns>True if algorithm exited successfully, false if cancelled because it exceeded limits.</returns>
            </member>
        <member name="M:QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan,System.Action,System.Int64)">
             <summary>
             Execute a code block with a maximum limit on time and memory.
             </summary>
             <param name="timeSpan">Timeout in timespan</param>
             <param name="codeBlock">Action codeblock to execute</param>
             <param name="memoryCap">Maximum memory allocation, default 1024Mb</param>
             <returns>True if algorithm exited successfully, false if cancelled because it exceeded limits.</returns>
            </member>
        <member name="T:QuantConnect.DateFormat">
             <summary>
             Shortcut date format strings
             </summary>
            </member>
        <member name="F:QuantConnect.DateFormat.SixCharacter">
             Year-Month-Date 6 Character Date Representation
            </member>
        <member name="F:QuantConnect.DateFormat.EightCharacter">
             YYYY-MM-DD Eight Character Date Representation
            </member>
        <member name="F:QuantConnect.DateFormat.TwelveCharacter">
             Daily and hourly time format
            </member>
        <member name="F:QuantConnect.DateFormat.JsonFormat">
             JSON Format Date Representation
            </member>
        <member name="F:QuantConnect.DateFormat.DB">
             MySQL Format Date Representation
            </member>
        <member name="F:QuantConnect.DateFormat.UI">
             QuantConnect UX Date Representation
            </member>
        <member name="F:QuantConnect.DateFormat.US">
             en-US format
            </member>
        <member name="F:QuantConnect.DateFormat.Forex">
             Date format of QC forex data
            </member>
        <member name="F:QuantConnect.DateFormat.YearMonth">
             YYYYMM Year and Month Character Date Representation (used for futures)
            </member>
        <member name="T:QuantConnect.Holding">
             <summary>
             Singular holding of assets from backend live nodes:
             </summary>
            </member>
        <member name="F:QuantConnect.Holding.Symbol">
             Symbol of the Holding:
            </member>
        <member name="F:QuantConnect.Holding.Type">
             Type of the security
            </member>
        <member name="F:QuantConnect.Holding.CurrencySymbol">
             The currency symbol of the holding, such as $
            </member>
        <member name="F:QuantConnect.Holding.AveragePrice">
             Average Price of our Holding in the currency the symbol is traded in
            </member>
        <member name="F:QuantConnect.Holding.Quantity">
             Quantity of Symbol We Hold.
            </member>
        <member name="F:QuantConnect.Holding.MarketPrice">
             Current Market Price of the Asset in the currency the symbol is traded in
            </member>
        <member name="F:QuantConnect.Holding.ConversionRate">
             Current market conversion rate into the account currency
            </member>
        <member name="F:QuantConnect.Holding.MarketValue">
             Current market value of the holding 
            </member>
        <member name="F:QuantConnect.Holding.UnrealizedPnL">
             Current unrealized P/L of the holding 
            </member>
        <member name="M:QuantConnect.Holding.#ctor">
             Create a new default holding:
            </member>
        <member name="M:QuantConnect.Holding.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Create a simple JSON holdings from a Security holding class.
             </summary>
             <param name="security">The security instance</param>
            </member>
        <member name="M:QuantConnect.Holding.Clone">
             <summary>
             Clones this instance
             </summary>
             <returns>A new Holding object with the same values as this one</returns>
            </member>
        <member name="M:QuantConnect.Holding.ToString">
             <summary>
             Writes out the properties of this instance to string
             </summary>
            </member>
        <member name="T:QuantConnect.RunMode">
             <summary>
             Processing runmode of the backtest.
             </summary>
             <obsolete>The runmode enum is now obsolete and all tasks are run in series mode. This was done to ensure algorithms have memory of the day before.</obsolete>
            </member>
        <member name="F:QuantConnect.RunMode.Automatic">
             Automatically detect the runmode of the algorithm: series for minute data, parallel for second-tick
            </member>
        <member name="F:QuantConnect.RunMode.Series">
             Series runmode for the algorithm
            </member>
        <member name="F:QuantConnect.RunMode.Parallel">
             Parallel runmode for the algorithm
            </member>
        <member name="T:QuantConnect.BrokerageEnvironment">
             <summary>
             Represents the types of environments supported by brokerages for trading
             </summary>
            </member>
        <member name="F:QuantConnect.BrokerageEnvironment.Live">
             <summary>
             Live trading
             </summary>
            </member>
        <member name="F:QuantConnect.BrokerageEnvironment.Paper">
             <summary>
             Paper trading
             </summary>
            </member>
        <member name="T:QuantConnect.Language">
             <summary>
             Multilanguage support enum: which language is this project for the interop bridge converter.
             </summary>
            </member>
        <member name="F:QuantConnect.Language.CSharp">
             <summary>
             C# Language Project
             </summary>
            </member>
        <member name="F:QuantConnect.Language.FSharp">
             <summary>
             FSharp Project
             </summary>
            </member>
        <member name="F:QuantConnect.Language.VisualBasic">
             <summary>
             Visual Basic Project
             </summary>
            </member>
        <member name="F:QuantConnect.Language.Java">
             <summary>
             Java Language Project
             </summary>
            </member>
        <member name="F:QuantConnect.Language.Python">
             <summary>
             Python Language Project
             </summary>
            </member>
        <member name="T:QuantConnect.UserPlan">
             <summary>
             User / Algorithm Job Subscription Level
             </summary>
            </member>
        <member name="F:QuantConnect.UserPlan.Free">
             <summary>
             Free User (Backtesting).
             </summary>
            </member>
        <member name="F:QuantConnect.UserPlan.Hobbyist">
             <summary>
             Hobbyist User with Included 512mb Server.
             </summary>
            </member>
        <member name="T:QuantConnect.ServerType">
             <summary>
             Live server types available through the web IDE. / QC deployment.
             </summary>
            </member>
        <member name="F:QuantConnect.ServerType.Server512">
             <summary>
             Additional server
             </summary>
            </member>
        <member name="F:QuantConnect.ServerType.Server1024">
             <summary>
             Upgraded server
             </summary>
            </member>
        <member name="F:QuantConnect.ServerType.Server2048">
             <summary>
             Server with 2048 MB Ram.
             </summary>
            </member>
        <member name="T:QuantConnect.SecurityType">
             <summary>
             Type of tradable security / underlying asset
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Base">
             <summary>
             Base class for all security types:
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Equity">
             <summary>
             US Equity Security
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Option">
             <summary>
             Option Security Type
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Commodity">
             <summary>
             Commodity Security Type
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Forex">
             <summary>
             FOREX Security
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Future">
             <summary>
             Future Security Type
             </summary>
            </member>
        <member name="F:QuantConnect.SecurityType.Cfd">
             <summary>
             Contract For a Difference Security Type.
             </summary>
            </member>
        <member name="T:QuantConnect.AccountType">
             <summary>
             Account type: margin or cash
             </summary>
            </member>
        <member name="F:QuantConnect.AccountType.Margin">
             <summary>
             Margin account type
             </summary>
            </member>
        <member name="F:QuantConnect.AccountType.Cash">
             <summary>
             Cash account type
             </summary>
            </member>
        <member name="T:QuantConnect.MarketDataType">
             <summary>
             Market data style: is the market data a summary (OHLC style) bar, or is it a time-price value.
             </summary>
            </member>
        <member name="F:QuantConnect.MarketDataType.Base">
             Base market data type
            </member>
        <member name="F:QuantConnect.MarketDataType.TradeBar">
             TradeBar market data type (OHLC summary bar)
            </member>
        <member name="F:QuantConnect.MarketDataType.Tick">
             Tick market data type (price-time pair)
            </member>
        <member name="F:QuantConnect.MarketDataType.Auxiliary">
             Data associated with an instrument
            </member>
        <member name="F:QuantConnect.MarketDataType.QuoteBar">
             QuoteBar market data type [Bid(OHLC), Ask(OHLC) and Mid(OHLC) summary bar]
            </member>
        <member name="F:QuantConnect.MarketDataType.OptionChain">
             Option chain data
            </member>
        <member name="F:QuantConnect.MarketDataType.FuturesChain">
             Futures chain data
            </member>
        <member name="T:QuantConnect.DataFeedEndpoint">
             <summary>
             Datafeed enum options for selecting the source of the datafeed.
             </summary>
            </member>
        <member name="F:QuantConnect.DataFeedEndpoint.Backtesting">
             Backtesting Datafeed Endpoint
            </member>
        <member name="F:QuantConnect.DataFeedEndpoint.FileSystem">
             Loading files off the local system
            </member>
        <member name="F:QuantConnect.DataFeedEndpoint.LiveTrading">
             Getting datafeed from a QC-Live-Cloud
            </member>
        <member name="F:QuantConnect.DataFeedEndpoint.Database">
             Database
            </member>
        <member name="T:QuantConnect.StoragePermissions">
             <summary>
             Cloud storage permission options.
             </summary>
            </member>
        <member name="F:QuantConnect.StoragePermissions.Public">
             Public Storage Permissions
            </member>
        <member name="F:QuantConnect.StoragePermissions.Authenticated">
             Authenticated Read Storage Permissions
            </member>
        <member name="T:QuantConnect.TickType">
             <summary>
             Types of tick data 
             </summary>
             <remarks>QuantConnect currently only has trade, quote, open interest tick data.</remarks>
            </member>
        <member name="F:QuantConnect.TickType.Trade">
             Trade type tick object.
            </member>
        <member name="F:QuantConnect.TickType.Quote">
             Quote type tick object.
            </member>
        <member name="F:QuantConnect.TickType.OpenInterest">
             Open Interest type tick object (for options, futures)
            </member>
        <member name="T:QuantConnect.DelistingType">
             <summary>
             Specifies the type of <see cref="T:QuantConnect.Data.Market.Delisting" /> data
             </summary>
            </member>
        <member name="F:QuantConnect.DelistingType.Warning">
             <summary>
             Specifies a warning of an imminent delisting
             </summary>
            </member>
        <member name="F:QuantConnect.DelistingType.Delisted">
             <summary>
             Specifies the symbol has been delisted
             </summary>
            </member>
        <member name="T:QuantConnect.Resolution">
             <summary>
             Resolution of data requested.
             </summary>
             <remarks>Always sort the enum from the smallest to largest resolution</remarks>
            </member>
        <member name="F:QuantConnect.Resolution.Tick">
             Tick Resolution (1)
            </member>
        <member name="F:QuantConnect.Resolution.Second">
             Second Resolution (2)
            </member>
        <member name="F:QuantConnect.Resolution.Minute">
             Minute Resolution (3)
            </member>
        <member name="F:QuantConnect.Resolution.Hour">
             Hour Resolution (4)
            </member>
        <member name="F:QuantConnect.Resolution.Daily">
             Daily Resolution (5)
            </member>
        <member name="T:QuantConnect.OptionRight">
             <summary>
             Specifies the different types of options
             </summary>
            </member>
        <member name="F:QuantConnect.OptionRight.Call">
             <summary>
             A call option, the right to buy at the strike price
             </summary>
            </member>
        <member name="F:QuantConnect.OptionRight.Put">
             <summary>
             A put option, the right to sell at the strike price
             </summary>
            </member>
        <member name="T:QuantConnect.OptionStyle">
             <summary>
             Specifies the style of an option
             </summary>
            </member>
        <member name="F:QuantConnect.OptionStyle.American">
             <summary>
             American style options are able to be exercised at any time on or before the expiration date
             </summary>
            </member>
        <member name="F:QuantConnect.OptionStyle.European">
             <summary>
             European style options are able to be exercised on the expiration date only.
             </summary>
            </member>
        <member name="T:QuantConnect.SettlementType">
             <summary>
             Specifies the type of settlement in derivative deals 
             </summary>
            </member>
        <member name="F:QuantConnect.SettlementType.PhysicalDelivery">
             <summary>
             Physical delivery of the underlying security 
             </summary>
            </member>
        <member name="F:QuantConnect.SettlementType.Cash">
             <summary>
             Cash is paid/received on settlement
             </summary>
            </member>
        <member name="T:QuantConnect.AlgorithmControl">
             <summary>
             Wrapper for algorithm status enum to include the charting subscription.
             </summary>
            </member>
        <member name="M:QuantConnect.AlgorithmControl.#ctor">
             <summary>
             Default initializer for algorithm control class.
             </summary>
            </member>
        <member name="F:QuantConnect.AlgorithmControl.Status">
             <summary>
             Current run status of the algorithm id.
             </summary>
            </member>
        <member name="F:QuantConnect.AlgorithmControl.ChartSubscription">
             <summary>
             Currently requested chart.
             </summary>
            </member>
        <member name="F:QuantConnect.AlgorithmControl.HasSubscribers">
             <summary>
             True if there's subscribers on the channel
             </summary>
            </member>
        <member name="T:QuantConnect.AlgorithmStatus">
             <summary>
             States of a live deployment.
             </summary>
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.DeployError">
             Error compiling algorithm at start
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.InQueue">
             Waiting for a server
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Running">
             Running algorithm
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Stopped">
             Stopped algorithm or exited with runtime errors
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Liquidated">
             Liquidated algorithm
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Deleted">
             Algorithm has been deleted
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Completed">
             Algorithm completed running
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.RuntimeError">
             Runtime Error Stoped Algorithm
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Invalid">
             Error in the algorithm id (not used).
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.LoggingIn">
             The algorithm is logging into the brokerage
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.Initializing">
             The algorithm is initializing
            </member>
        <member name="F:QuantConnect.AlgorithmStatus.History">
             History status update
            </member>
        <member name="T:QuantConnect.SubscriptionTransportMedium">
             <summary>
             Specifies where a subscription's data comes from
             </summary>
            </member>
        <member name="F:QuantConnect.SubscriptionTransportMedium.LocalFile">
             <summary>
             The subscription's data comes from disk
             </summary>
            </member>
        <member name="F:QuantConnect.SubscriptionTransportMedium.RemoteFile">
             <summary>
             The subscription's data is downloaded from a remote source
             </summary>
            </member>
        <member name="F:QuantConnect.SubscriptionTransportMedium.Rest">
             <summary>
             The subscription's data comes from a rest call that is polled and returns a single line/data point of information
             </summary>
            </member>
        <member name="T:QuantConnect.Period">
             <summary>
             enum Period - Enum of all the analysis periods, AS integers. Reference "Period" Array to access the values
             </summary>
            </member>
        <member name="F:QuantConnect.Period.TenSeconds">
             Period Short Codes - 10
            </member>
        <member name="F:QuantConnect.Period.ThirtySeconds">
             Period Short Codes - 30 Second
            </member>
        <member name="F:QuantConnect.Period.OneMinute">
             Period Short Codes - 60 Second
            </member>
        <member name="F:QuantConnect.Period.TwoMinutes">
             Period Short Codes - 120 Second
            </member>
        <member name="F:QuantConnect.Period.ThreeMinutes">
             Period Short Codes - 180 Second
            </member>
        <member name="F:QuantConnect.Period.FiveMinutes">
             Period Short Codes - 300 Second
            </member>
        <member name="F:QuantConnect.Period.TenMinutes">
             Period Short Codes - 600 Second
            </member>
        <member name="F:QuantConnect.Period.FifteenMinutes">
             Period Short Codes - 900 Second
            </member>
        <member name="F:QuantConnect.Period.TwentyMinutes">
             Period Short Codes - 1200 Second
            </member>
        <member name="F:QuantConnect.Period.ThirtyMinutes">
             Period Short Codes - 1800 Second
            </member>
        <member name="F:QuantConnect.Period.OneHour">
             Period Short Codes - 3600 Second
            </member>
        <member name="F:QuantConnect.Period.TwoHours">
             Period Short Codes - 7200 Second
            </member>
        <member name="F:QuantConnect.Period.FourHours">
             Period Short Codes - 14400 Second
            </member>
        <member name="F:QuantConnect.Period.SixHours">
             Period Short Codes - 21600 Second
            </member>
        <member name="T:QuantConnect.DataNormalizationMode">
             <summary>
             Specifies how data is normalized before being sent into an algorithm
             </summary>
            </member>
        <member name="F:QuantConnect.DataNormalizationMode.Raw">
             <summary>
             The raw price with dividends added to cash book
             </summary>
            </member>
        <member name="F:QuantConnect.DataNormalizationMode.Adjusted">
             <summary>
             The adjusted prices with splits and dividendends factored in
             </summary>
            </member>
        <member name="F:QuantConnect.DataNormalizationMode.SplitAdjusted">
             <summary>
             The adjusted prices with only splits factored in, dividends paid out to the cash book
             </summary>
            </member>
        <member name="F:QuantConnect.DataNormalizationMode.TotalReturn">
             <summary>
             The split adjusted price plus dividends
             </summary>
            </member>
        <member name="T:QuantConnect.MarketCodes">
             <summary>
             Global Market Short Codes and their full versions: (used in tick objects)
             </summary>
            </member>
        <member name="F:QuantConnect.MarketCodes.US">
             US Market Codes
            </member>
        <member name="F:QuantConnect.MarketCodes.Canada">
             Canada Market Short Codes:
            </member>
        <member name="T:QuantConnect.ChannelStatus">
             <summary>
             Defines the different channel status values
             </summary>
            </member>
        <member name="F:QuantConnect.ChannelStatus.Vacated">
             <summary>
             The channel is empty
             </summary>
            </member>
        <member name="F:QuantConnect.ChannelStatus.Occupied">
             <summary>
             The channel has subscribers
             </summary>
            </member>
        <member name="T:QuantConnect.USHoliday">
             <summary>
             US Public Holidays - Not Tradeable:
             </summary>
            </member>
        <member name="F:QuantConnect.USHoliday.Dates">
             <summary>
             Public Holidays
             </summary>
            </member>
        <member name="T:QuantConnect.Extensions">
             <summary>
             Extensions function collections - group all static extensions functions here.
             </summary>
            </member>
        <member name="M:QuantConnect.Extensions.Move``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
             <summary>
             Extension to move one element from list from A to position B.
             </summary>
             <typeparam name="T">Type of list</typeparam>
             <param name="list">List we're operating on.</param>
             <param name="oldIndex">Index of variable we want to move.</param>
             <param name="newIndex">New location for the variable</param>
            </member>
        <member name="M:QuantConnect.Extensions.GetBytes(System.String)">
             <summary>
             Extension method to convert a string into a byte array
             </summary>
             <param name="str">String to convert to bytes.</param>
             <returns>Byte array</returns>
            </member>
        <member name="M:QuantConnect.Extensions.Clear``1(System.Collections.Concurrent.ConcurrentQueue{``0})">
             <summary>
             Extentsion method to clear all items from a thread safe queue
             </summary>
             <remarks>Small risk of race condition if a producer is adding to the list.</remarks>
             <typeparam name="T">Queue type</typeparam>
             <param name="queue">queue object</param>
            </member>
        <member name="M:QuantConnect.Extensions.GetString(System.Byte[],System.Text.Encoding)">
             <summary>
             Extension method to convert a byte array into a string.
             </summary>
             <param name="bytes">Byte array to convert.</param>
             <param name="encoding">The encoding to use for the conversion. Defaults to Encoding.ASCII</param>
             <returns>String from bytes.</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToMD5(System.String)">
             <summary>
             Extension method to convert a string to a MD5 hash.
             </summary>
             <param name="str">String we want to MD5 encode.</param>
             <returns>MD5 hash of a string</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToSHA256(System.String)">
             <summary>
             Encrypt the token:time data to make our API hash.
             </summary>
             <param name="data">Data to be hashed by SHA256</param>
             <returns>Hashed string.</returns>
            </member>
        <member name="M:QuantConnect.Extensions.AddOrUpdate``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0,``1)">
             <summary>
             Extension method to automatically set the update value to same as "add" value for TryAddUpdate. 
             This makes the API similar for traditional and concurrent dictionaries.
             </summary>
             <typeparam name="K">Key type for dictionary</typeparam>
             <typeparam name="V">Value type for dictonary</typeparam>
             <param name="dictionary">Dictionary object we're operating on</param>
             <param name="key">Key we want to add or update.</param>
             <param name="value">Value we want to set.</param>
            </member>
        <member name="M:QuantConnect.Extensions.AddOrUpdate``2(System.Collections.Concurrent.ConcurrentDictionary{``0,System.Lazy{``1}},``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
             <summary>
             Extension method to automatically add/update lazy values in concurrent dictionary. 
             </summary>
             <typeparam name="TKey">Key type for dictionary</typeparam>
             <typeparam name="TValue">Value type for dictonary</typeparam>
             <param name="dictionary">Dictionary object we're operating on</param>
             <param name="key">Key we want to add or update.</param>
             <param name="addValueFactory">The function used to generate a value for an absent key</param>
             <param name="updateValueFactory">The function used to generate a new value for an existing key based on the key's existing value</param>
            </member>
        <member name="M:QuantConnect.Extensions.Add``3(System.Collections.Generic.IDictionary{``0,``2},``0,``1)">
             <summary>
             Adds the specified element to the collection with the specified key. If an entry does not exist for th
             specified key then one will be created.
             </summary>
             <typeparam name="TKey">The key type</typeparam>
             <typeparam name="TElement">The collection element type</typeparam>
             <typeparam name="TCollection">The collection type</typeparam>
             <param name="dictionary">The source dictionary to be added to</param>
             <param name="key">The key</param>
             <param name="element">The element to be added</param>
            </member>
        <member name="M:QuantConnect.Extensions.RoundToSignificantDigits(System.Double,System.Int32)">
             <summary>
             Extension method to round a double value to a fixed number of significant figures instead of a fixed decimal places.
             </summary>
             <param name="d">Double we're rounding</param>
             <param name="digits">Number of significant figures</param>
             <returns>New double rounded to digits-significant figures</returns>
            </member>
        <member name="M:QuantConnect.Extensions.RoundToSignificantDigits(System.Decimal,System.Int32)">
             <summary>
             Extension method to round a double value to a fixed number of significant figures instead of a fixed decimal places.
             </summary>
             <param name="d">Double we're rounding</param>
             <param name="digits">Number of significant figures</param>
             <returns>New double rounded to digits-significant figures</returns>
            </member>
        <member name="M:QuantConnect.Extensions.SmartRounding(System.Decimal)">
             <summary>
             Provides global smart rounding, numbers larger than 1000 will round to 4 decimal places,
             while numbers smaller will round to 7 significant digits
             </summary>
            </member>
        <member name="M:QuantConnect.Extensions.SafeDecimalCast(System.Double)">
             <summary>
             Casts the specified input value to a decimal while acknowledging the overflow conditions
             </summary>
             <param name="input">The value to be cast</param>
             <returns>The input value as a decimal, if the value is too large or to small to be represented
             as a decimal, then the closest decimal value will be returned</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToDecimal(System.String)">
             <summary>
             Extension method for faster string to decimal conversion. 
             </summary>
             <param name="str">String to be converted to positive decimal value</param>
             <remarks>Method makes some assuptions - always numbers, no "signs" +,- etc.</remarks>
             <returns>Decimal value of the string</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToInt32(System.String)">
             <summary>
             Extension method for faster string to Int32 conversion. 
             </summary>
             <param name="str">String to be converted to positive Int32 value</param>
             <remarks>Method makes some assuptions - always numbers, no "signs" +,- etc.</remarks>
             <returns>Int32 value of the string</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToInt64(System.String)">
             <summary>
             Extension method for faster string to Int64 conversion. 
             </summary>
             <param name="str">String to be converted to positive Int64 value</param>
             <remarks>Method makes some assuptions - always numbers, no "signs" +,- etc.</remarks>
             <returns>Int32 value of the string</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToCsv(System.String,System.Int32)">
             <summary>
             Breaks the specified string into csv components, all commas are considered separators
             </summary>
             <param name="str">The string to be broken into csv</param>
             <param name="size">The expected size of the output list</param>
             <returns>A list of the csv pieces</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToCsvData(System.String,System.Int32)">
             <summary>
             Breaks the specified string into csv components, works correctly with commas in data fields 
             </summary>
             <param name="str">The string to be broken into csv</param>
             <param name="size">The expected size of the output list</param>
             <returns>A list of the csv pieces</returns>
            </member>
        <member name="M:QuantConnect.Extensions.IsNaNOrZero(System.Double)">
             <summary>
             Check if a number is NaN or equal to zero
             </summary>
             <param name="value">The double value to check</param>
            </member>
        <member name="M:QuantConnect.Extensions.GetDecimalEpsilon">
             <summary>
             Gets the smallest positive number that can be added to a decimal instance and return
             a new value that does not == the old value
             </summary>
            </member>
        <member name="M:QuantConnect.Extensions.GetExtension(System.String)">
             <summary>
             Extension method to extract the extension part of this file name if it matches a safe list, or return a ".custom" extension for ones which do not match.
             </summary>
             <param name="str">String we're looking for the extension for.</param>
             <returns>Last 4 character string of string.</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToStream(System.String)">
             <summary>
             Extension method to convert strings to stream to be read.
             </summary>
             <param name="str">String to convert to stream</param>
             <returns>Stream instance</returns>
            </member>
        <member name="M:QuantConnect.Extensions.Round(System.TimeSpan,System.TimeSpan,System.MidpointRounding)">
             <summary>
             Extension method to round a timeSpan to nearest timespan period.
             </summary>
             <param name="time">TimeSpan To Round</param>
             <param name="roundingInterval">Rounding Unit</param>
             <param name="roundingType">Rounding method</param>
             <returns>Rounded timespan</returns>
            </member>
        <member name="M:QuantConnect.Extensions.Round(System.TimeSpan,System.TimeSpan)">
             <summary>
             Extension method to round timespan to nearest timespan period.
             </summary>
             <param name="time">Base timespan we're looking to round.</param>
             <param name="roundingInterval">Timespan period we're rounding.</param>
             <returns>Rounded timespan period</returns>
            </member>
        <member name="M:QuantConnect.Extensions.RoundDown(System.DateTime,System.TimeSpan)">
             <summary>
             Extension method to round a datetime down by a timespan interval.
             </summary>
             <param name="dateTime">Base DateTime object we're rounding down.</param>
             <param name="interval">Timespan interval to round to.</param>
             <returns>Rounded datetime</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ExchangeRoundDown(System.DateTime,System.TimeSpan,QuantConnect.Securities.SecurityExchangeHours,System.Boolean)">
             <summary>
             Extension method to round a datetime down by a timespan interval until it's
             within the specified exchange's open hours. This works by first rounding down
             the specified time using the interval, then producing a bar between that
             rounded time and the interval plus the rounded time and incrementally walking
             backwards until the exchange is open
             </summary>
             <param name="dateTime">Time to be rounded down</param>
             <param name="interval">Timespan interval to round to.</param>
             <param name="exchangeHours">The exchange hours to determine open times</param>
             <param name="extendedMarket">True for extended market hours, otherwise false</param>
             <returns>Rounded datetime</returns>
            </member>
        <member name="M:QuantConnect.Extensions.Round(System.DateTime,System.TimeSpan)">
             <summary>
             Extension method to round a datetime to the nearest unit timespan.
             </summary>
             <param name="datetime">Datetime object we're rounding.</param>
             <param name="roundingInterval">Timespan rounding period.s</param>
             <returns>Rounded datetime</returns>
            </member>
        <member name="M:QuantConnect.Extensions.RoundUp(System.DateTime,System.TimeSpan)">
             <summary>
             Extension method to explicitly round up to the nearest timespan interval.
             </summary>
             <param name="time">Base datetime object to round up.</param>
             <param name="d">Timespan interval for rounding</param>
             <returns>Rounded datetime</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ConvertTo(System.DateTime,NodaTime.DateTimeZone,NodaTime.DateTimeZone,System.Boolean)">
             <summary>
             Converts the specified time from the <paramref name="from" /> time zone to the <paramref name="to" /> time zone
             </summary>
             <param name="time">The time to be converted in terms of the <paramref name="from" /> time zone</param>
             <param name="from">The time zone the specified <paramref name="time" /> is in</param>
             <param name="to">The time zone to be converted to</param>
             <param name="strict">True for strict conversion, this will throw during ambiguitities, false for lenient conversion</param>
             <returns>The time in terms of the to time zone</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ConvertFromUtc(System.DateTime,NodaTime.DateTimeZone,System.Boolean)">
             <summary>
             Converts the specified time from UTC to the <paramref name="to" /> time zone
             </summary>
             <param name="time">The time to be converted expressed in UTC</param>
             <param name="to">The destinatio time zone</param>
             <param name="strict">True for strict conversion, this will throw during ambiguitities, false for lenient conversion</param>
             <returns>The time in terms of the <paramref name="to" /> time zone</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ConvertToUtc(System.DateTime,NodaTime.DateTimeZone,System.Boolean)">
             <summary>
             Converts the specified time from the <paramref name="from" /> time zone to <see cref="F:QuantConnect.TimeZones.Utc" />
             </summary>
             <param name="time">The time to be converted in terms of the <paramref name="from" /> time zone</param>
             <param name="from">The time zone the specified <paramref name="time" /> is in</param>
             <param name="strict">True for strict conversion, this will throw during ambiguitities, false for lenient conversion</param>
             <returns>The time in terms of the to time zone</returns>
            </member>
        <member name="M:QuantConnect.Extensions.Reset(System.Timers.Timer)">
             <summary>
             Add the reset method to the System.Timer class.
             </summary>
             <param name="timer">System.timer object</param>
            </member>
        <member name="M:QuantConnect.Extensions.MatchesTypeName(System.Type,System.String)">
             <summary>
             Function used to match a type against a string type name. This function compares on the AssemblyQualfiedName,
             the FullName, and then just the Name of the type.
             </summary>
             <param name="type">The type to test for a match</param>
             <param name="typeName">The name of the type to match</param>
             <returns>True if the specified type matches the type name, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Extensions.IsSubclassOfGeneric(System.Type,System.Type)">
             <summary>
             Checks the specified type to see if it is a subclass of the <paramref name="possibleSuperType" />. This method will
             crawl up the inheritance heirarchy to check for equality using generic type definitions (if exists)
             </summary>
             <param name="type">The type to be checked as a subclass of <paramref name="possibleSuperType" /></param>
             <param name="possibleSuperType">The possible superclass of <paramref name="type" /></param>
             <returns>True if <paramref name="type" /> is a subclass of the generic type definition <paramref name="possibleSuperType" /></returns>
            </member>
        <member name="M:QuantConnect.Extensions.GetBetterTypeName(System.Type)">
             <summary>
             Gets a type's name with the generic parameters filled in the way they would look when
             defined in code, such as converting Dictionary&lt;`1,`2&gt; to Dictionary&lt;string,int&gt;
             </summary>
             <param name="type">The type who's name we seek</param>
             <returns>A better type name</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)">
             <summary>
             Converts the Resolution instance into a TimeSpan instance
             </summary>
             <param name="resolution">The resolution to be converted</param>
             <returns>A TimeSpan instance that represents the resolution specified</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ConvertTo``1(System.String)">
             <summary>
             Converts the specified string value into the specified type
             </summary>
             <typeparam name="T">The output type</typeparam>
             <param name="value">The string value to be converted</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ConvertTo(System.String,System.Type)">
             <summary>
             Converts the specified string value into the specified type
             </summary>
             <param name="value">The string value to be converted</param>
             <param name="type">The output type</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle,System.Threading.CancellationToken)">
             <summary>
             Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, while observing a <see cref="T:System.Threading.CancellationToken" />.
             </summary>
             <param name="waitHandle">The wait handle to wait on</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
             <exception cref="T:System.InvalidOperationException">The maximum number of waiters has been exceeded.</exception>
             <exception cref="T:System.OperationCanceledExcepton"><paramref name="cancellationToken" /> was canceled.</exception>
             <exception cref="T:System.ObjectDisposedException">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</exception>
            </member>
        <member name="M:QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.
             </summary>
             
             <returns>
             true if the <see cref="T:System.Threading.WaitHandle" /> was set; otherwise, false.
             </returns>
             <param name="waitHandle">The wait handle to wait on</param>
             <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
             <exception cref="T:System.Threading.OperationCanceledException"><paramref name="cancellationToken" /> was canceled.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
             <exception cref="T:System.InvalidOperationException">The maximum number of waiters has been exceeded. </exception><exception cref="T:System.ObjectDisposedException">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</exception>
            </member>
        <member name="M:QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle,System.Int32,System.Threading.CancellationToken)">
             <summary>
             Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> is set, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.
             </summary>
             
             <returns>
             true if the <see cref="T:System.Threading.WaitHandle" /> was set; otherwise, false.
             </returns>
             <param name="waitHandle">The wait handle to wait on</param>
             <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</param>
             <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to observe.</param>
             <exception cref="T:System.Threading.OperationCanceledException"><paramref name="cancellationToken" /> was canceled.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</exception>
             <exception cref="T:System.InvalidOperationException">The maximum number of waiters has been exceeded.</exception>
             <exception cref="T:System.ObjectDisposedException">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</exception>
            </member>
        <member name="M:QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)">
             <summary>
             Gets the MD5 hash from a stream
             </summary>
             <param name="stream">The stream to compute a hash for</param>
             <returns>The MD5 hash</returns>
            </member>
        <member name="M:QuantConnect.Extensions.WithEmbeddedHtmlAnchors(System.String)">
             <summary>
             Convert a string into the same string with a URL! :)
             </summary>
             <param name="source">The source string to be converted</param>
             <returns>The same source string but with anchor tags around substrings matching a link regex</returns>
            </member>
        <member name="M:QuantConnect.Extensions.ToLower(System.Enum)">
             <summary>
             Converts the specified <paramref name="enum" /> value to its corresponding lower-case string representation
             </summary>
             <param name="enum">The enumeration value</param>
             <returns>A lower-case string representation of the specified enumeration value</returns>
            </member>
        <member name="T:QuantConnect.Orders.Order">
             <summary>
             Order struct for placing new trade
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Id">
             <summary>
             Order ID.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.ContingentId">
             <summary>
             Order id to process before processing this order.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.BrokerId">
             <summary>
             Brokerage Id for this order for when the brokerage splits orders into multiple pieces
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Symbol">
             <summary>
             Symbol of the Asset
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Price">
             <summary>
             Price of the Order.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.PriceCurrency">
             <summary>
             Currency for the order price
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Time">
             <summary>
             Time the order was created.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Quantity">
             <summary>
             Number of shares to execute.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Type">
             <summary>
             Order Type
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Status">
             <summary>
             Status of the Order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Duration">
             <summary>
             Order duration - GTC or Day. Day not supported in backtests.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Tag">
             <summary>
             Tag the order with some custom data
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.SecurityType">
             <summary>
             The symbol's security type
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Direction">
             <summary>
             Order Direction Property based off Quantity.
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.AbsoluteQuantity">
             <summary>
             Get the absolute quantity for this order
             </summary>
            </member>
        <member name="P:QuantConnect.Orders.Order.Value">
             <summary>
             Gets the executed value of this order. If the order has not yet filled,
             then this will return zero.
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Order.#ctor">
             <summary>
             Added a default constructor for JSON Deserialization:
             </summary>
            </member>
        <member name="M:QuantConnect.Orders.Order.#ctor(QuantConnect.Symbol,System.Int32,System.DateTime,System.String)">
             <summary>
             New order constructor
             </summary>
             <param name="symbol">Symbol asset we're seeking to trade</param>
             <param name="quantity">Quantity of the asset we're seeking to trade</param>
             <param name="time">Time the order was placed</param>
             <param name="tag">User defined data tag for this order</param>
            </member>
        <member name="M:QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)">
             <summary>
             Gets the value of this order at the given market price in units of the account currency
             NOTE: Some order types derive value from other parameters, such as limit prices
             </summary>
             <param name="security">The security matching this order's symbol</param>
             <returns>The value of this order given the current market price</returns>
            </member>
        <member name="M:QuantConnect.Orders.Order.GetValueImpl(QuantConnect.Securities.Security)">
             <summary>
             Gets the order value in units of the security's quote currency for a single unit.
             A single unit here is a single share of stock, or a single barrel of oil, or the
             cost of a single share in an option contract.
             </summary>
             <param name="security">The security matching this order's symbol</param>
            </member>
        <member name="M:QuantConnect.Orders.Order.ApplyUpdateOrderRequest(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Modifies the state of this order to match the update request
             </summary>
             <param name="request">The request to update this order object</param>
            </member>
        <member name="M:QuantConnect.Orders.Order.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Orders.Order.Clone">
             <summary>
             Creates a deep-copy clone of this order
             </summary>
             <returns>A copy of this order</returns>
            </member>
        <member name="M:QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)">
             <summary>
             Copies base Order properties to the specified order
             </summary>
             <param name="order">The target of the copy</param>
            </member>
        <member name="M:QuantConnect.Orders.Order.CreateOrder(QuantConnect.Orders.SubmitOrderRequest)">
             <summary>
             Creates an <see cref="T:QuantConnect.Orders.Order" /> to match the specified <paramref name="request" />
             </summary>
             <param name="request">The <see cref="T:QuantConnect.Orders.SubmitOrderRequest" /> to create an order for</param>
             <returns>The <see cref="T:QuantConnect.Orders.Order" /> that matches the request</returns>
            </member>
        <member name="F:QuantConnect.Orders.Order.DurationValue">
             <summary>
             Order Expiry on a specific UTC time.
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.AccountEvent">
             <summary>
             Messaging class signifying a change in a user's account
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.AccountEvent.CashBalance">
             <summary>
             Gets the total cash balance of the account in units of <see cref="P:QuantConnect.Securities.AccountEvent.CurrencySymbol" />
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.AccountEvent.CurrencySymbol">
             <summary>
             Gets the currency symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.AccountEvent.#ctor(System.String,System.Decimal)">
             <summary>
             Creates an AccountEvent
             </summary>
             <param name="currencySymbol">The currency's symbol</param>
             <param name="cashBalance">The total cash balance of the account</param>
            </member>
        <member name="M:QuantConnect.Securities.AccountEvent.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Securities.Equity.EquityCache">
             <summary>
             Equity cache override.
             </summary>
             <remarks>Scheduled for obsolesence</remarks>
             <seealso cref="T:QuantConnect.Securities.SecurityCache" />
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityCache.#ctor">
             <summary>
             Start a new Cache for the set Index Code
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Equity.EquityDataFilter">
             <summary>
             Equity security type data filter 
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityDataFilter" />
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityDataFilter.#ctor">
             <summary>
             Initialize Data Filter Class:
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityDataFilter.Filter(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Equity filter the data: true - accept, false - fail.
             </summary>
             <param name="data">Data class</param>
             <param name="vehicle">Security asset</param>
            </member>
        <member name="T:QuantConnect.Securities.Forex.ForexCache">
             <summary>
             Forex specific caching support
             </summary>
             <remarks>Class is vitually empty and scheduled to be made obsolete. Potentially could be used for user data storage.</remarks>
             <seealso cref="T:QuantConnect.Securities.SecurityCache" />
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexCache.#ctor">
             <summary>
             Initialize forex cache
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Forex.ForexDataFilter">
             <summary>
             Forex packet by packet data filtering mechanism for dynamically detecting bad ticks.
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityDataFilter" />
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexDataFilter.#ctor">
             <summary>
             Initialize forex data filter class:
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexDataFilter.Filter(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Forex data filter: a true value means accept the packet, a false means fail.
             </summary>
             <param name="data">Data object we're scanning to filter</param>
             <param name="vehicle">Security asset</param>
            </member>
        <member name="T:QuantConnect.Securities.Interfaces.ISecurityDataFilter">
             <summary>
             Security data filter interface. Defines pattern for the user defined data filter techniques.
             </summary>
             <remarks>
                 Intended for use primarily with US equities tick data. The tick data is provided in raw 
                 and complete format which is more information that more retail feeds provide. In order to match
                 retail feeds the ticks much be filtered to show only public-on market trading.
             
                 For tradebars this filter has already been done.
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.Interfaces.ISecurityDataFilter.Filter(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Filter out a tick from this security, with this new data:
             </summary>
             <param name="data">New data packet we're checking</param>
             <param name="vehicle">Security of this filter.</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityDataFilter">
             <summary>
             Base class implementation for packet by packet data filtering mechanism to dynamically detect bad ticks.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDataFilter.#ctor">
             <summary>
             Initialize data filter class
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityDataFilter.Filter(QuantConnect.Securities.Security,QuantConnect.Data.BaseData)">
             <summary>
             Filter the data packet passing through this method by returning true to accept, or false to fail/reject the data point.
             </summary>
             <param name="data">BasData data object we're filtering</param>
             <param name="vehicle">Security vehicle for filter</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityTransactionModel">
             <summary>
             Default security transaction model for user defined securities.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.#ctor">
             <summary>
             Initializes a new default instance of the <see cref="T:QuantConnect.Securities.SecurityTransactionModel" /> class.
             This will use default slippage and fill models.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.#ctor(QuantConnect.Orders.Fills.IFillModel,QuantConnect.Orders.Fees.IFeeModel,QuantConnect.Orders.Slippage.ISlippageModel)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityTransactionManager" /> class
             </summary>
             <param name="fillModel">The fill model to use</param>
             <param name="feeModel">The order fee model to use</param>
             <param name="slippageModel">The slippage model to use</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)">
             <summary>
             Default market fill model for the base security class. Fills at the last traded price.
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)">
             <summary>
             Default stop fill model implementation in base class security. (Stop Market Order Type)
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopLimitOrder)">
             <summary>
             Default stop limit fill model implementation in base class security. (Stop Limit Order Type)
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)" />
             <remarks>
                 There is no good way to model limit orders with OHLC because we never know whether the market has 
                 gapped past our fill price. We have to make the assumption of a fluid, high volume market.
             
                 Stop limit orders we also can't be sure of the order of the H - L values for the limit fill. The assumption
                 was made the limit fill will be done with closing price of the bar after the stop has been triggered..
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security,QuantConnect.Orders.LimitOrder)">
             <summary>
             Default limit order fill model in the base security class.
             </summary>
             <param name="asset">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.StopMarketOrder)" />
             <seealso cref="M:QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOrder)" />
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnOpenOrder)">
             <summary>
             Market on Open Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security,QuantConnect.Orders.MarketOnCloseOrder)">
             <summary>
             Market on Close Fill Model. Return an order event with the fill details
             </summary>
             <param name="asset">Asset we're trading with this order</param>
             <param name="order">Order to be filled</param>
             <returns>Order fill information detailing the average price and quantity filled.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Get the slippage approximation for this order
             </summary>
             <param name="security">Security asset we're filling</param>
             <param name="order">Order packet to model</param>
             <returns>decimal approximation for slippage</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionModel.GetOrderFee(QuantConnect.Securities.Security,QuantConnect.Orders.Order)">
             <summary>
             Default implementation returns 0 for fees.
             </summary>
             <param name="security">The security matching the order</param>
             <param name="order">The order to compute fees for</param>
             <returns>The cost of the order in units of the account currency</returns>
            </member>
        <member name="T:QuantConnect.Securities.Equity.Equity">
             <summary>
             Equity Security Type : Extension of the underlying Security class for equity specific behaviours.
             </summary>
             <seealso cref="T:QuantConnect.Securities.Security" />
            </member>
        <member name="F:QuantConnect.Securities.Equity.Equity.DefaultSettlementDays">
             <summary>
             The default number of days required to settle an equity sale
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.Equity.Equity.DefaultSettlementTime">
             <summary>
             The default time of day for settlement
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Equity.Equity.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Construct the Equity Object
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Equity.Equity.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Construct the Equity Object
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Equity.EquityExchange">
             <summary>
             Equity exchange information 
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Equity.EquityExchange.TradingDaysPerYear">
             <summary>
             Number of trading days in an equity calendar year - 252
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityExchange.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Equity.EquityExchange" /> class using market hours
             derived from the market-hours-database for the USA Equity market
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Equity.EquityExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="T:QuantConnect.Securities.Equity.EquityHolding">
             <summary>
             Holdings class for equities securities: no specific properties here but it is a placeholder for future equities specific behaviours.
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityHolding" />
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityHolding.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Constructor for equities holdings.
             </summary>
             <param name="security">The security being held</param>
            </member>
        <member name="T:QuantConnect.Securities.Equity.EquityTransactionModel">
             <summary>
             Transaction model for equity security trades. 
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Interfaces.ISecurityTransactionModel" />
            </member>
        <member name="M:QuantConnect.Securities.Equity.EquityTransactionModel.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Equity.EquityTransactionModel" />
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.Forex.Forex">
             <summary>
             FOREX Security Object Implementation for FOREX Assets
             </summary>
             <seealso cref="T:QuantConnect.Securities.Security" />
            </member>
        <member name="M:QuantConnect.Securities.Forex.Forex.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the forex security
             </summary>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="config">The subscription configuration for this security</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="M:QuantConnect.Securities.Forex.Forex.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Constructor for the forex security
             </summary>
             <param name="symbol">The security's symbol</param>
             <param name="exchangeHours">Defines the hours this exchange is open</param>
             <param name="quoteCurrency">The cash object that represent the quote currency</param>
             <param name="symbolProperties">The symbol properties for this security</param>
            </member>
        <member name="P:QuantConnect.Securities.Forex.Forex.BaseCurrencySymbol">
             <summary>
             Gets the currency acquired by going long this currency pair
             </summary>
             <remarks>
             For example, the EUR/USD has a base currency of the euro, and as a result
             of going long the EUR/USD a trader is acquiring euros in exchange for US dollars
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(System.String,System.String@,System.String@)">
             <summary>
             Decomposes the specified currency pair into a base and quote currency provided as out parameters
             </summary>
             <param name="currencyPair">The input currency pair to be decomposed, for example, "EURUSD"</param>
             <param name="baseCurrency">The output base currency</param>
             <param name="quoteCurrency">The output quote currency</param>
            </member>
        <member name="T:QuantConnect.Securities.Forex.ForexExchange">
             <summary>
             Forex exchange class - information and helper tools for forex exchange properties
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Forex.ForexExchange.TradingDaysPerYear">
             <summary>
             Number of trading days per year for this security, used for performance statistics.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexExchange.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Forex.ForexExchange" /> class using market hours
             derived from the market-hours-database for the FXCM Forex market
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Forex.ForexExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="T:QuantConnect.Securities.Forex.ForexHolding">
             <summary>
             FOREX holdings implementation of the base securities class
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityHolding" />
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexHolding.#ctor(QuantConnect.Securities.Forex.Forex)">
             <summary>
             Forex Holding Class
             </summary>
             <param name="security">The forex security being held</param>
            </member>
        <member name="T:QuantConnect.Securities.Forex.ForexTransactionModel">
             <summary>
             Forex Transaction Model Class: Specific transaction fill models for FOREX orders
             </summary>
             <seealso cref="T:QuantConnect.Securities.SecurityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Interfaces.ISecurityTransactionModel" />
            </member>
        <member name="M:QuantConnect.Securities.Forex.ForexTransactionModel.#ctor(System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.Forex.ForexTransactionModel" /> class
             </summary>
             <param name="monthlyTradeAmountInUSDollars">The monthly dollar volume traded</param>
            </member>
        <member name="T:QuantConnect.Securities.Interfaces.ISecurityTransactionModel">
             <summary>
             Security transaction model interface for QuantConnect security objects
             </summary>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexTransactionModel" />
            </member>
        <member name="T:QuantConnect.Securities.Security">
             <summary>
             A base vehicle properties class for providing a common interface to all assets in QuantConnect.
             </summary>
             <remarks>
             Security object is intended to hold properties of the specific security asset. These properties can include trade start-stop dates, 
             price, market hours, resolution of the security, the holdings information for this security and the specific fill model.
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.Security.Subscriptions">
             <summary>
             Gets all the subscriptions for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Symbol">
             <summary>
             <see cref="T:QuantConnect.Symbol" /> for the asset.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.QuoteCurrency">
             <summary>
             Gets the Cash object used for converting the quote currency to the account currency
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.SymbolProperties">
             <summary>
             Gets the symbol properties for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Type">
             <summary>
             Type of the security.
             </summary>
             <remarks>
             QuantConnect currently only supports Equities and Forex
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.Security.Resolution">
             <summary>
             Resolution of data requested for this security.
             </summary>
             <remarks>Tick, second or minute resolution for QuantConnect assets.</remarks>
            </member>
        <member name="P:QuantConnect.Securities.Security.IsFillDataForward">
             <summary>
             Indicates the data will use previous bars when there was no trading in this time period. This was a configurable datastream setting set in initialization.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.IsExtendedMarketHours">
             <summary>
             Indicates the security will continue feeding data after the primary market hours have closed. This was a configurable setting set in initialization.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.DataNormalizationMode">
             <summary>
             Gets the data normalization mode used for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.SubscriptionDataConfig">
             <summary>
             Gets the subscription configuration for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.HasData">
             <summary>
             There has been at least one datapoint since our algorithm started running for us to determine price.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.IsTradable">
             <summary>
             Gets or sets whether or not this security should be considered tradable
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Cache">
             <summary>
             Data cache for the security to store previous price information.
             </summary>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityCache" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexCache" />
            </member>
        <member name="P:QuantConnect.Securities.Security.Holdings">
             <summary>
             Holdings class contains the portfolio, cash and processes order fills.
             </summary>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityHolding" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexHolding" />
            </member>
        <member name="P:QuantConnect.Securities.Security.Exchange">
             <summary>
             Exchange class contains the market opening hours, along with pre-post market hours.
             </summary>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityExchange" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexExchange" />
            </member>
        <member name="P:QuantConnect.Securities.Security.Model">
             <summary>
             Transaction model class implements the fill models for the security. If the user does not define a model the default
             model is used for this asset class.
             </summary>
             <remarks>This is ignored in live trading and the real fill prices are used instead</remarks>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexTransactionModel" />
            </member>
        <member name="P:QuantConnect.Securities.Security.TransactionModel">
             <summary>
             Transaction model class implements the fill models for the security. If the user does not define a model the default
             model is used for this asset class.
             </summary>
             <remarks>This is ignored in live trading and the real fill prices are used instead</remarks>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityTransactionModel" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexTransactionModel" />
            </member>
        <member name="P:QuantConnect.Securities.Security.FeeModel">
             <summary>
             Fee model used to compute order fees for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.FillModel">
             <summary>
             Fill model used to produce fill events for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.SlippageModel">
             <summary>
             Slippage model use to compute slippage of market orders
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.PortfolioModel">
             <summary>
             Gets the portfolio model used by this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.MarginModel">
             <summary>
             Gets the margin model used for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.SettlementModel">
             <summary>
             Gets the settlement model used for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.VolatilityModel">
             <summary>
             Gets the volatility model used for this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.DataFilter">
             <summary>
             Customizable data filter to filter outlier ticks before they are passed into user event handlers. 
             By default all ticks are passed into the user algorithms.
             </summary>
             <remarks>TradeBars (seconds and minute bars) are prefiltered to ensure the ticks which build the bars are realistically tradeable</remarks>
             <seealso cref="T:QuantConnect.Securities.Equity.EquityDataFilter" />
             <seealso cref="T:QuantConnect.Securities.Forex.ForexDataFilter" />
            </member>
        <member name="P:QuantConnect.Securities.Security.PriceVariationModel">
             <summary>
             Customizable price variation model used to define the minimum price variation of this security.
             By default minimum price variation is a constant find in the symbol-properties-database.
             </summary>
             <seealso cref="T:QuantConnect.Securities.AdjustedPriceVariationModel" />
             <seealso cref="T:QuantConnect.Securities.SecurityPriceVariationModel" />
             <seealso cref="T:QuantConnect.Securities.EquityPriceVariationModel" />
            </member>
        <member name="M:QuantConnect.Securities.Security.#ctor(QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Construct a new security vehicle based on the user options.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Security.#ctor(QuantConnect.Symbol,QuantConnect.Securities.SecurityExchangeHours,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties)">
             <summary>
             Construct a new security vehicle based on the user options.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Security.#ctor(QuantConnect.Symbol,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties,QuantConnect.Securities.SecurityExchange,QuantConnect.Securities.SecurityCache,QuantConnect.Securities.ISecurityPortfolioModel,QuantConnect.Orders.Fills.IFillModel,QuantConnect.Orders.Fees.IFeeModel,QuantConnect.Orders.Slippage.ISlippageModel,QuantConnect.Securities.ISettlementModel,QuantConnect.Securities.IVolatilityModel,QuantConnect.Securities.ISecurityMarginModel,QuantConnect.Securities.Interfaces.ISecurityDataFilter,QuantConnect.Securities.IPriceVariationModel)">
             <summary>
             Construct a new security vehicle based on the user options.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Security.#ctor(QuantConnect.Data.SubscriptionDataConfig,QuantConnect.Securities.Cash,QuantConnect.Securities.SymbolProperties,QuantConnect.Securities.SecurityExchange,QuantConnect.Securities.SecurityCache,QuantConnect.Securities.ISecurityPortfolioModel,QuantConnect.Orders.Fills.IFillModel,QuantConnect.Orders.Fees.IFeeModel,QuantConnect.Orders.Slippage.ISlippageModel,QuantConnect.Securities.ISettlementModel,QuantConnect.Securities.IVolatilityModel,QuantConnect.Securities.ISecurityMarginModel,QuantConnect.Securities.Interfaces.ISecurityDataFilter,QuantConnect.Securities.IPriceVariationModel)">
             <summary>
             Temporary convenience constructor
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.HoldStock">
             <summary>
             Read only property that checks if we currently own stock in the company.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Invested">
             <summary>
             Alias for HoldStock - Do we have any of this security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.LocalTime">
             <summary>
             Local time for this market 
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Price">
             <summary>
             Get the current value of the security.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Leverage">
             <summary>
             Leverage for this Security.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.High">
             <summary>
             If this uses tradebar data, return the most recent high.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Low">
             <summary>
             If this uses tradebar data, return the most recent low.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Close">
             <summary>
             If this uses tradebar data, return the most recent close.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Open">
             <summary>
             If this uses tradebar data, return the most recent open.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.Volume">
             <summary>
             Access to the volume of the equity today
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.BidPrice">
             <summary>
             Gets the most recent bid price if available
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.BidSize">
             <summary>
             Gets the most recent bid size if available
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.AskPrice">
             <summary>
             Gets the most recent ask price if available
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.AskSize">
             <summary>
             Gets the most recent ask size if available
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.Security.OpenInterest">
             <summary>
             Access to the open interest of the security today
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Security.GetLastData">
             <summary>
             Get the last price update set to the security.
             </summary>
             <returns>BaseData object for this security</returns>
            </member>
        <member name="M:QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)">
             <summary>
             Sets the <see cref="T:QuantConnect.LocalTimeKeeper" /> to be used for this <see cref="T:QuantConnect.Securities.Security" />.
             This is the source of this instance's time.
             </summary>
             <param name="localTimeKeeper">The source of this <see cref="T:QuantConnect.Securities.Security" />'s time.</param>
            </member>
        <member name="M:QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)">
             <summary>
             Update any security properties based on the latest market data and time
             </summary>
             <param name="data">New data packet from LEAN</param>
             
            </member>
        <member name="M:QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)">
             <summary>
             Update any security properties based on the latest realtime data and time
             </summary>
             <param name="data">New data packet from LEAN</param>
            </member>
        <member name="M:QuantConnect.Securities.Security.SetLeverage(System.Decimal)">
             <summary>
             Set the leverage parameter for this security
             </summary>
             <param name="leverage">Leverage for this asset</param>
            </member>
        <member name="M:QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)">
             <summary>
             Sets the data normalization mode to be used by this security
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.Security.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfig)">
             <summary>
             Adds the specified data subscription to this security.
             </summary>
             <param name="subscription">The subscription configuration to add. The Symbol and ExchangeTimeZone properties must match the existing Security object</param>
            </member>
        <member name="M:QuantConnect.Securities.Security.AddData(QuantConnect.Data.SubscriptionDataConfigList)">
             <summary>
             Adds the specified data subscriptions to this security.
             </summary>
             <param name="subscriptions">The subscription configuration to add. The Symbol and ExchangeTimeZone properties must match the existing Security object</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityCache">
             <summary>
             Base class caching caching spot for security data and any other temporary properties.
             </summary>
             <remarks>
             This class is virtually unused and will soon be made obsolete. 
             This comment made in a remark to prevent obsolete errors in all users algorithms
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.Price">
             <summary>
             Gets the most recent price submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.Open">
             <summary>
             Gets the most recent open submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.High">
             <summary>
             Gets the most recent high submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.Low">
             <summary>
             Gets the most recent low submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.Close">
             <summary>
             Gets the most recent close submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.BidPrice">
             <summary>
             Gets the most recent bid submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.AskPrice">
             <summary>
             Gets the most recent ask submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.BidSize">
             <summary>
             Gets the most recent bid size submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.AskSize">
             <summary>
             Gets the most recent ask size submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.Volume">
             <summary>
             Gets the most recent volume submitted to this cache
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityCache.OpenInterest">
             <summary>
             Gets the most recent open interest submitted to this cache
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)">
             <summary>
             Add a new market data point to the local security cache for the current market price.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityCache.GetData">
             <summary>
             Get last data packet recieved for this security
             </summary>
             <returns>BaseData type of the security</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityCache.GetData``1">
             <summary>
             Get last data packet recieved for this security of the specified ty[e
             </summary>
             <typeparam name="T">The data type</typeparam>
             <returns>The last data packet, null if none received of type</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityCache.Reset">
             <summary>
             Reset cache storage and free memory
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.SecurityExchange">
             <summary>
             Base exchange class providing information and helper tools for reading the current exchange situation
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchange.Hours">
             <summary>
             Gets the <see cref="T:QuantConnect.Securities.SecurityExchangeHours" /> for this exchange
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchange.TimeZone">
             <summary>
             Gets the time zone for this exchange
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchange.TradingDaysPerYear">
             <summary>
             Number of trading days per year for this security. By default the market is open 365 days per year.
             </summary>
             <remarks>Used for performance statistics to calculate sharpe ratio accurately</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchange.LocalTime">
             <summary>
             Time from the most recent data
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityExchange.ExchangeOpen">
             <summary>
             Boolean property for quickly testing if the exchange is open.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.#ctor(QuantConnect.Securities.SecurityExchangeHours)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Securities.SecurityExchange" /> class using the specified
             exchange hours to determine open/close times
             </summary>
             <param name="exchangeHours">Contains the weekly exchange schedule plus holidays</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.SetLocalDateTimeFrontier(System.DateTime)">
             <summary>
             Set the current datetime in terms of the exchange's local time zone
             </summary>
             <param name="newLocalTime">Most recent data tick</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.DateIsOpen(System.DateTime)">
             <summary>
             Check if the *date* is open.
             </summary>
             <remarks>This is useful for first checking the date list, and then the market hours to save CPU cycles</remarks>
             <param name="dateToCheck">Date to check</param>
             <returns>Return true if the exchange is open for this date</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)">
             <summary>
             Check if this DateTime is open.
             </summary>
             <param name="dateTime">DateTime to check</param>
             <returns>Boolean true if the market is open</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime,System.DateTime,System.Boolean)">
             <summary>
             Determines if the exchange was open at any time between start and stop
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityExchange.SetMarketHours(System.Collections.Generic.IEnumerable{QuantConnect.Securities.MarketHoursSegment},System.DayOfWeek[])">
             <summary>
             Sets the regular market hours for the specified days If no days are specified then
             all days will be updated.
             </summary>
             <param name="marketHoursSegments">Specifies each segment of the market hours, such as premarket/market/postmark</param>
             <param name="days">The days of the week to set these times for</param>
            </member>
        <member name="T:QuantConnect.Securities.SecurityHolding">
             <summary>
             SecurityHolding is a base class for purchasing and holding a market item which manages the asset portfolio
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.#ctor(QuantConnect.Securities.Security)">
             <summary>
             Create a new holding class instance setting the initial properties to $0.
             </summary>
             <param name="security">The security being held</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.#ctor(QuantConnect.Securities.SecurityHolding)">
             <summary>
             Create a new holding class instance copying the initial properties
             </summary>
             <param name="holding">The security being held</param>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Security">
             <summary>
             The security being held
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.AveragePrice">
             <summary>
             Average price of the security holdings.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Quantity">
             <summary>
             Quantity of the security held.
             </summary>
             <remarks>Positive indicates long holdings, negative quantity indicates a short holding</remarks>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.AbsoluteQuantity" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Symbol">
             <summary>
             Symbol identifier of the underlying security.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Type">
             <summary>
             The security type of the symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Leverage">
             <summary>
             Leverage of the underlying security.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.HoldingsCost">
             <summary>
             Acquisition cost of the security total holdings.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.UnleveredHoldingsCost">
             <summary>
             Unlevered Acquisition cost of the security total holdings.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Price">
             <summary>
             Current market price of the security.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.AbsoluteHoldingsCost">
             <summary>
             Absolute holdings cost for current holdings in units of the account's currency
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.HoldingsCost" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.UnleveredAbsoluteHoldingsCost">
             <summary>
             Unlevered absolute acquisition cost of the security total holdings.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.HoldingsValue">
             <summary>
             Market value of our holdings.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.AbsoluteHoldingsValue">
             <summary>
             Absolute of the market value of our holdings.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.HoldingsValue" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.HoldStock">
             <summary>
             Boolean flat indicating if we hold any of the security
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Invested">
             <summary>
             Boolean flat indicating if we hold any of the security
             </summary>
             <remarks>Alias of HoldStock</remarks>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.HoldStock" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.TotalSaleVolume">
             <summary>
             The total transaction volume for this security since the algorithm started.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.TotalFees">
             <summary>
             Total fees for this company since the algorithm started.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.IsLong">
             <summary>
             Boolean flag indicating we have a net positive holding of the security.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.IsShort" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.IsShort">
             <summary>
             BBoolean flag indicating we have a net negative holding of the security.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.IsLong" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.AbsoluteQuantity">
             <summary>
             Absolute quantity of holdings of this security
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.Quantity" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.LastTradeProfit">
             <summary>
             Record of the closing profit from the last trade conducted.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.Profit">
             <summary>
             Calculate the total profit for this security.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.NetProfit" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.NetProfit">
             <summary>
             Return the net for this company measured by the profit less fees.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.Profit" />
             <seealso cref="P:QuantConnect.Securities.SecurityHolding.TotalFees" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.UnrealizedProfitPercent">
             <summary>
             Gets the unrealized profit as a percenage of holdings cost
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityHolding.UnrealizedProfit">
             <summary>
             Unrealized profit of this security when absolute quantity held is more than zero.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.AddNewFee(System.Decimal)">
             <summary>
             Adds a fee to the running total of total fees.
             </summary>
             <param name="newFee"></param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.AddNewProfit(System.Decimal)">
             <summary>
             Adds a profit record to the running total of profit.
             </summary>
             <param name="profitLoss">The cash change in portfolio from closing a position</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.AddNewSale(System.Decimal)">
             <summary>
             Adds a new sale value to the running total trading volume in terms of the account currency
             </summary>
             <param name="saleValue"></param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(System.Decimal)">
             <summary>
             Set the last trade profit for this security from a Portfolio.ProcessFill call.
             </summary>
             <param name="lastTradeProfit">Value of the last trade profit</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.SetHoldings(System.Decimal,System.Int32)">
             <summary>
             Set the quantity of holdings and their average price after processing a portfolio fill.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(System.Decimal)">
             <summary>
             Update local copy of closing price value.
             </summary>
             <param name="closingPrice">Price of the underlying asset to be used for calculating market price / portfolio value</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityHolding.TotalCloseProfit">
             <summary>
             Profit if we closed the holdings right now including the approximate fees.
             </summary>
             <remarks>Does not use the transaction model for market fills but should.</remarks>
            </member>
        <member name="T:QuantConnect.Securities.SecurityManager">
             <summary>
             Enumerable security management class for grouping security objects into an array and providing any common properties.
             </summary>
             <remarks>Implements IDictionary for the index searching of securities by symbol</remarks>
            </member>
        <member name="E:QuantConnect.Securities.SecurityManager.CollectionChanged">
             <summary>
             Event fired when a security is added or removed from this collection
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.UtcTime">
             <summary>
             Gets the most recent time this manager was updated
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.#ctor(QuantConnect.TimeKeeper)">
             <summary>
             Initialise the algorithm security manager with two empty dictionaries
             </summary>
             <param name="timeKeeper"></param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol,QuantConnect.Securities.Security)">
             <summary>
             Add a new security with this symbol to the collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <param name="symbol">symbol for security we're trading</param>
             <param name="security">security object</param>
             <seealso cref="M:QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)" />
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)">
             <summary>
             Add a new security with this symbol to the collection.
             </summary>
             <param name="security">security object</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.Security})">
             <summary>
             Add a symbol-security by its key value pair.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <param name="pair"></param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Clear">
             <summary>
             Clear the securities array to delete all the portfolio and asset information.
             </summary>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.Security})">
             <summary>
             Check if this collection contains this key value pair.
             </summary>
             <param name="pair">Search key-value pair</param>
             <remarks>IDictionary implementation</remarks>
             <returns>Bool true if contains this key-value pair</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)">
             <summary>
             Check if this collection contains this symbol.
             </summary>
             <param name="symbol">Symbol we're checking for.</param>
             <remarks>IDictionary implementation</remarks>
             <returns>Bool true if contains this symbol pair</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.Security}[],System.Int32)">
             <summary>
             Copy from the internal array to an external array.
             </summary>
             <param name="array">Array we're outputting to</param>
             <param name="number">Starting index of array</param>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.Count">
             <summary>
             Count of the number of securities in the collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.IsReadOnly">
             <summary>
             Flag indicating if the internal arrray is read only.
             </summary>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.Security})">
             <summary>
             Remove a key value of of symbol-securities from the collections.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <param name="pair">Key Value pair of symbol-security to remove</param>
             <returns>Boolean true on success</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)">
             <summary>
             Remove this symbol security: Dictionary interface implementation.
             </summary>
             <param name="symbol">Symbol we're searching for</param>
             <returns>true success</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.Keys">
             <summary>
             List of the symbol-keys in the collection of securities.
             </summary>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol,QuantConnect.Securities.Security@)">
             <summary>
             Try and get this security object with matching symbol and return true on success.
             </summary>
             <param name="symbol">String search symbol</param>
             <param name="security">Output Security object</param>
             <remarks>IDictionary implementation</remarks>
             <returns>True on successfully locating the security object</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.Values">
             <summary>
             Get a list of the security objects for this collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{QuantConnect#Symbol,QuantConnect#Securities#Security}}#GetEnumerator">
             <summary>
             Get the enumerator for this security collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <returns>Enumerable key value pair</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Get the enumerator for this securities collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <returns>Enumerator.</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.Item(QuantConnect.Symbol)">
             <summary>
             Indexer method for the security manager to access the securities objects by their symbol.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <param name="symbol">Symbol object indexer</param>
             <returns>Security</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityManager.Item(System.String)">
             <summary>
             Indexer method for the security manager to access the securities objects by their symbol.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <param name="ticker">string ticker symbol indexer</param>
             <returns>Security</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Securities.SecurityManager.CollectionChanged" /> event
             </summary>
             <param name="changedEventArgs">Event arguments for the <see cref="E:QuantConnect.Securities.SecurityManager.CollectionChanged" /> event</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List{System.Type},QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.SecurityExchangeHours,NodaTime.DateTimeZone,QuantConnect.Securities.SymbolProperties,QuantConnect.Securities.ISecurityInitializer,QuantConnect.Symbol,QuantConnect.Resolution,System.Boolean,System.Decimal,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Creates a security and matching configuration. This applies the default leverage if
             leverage is less than or equal to zero.
             This method also add the new symbol mapping to the <see cref="T:QuantConnect.SymbolCache" />
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Data.SubscriptionManager,QuantConnect.Securities.MarketHoursDatabase,QuantConnect.Securities.SymbolPropertiesDatabase,QuantConnect.Securities.ISecurityInitializer,QuantConnect.Symbol,QuantConnect.Resolution,System.Boolean,System.Decimal,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Creates a security and matching configuration. This applies the default leverage if
             leverage is less than or equal to zero.
             This method also add the new symbol mapping to the <see cref="T:QuantConnect.SymbolCache" />
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.SecurityPortfolioManager">
             <summary>
             Portfolio manager class groups popular properties and makes them accessible through one interface.
             It also provide indexing by the vehicle symbol to get the Security.Holding objects.
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityPortfolioManager.Securities">
             <summary>
             Local access to the securities collection for the portfolio summation.
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityPortfolioManager.Transactions">
             <summary>
             Local access to the transactions collection for the portfolio summation and updates.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.CashBook">
             <summary>
             Gets the cash book that keeps track of all currency holdings (only settled cash)
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.UnsettledCashBook">
             <summary>
             Gets the cash book that keeps track of all currency holdings (only unsettled cash)
             </summary>
            </member>
        <member name="F:QuantConnect.Securities.SecurityPortfolioManager._unsettledCashAmounts">
             <summary>
             The list of pending funds waiting for settlement time
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.#ctor(QuantConnect.Securities.SecurityManager,QuantConnect.Securities.SecurityTransactionManager)">
             <summary>
             Initialise security portfolio manager.
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Add(QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding)">
             <summary>
             Add a new securities string-security to the portfolio.
             </summary>
             <param name="symbol">Symbol of dictionary</param>
             <param name="holding">SecurityHoldings object</param>
             <exception cref="T:System.NotImplementedException">Portfolio object is an adaptor for Security Manager. This method is not applicable for PortfolioManager class.</exception>
             <remarks>This method is not implemented and using it will throw an exception</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding})">
             <summary>
             Add a new securities key value pair to the portfolio.
             </summary>
             <param name="pair">Key value pair of dictionary</param>
             <exception cref="T:System.NotImplementedException">Portfolio object is an adaptor for Security Manager. This method is not applicable for PortfolioManager class.</exception>
             <remarks>This method is not implemented and using it will throw an exception</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Clear">
             <summary>
             Clear the portfolio of securities objects.
             </summary>
             <exception cref="T:System.NotImplementedException">Portfolio object is an adaptor for Security Manager. This method is not applicable for PortfolioManager class.</exception>
             <remarks>This method is not implemented and using it will throw an exception</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding})">
             <summary>
             Remove this keyvalue pair from the portfolio.
             </summary>
             <exception cref="T:System.NotImplementedException">Portfolio object is an adaptor for Security Manager. This method is not applicable for PortfolioManager class.</exception>
             <param name="pair">Key value pair of dictionary</param>
             <remarks>This method is not implemented and using it will throw an exception</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Remove(QuantConnect.Symbol)">
             <summary>
             Remove this symbol from the portfolio.
             </summary>
             <exception cref="T:System.NotImplementedException">Portfolio object is an adaptor for Security Manager. This method is not applicable for PortfolioManager class.</exception>
             <param name="symbol">Symbol of dictionary</param>
             <remarks>This method is not implemented and using it will throw an exception</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)">
             <summary>
             Check if the portfolio contains this symbol string.
             </summary>
             <param name="symbol">String search symbol for the security</param>
             <returns>Boolean true if portfolio contains this symbol</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding})">
             <summary>
             Check if the key-value pair is in the portfolio.
             </summary>
             <remarks>IDictionary implementation calling the underlying Securities collection</remarks>
             <param name="pair">Pair we're searching for</param>
             <returns>True if we have this object</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Count">
             <summary>
             Count the securities objects in the portfolio.
             </summary>
             <remarks>IDictionary implementation calling the underlying Securities collection</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.IsReadOnly">
             <summary>
             Check if the underlying securities array is read only.
             </summary>
             <remarks>IDictionary implementation calling the underlying Securities collection</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair{QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding}[],System.Int32)">
             <summary>
             Copy contents of the portfolio collection to a new destination.
             </summary>
             <remarks>IDictionary implementation calling the underlying Securities collection</remarks>
             <param name="array">Destination array</param>
             <param name="index">Position in array to start copying</param>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Keys">
             <summary>
             Symbol keys collection of the underlying assets in the portfolio.
             </summary>
             <remarks>IDictionary implementation calling the underlying securities key symbols</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Values">
             <summary>
             Collection of securities objects in the portfolio.
             </summary>
             <remarks>IDictionary implementation calling the underlying securities values collection</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(QuantConnect.Symbol,QuantConnect.Securities.SecurityHolding@)">
             <summary>
             Attempt to get the value of the securities holding class if this symbol exists.
             </summary>
             <param name="symbol">String search symbol</param>
             <param name="holding">Holdings object of this security</param>
             <remarks>IDictionary implementation</remarks>
             <returns>Boolean true if successful locating and setting the holdings object</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{QuantConnect#Symbol,QuantConnect#Securities#SecurityHolding}}#GetEnumerator">
             <summary>
             Get the enumerator for the underlying securities collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <returns>Enumerable key value pair</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Get the enumerator for the underlying securities collection.
             </summary>
             <remarks>IDictionary implementation</remarks>
             <returns>Enumerator</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Cash">
             <summary>
             Sum of all currencies in account in US dollars (only settled cash)
             </summary>
             <remarks>
             This should not be mistaken for margin available because Forex uses margin
             even though the total cash value is not impact
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.UnsettledCash">
             <summary>
             Sum of all currencies in account in US dollars (only unsettled cash)
             </summary>
             <remarks>
             This should not be mistaken for margin available because Forex uses margin
             even though the total cash value is not impact
             </remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalUnleveredAbsoluteHoldingsCost">
             <summary>
             Absolute value of cash discounted from our total cash by the holdings we own.
             </summary>
             <remarks>When account has leverage the actual cash removed is a fraction of the purchase price according to the leverage</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalAbsoluteHoldingsCost">
             <summary>
             Gets the total absolute holdings cost of the portfolio. This sums up the individual 
             absolute cost of each holding
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalHoldingsValue">
             <summary>
             Absolute sum the individual items in portfolio.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.HoldStock">
             <summary>
             Boolean flag indicating we have any holdings in the portfolio.
             </summary>
             <remarks>Assumes no asset can have $0 price and uses the sum of total holdings value</remarks>
             <seealso cref="P:QuantConnect.Securities.SecurityPortfolioManager.Invested" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Invested">
             <summary>
             Alias for HoldStock. Check if we have and holdings.
             </summary>
             <seealso cref="P:QuantConnect.Securities.SecurityPortfolioManager.HoldStock" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalUnrealisedProfit">
             <summary>
             Get the total unrealised profit in our portfolio from the individual security unrealized profits.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalUnrealizedProfit">
             <summary>
             Get the total unrealised profit in our portfolio from the individual security unrealized profits.
             </summary>
             <remarks>Added alias for American spelling</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalPortfolioValue">
             <summary>
             Total portfolio value if we sold all holdings at current market rates.
             </summary>
             <remarks>Cash + TotalUnrealisedProfit + TotalUnleveredAbsoluteHoldingsCost</remarks>
             <seealso cref="T:QuantConnect.Securities.Cash" />
             <seealso cref="P:QuantConnect.Securities.SecurityPortfolioManager.TotalUnrealizedProfit" />
             <seealso cref="P:QuantConnect.Securities.SecurityPortfolioManager.TotalUnleveredAbsoluteHoldingsCost" />
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalFees">
             <summary>
             Total fees paid during the algorithm operation across all securities in portfolio.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalProfit">
             <summary>
             Sum of all gross profit across all securities in portfolio.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalSaleVolume">
             <summary>
             Total sale volume since the start of algorithm operations.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.TotalMarginUsed">
             <summary>
             Gets the total margin used across all securities in the account's currency
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.MarginRemaining">
             <summary>
             Gets the remaining margin on the account in the account's currency
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.MarginCallModel">
             <summary>
             Gets or sets the <see cref="T:QuantConnect.Securities.MarginCallModel" /> for the portfolio. This
             is used to executed margin call orders.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Item(QuantConnect.Symbol)">
             <summary>
             Indexer for the PortfolioManager class to access the underlying security holdings objects.
             </summary>
             <param name="symbol">Symbol object indexer</param>
             <returns>SecurityHolding class from the algorithm securities</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityPortfolioManager.Item(System.String)">
             <summary>
             Indexer for the PortfolioManager class to access the underlying security holdings objects.
             </summary>
             <param name="ticker">string ticker symbol indexer</param>
             <returns>SecurityHolding class from the algorithm securities</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.SetCash(System.Decimal)">
             <summary>
             Set the base currrency cash this algorithm is to manage.
             </summary>
             <param name="cash">Decimal cash value of portfolio</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.SetCash(System.String,System.Decimal,System.Decimal)">
             <summary>
             Set the cash for the specified symbol
             </summary>
             <param name="symbol">The cash symbol to set</param>
             <param name="cash">Decimal cash value of portfolio</param>
             <param name="conversionRate">The current conversion rate for the</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin available for trading a specific symbol in a specific direction.
             </summary>
             <param name="symbol">The symbol to compute margin remaining for</param>
             <param name="direction">The order/trading direction</param>
             <returns>The maximum order size that is currently executable in the specified direction</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.GetBuyingPower(QuantConnect.Symbol,QuantConnect.Orders.OrderDirection)">
             <summary>
             Gets the margin available for trading a specific symbol in a specific direction.
             Alias for <see cref="M:QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol,QuantConnect.Orders.OrderDirection)" />
             </summary>
             <param name="symbol">The symbol to compute margin remaining for</param>
             <param name="direction">The order/trading direction</param>
             <returns>The maximum order size that is currently executable in the specified direction</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)">
             <summary>
             Calculate the new average price after processing a partial/complete order fill event. 
             </summary>
             <remarks>
                 For purchasing stocks from zero holdings, the new average price is the sale price.
                 When simply partially reducing holdings the average price remains the same.
                 When crossing zero holdings the average price becomes the trade price in the new side of zero.
             </remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(System.Boolean@)">
             <summary>
             Scan the portfolio and the updated data for a potential margin call situation which may get the holdings below zero! 
             If there is a margin call, liquidate the portfolio immediately before the portfolio gets sub zero.
             </summary>
             <param name="issueMarginCallWarning">Set to true if a warning should be issued to the algorithm</param>
             <returns>True for a margin call on the holdings.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)">
             <summary>
             Applies a dividend to the portfolio
             </summary>
             <param name="dividend">The dividend to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)">
             <summary>
             Applies a split to the portfolio
             </summary>
             <param name="split">The split to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToEquities(QuantConnect.Data.Market.Split)">
             <summary>
             Applies a split to the portfolio equity positions
             </summary>
             <param name="split">The split to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ApplySplitToOptions(QuantConnect.Data.Market.Split)">
             <summary>
             Applies a split to the portfolio equity options positions
             </summary>
             <param name="split">The split to be applied</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime,System.Decimal)">
             <summary>
             Record the transaction value and time in a list to later be processed for statistics creation.
             </summary>
             <remarks>
             Bit of a hack -- but using datetime as dictionary key is dangerous as you can process multiple orders within a second.
             For the accounting / statistics generating purposes its not really critical to know the precise time, so just add a millisecond while there's an identical key.
             </remarks>
             <param name="time">Time of order processed </param>
             <param name="transactionProfitLoss">Profit Loss.</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.QuantConnect#Securities#ISecurityProvider#GetSecurity(QuantConnect.Symbol)">
             <summary>
             Retrieves a summary of the holdings for the specified symbol
             </summary>
             <param name="symbol">The symbol to get holdings for</param>
             <returns>The holdings for the symbol or null if the symbol is invalid and/or not in the portfolio</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.AddUnsettledCashAmount(QuantConnect.Securities.UnsettledCashAmount)">
             <summary>
             Adds an item to the list of unsettled cash amounts
             </summary>
             <param name="item">The item to add</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)">
             <summary>
             Scan the portfolio to check if unsettled funds should be settled
             </summary>
            </member>
        <member name="T:QuantConnect.Securities.SecurityTransactionManager">
             <summary>
             Algorithm Transactions Manager - Recording Transactions
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.UtcTime">
             <summary>
             Gets the time the security information was last updated
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.#ctor(QuantConnect.Securities.SecurityManager)">
             <summary>
             Initialise the transaction manager for holding and processing orders.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.TransactionRecord">
             <summary>
             Trade record of profits and losses for each trade statistics calculations
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.MinimumOrderSize">
             <summary>
             Configurable minimum order value to ignore bad orders, or orders with unrealistic sizes
             </summary>
             <remarks>Default minimum order size is $0 value</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.MinimumOrderQuantity">
             <summary>
             Configurable minimum order size to ignore bad orders, or orders with unrealistic sizes
             </summary>
             <remarks>Default minimum order size is 0 shares</remarks>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.LastOrderId">
             <summary>
             Get the last order id.
             </summary>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.MarketOrderFillTimeout">
             <summary>
             Configurable timeout for market order fills
             </summary>
             <remarks>Default value is 5 seconds</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)">
             <summary>
             Processes the order request
             </summary>
             <param name="request">The request to be processed</param>
             <returns>The order ticket for the request</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)">
             <summary>
             Add an order to collection and return the unique order id or negative if an error.
             </summary>
             <param name="request">A request detailing the order to be submitted</param>
             <returns>New unique, increasing orderid</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.UpdateOrder(QuantConnect.Orders.UpdateOrderRequest)">
             <summary>
             Update an order yet to be filled such as stop or limit orders.
             </summary>
             <param name="request">Request detailing how the order should be updated</param>
             <remarks>Does not apply if the order is already fully filled</remarks>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.CancelOrder(System.Int32)">
             <summary>
             Added alias for RemoveOrder - 
             </summary>
             <param name="orderId">Order id we wish to cancel</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)">
             <summary>
             Cancels all open orders for the specified symbol
             </summary>
             <param name="symbol">The symbol whose orders are to be cancelled</param>
             <returns>List containing the cancelled order tickets</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.RemoveOrder(System.Int32)">
             <summary>
             Remove this order from outstanding queue: user is requesting a cancel.
             </summary>
             <param name="orderId">Specific order id to remove</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func{QuantConnect.Orders.OrderTicket,System.Boolean})">
             <summary>
             Gets and enumerable of <see cref="T:QuantConnect.Orders.OrderTicket" /> matching the specified <paramref name="filter" />
             </summary>
             <param name="filter">The filter predicate used to find the required order tickets</param>
             <returns>An enumerable of <see cref="T:QuantConnect.Orders.OrderTicket" /> matching the specified <paramref name="filter" /></returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(System.Int32)">
             <summary>
             Gets the order ticket for the specified order id. Returns null if not found
             </summary>
             <param name="orderId">The order's id</param>
             <returns>The order ticket with the specified id, or null if not found</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(System.Int32)">
             <summary>
             Wait for a specific order to be either Filled, Invalid or Canceled
             </summary>
             <param name="orderId">The id of the order to wait for</param>
             <returns>True if we successfully wait for the fill, false if we were unable
             to wait. This may be because it is not a market order or because the timeout
             was reached</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders">
             <summary>
             Get a list of all open orders.
             </summary>
             <returns>List of open orders.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)">
             <summary>
             Get a list of all open orders for a symbol.
             </summary>
             <param name="symbol">The symbol for which to return the orders</param>
             <returns>List of open orders.</returns>
            </member>
        <member name="P:QuantConnect.Securities.SecurityTransactionManager.OrdersCount">
             <summary>
             Gets the current number of orders that have been processed
             </summary>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOrderById(System.Int32)">
             <summary>
             Get the order by its id
             </summary>
             <param name="orderId">Order id to fetch</param>
             <returns>The order with the specified id, or null if no match is found</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOrderByBrokerageId(System.String)">
             <summary>
             Gets the order by its brokerage id
             </summary>
             <param name="brokerageId">The brokerage id to fetch</param>
             <returns>The first order matching the brokerage id, or null if no match is found</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func{QuantConnect.Orders.Order,System.Boolean})">
             <summary>
             Gets all orders matching the specified filter
             </summary>
             <param name="filter">Delegate used to filter the orders</param>
             <returns>All open orders this order provider currently holds</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager,QuantConnect.Orders.Order)">
             <summary>
             Check if there is sufficient capital to execute this order.
             </summary>
             <param name="portfolio">Our portfolio</param>
             <param name="order">Order we're checking</param>
             <returns>True if sufficient capital.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId">
             <summary>
             Get a new order id, and increment the internal counter.
             </summary>
             <returns>New unique int order id.</returns>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)">
             <summary>
             Sets the <see cref="T:QuantConnect.Securities.IOrderProvider" /> used for fetching orders for the algorithm
             </summary>
             <param name="orderProvider">The <see cref="T:QuantConnect.Securities.IOrderProvider" /> to be used to manage fetching orders</param>
            </member>
        <member name="M:QuantConnect.Securities.SecurityTransactionManager.Completed(QuantConnect.Orders.Order)">
             <summary>
             Returns true when the specified order is in a completed state
             </summary>
            </member>
        <member name="T:QuantConnect.OS">
             <summary>
             Operating systems class for managing anything that is operation system specific.
             </summary>
             <remarks>Good design should remove the need for this function. Over time it should disappear.</remarks>
            </member>
        <member name="P:QuantConnect.OS.RamTotalCounter">
             <summary>
             Total Physical Ram on the Machine:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.RamAvailableBytes">
             <summary>
             Memory free on the machine available for use:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.CpuUsage">
             <summary>
             Total CPU usage as a percentage
             </summary>
            </member>
        <member name="P:QuantConnect.OS.IsLinux">
             <summary>
             Global Flag :: Operating System
             </summary>
            </member>
        <member name="P:QuantConnect.OS.IsWindows">
             <summary>
             Global Flag :: Operating System
             </summary>
            </member>
        <member name="P:QuantConnect.OS.PathSeparation">
             <summary>
             Character Separating directories in this OS:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.DriveSpaceRemaining">
             <summary>
             Get the drive space remaining on windows and linux in MB
             </summary>
            </member>
        <member name="P:QuantConnect.OS.DriveSpaceUsed">
             <summary>
             Get the drive space remaining on windows and linux in MB
             </summary>
            </member>
        <member name="P:QuantConnect.OS.DriveTotalSpace">
             <summary>
             Total space on the drive
             </summary>
            </member>
        <member name="M:QuantConnect.OS.GetDrive">
             <summary>
             Get the drive.
             </summary>
             <returns></returns>
            </member>
        <member name="P:QuantConnect.OS.ApplicationMemoryUsed">
             <summary>
             Get the RAM remaining on the machine:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.TotalPhysicalMemory">
             <summary>
             Get the RAM remaining on the machine:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.TotalPhysicalMemoryUsed">
             <summary>
             Get the RAM used on the machine:
             </summary>
            </member>
        <member name="P:QuantConnect.OS.FreePhysicalMemory">
             <summary>
             Gets the RAM remaining on the machine
             </summary>
            </member>
        <member name="M:QuantConnect.OS.GetServerStatistics">
             <summary>
             Gets the statistics of the machine, including CPU% and RAM
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.AlgorithmPerformance">
             <summary>
             The <see cref="T:QuantConnect.Statistics.AlgorithmPerformance" /> class is a wrapper for <see cref="T:QuantConnect.Statistics.TradeStatistics" /> and <see cref="T:QuantConnect.Statistics.PortfolioStatistics" />
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.AlgorithmPerformance.TradeStatistics">
             <summary>
             The algorithm statistics on closed trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.AlgorithmPerformance.PortfolioStatistics">
             <summary>
             The algorithm statistics on portfolio
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.AlgorithmPerformance.ClosedTrades">
             <summary>
             The list of closed trades
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.AlgorithmPerformance.#ctor(System.Collections.Generic.List{QuantConnect.Statistics.Trade},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Decimal)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.AlgorithmPerformance" /> class
             </summary>
             <param name="trades">The list of closed trades</param>
             <param name="profitLoss">Trade record of profits and losses</param>
             <param name="equity">The list of daily equity values</param>
             <param name="listPerformance">The list of algorithm performance values</param>
             <param name="listBenchmark">The list of benchmark values</param>
             <param name="startingCapital">The algorithm starting capital</param>
            </member>
        <member name="M:QuantConnect.Statistics.AlgorithmPerformance.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.AlgorithmPerformance" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.PortfolioStatistics">
             <summary>
             The <see cref="T:QuantConnect.Statistics.PortfolioStatistics" /> class represents a set of statistics calculated from equity and benchmark samples
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.AverageWinRate">
             <summary>
             The average rate of return for winning trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.AverageLossRate">
             <summary>
             The average rate of return for losing trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.ProfitLossRatio">
             <summary>
             The ratio of the average win rate to the average loss rate
             </summary>
             <remarks>If the average loss rate is zero, ProfitLossRatio is set to 0</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.WinRate">
             <summary>
             The ratio of the number of winning trades to the total number of trades
             </summary>
             <remarks>If the total number of trades is zero, WinRate is set to zero</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.LossRate">
             <summary>
             The ratio of the number of losing trades to the total number of trades
             </summary>
             <remarks>If the total number of trades is zero, LossRate is set to zero</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.Expectancy">
             <summary>
             The expected value of the rate of return
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualReturn">
             <summary>
             Annual compounded returns statistic based on the final-starting capital and years.
             </summary>
             <remarks>Also known as Compound Annual Growth Rate (CAGR)</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.Drawdown">
             <summary>
             Drawdown maximum percentage.
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.TotalNetProfit">
             <summary>
             The total net profit percentage.
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.SharpeRatio">
             <summary>
             Sharpe ratio with respect to risk free rate: measures excess of return per unit of risk.
             </summary>
             <remarks>With risk defined as the algorithm's volatility</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.Alpha">
             <summary>
             Algorithm "Alpha" statistic - abnormal returns over the risk free rate and the relationshio (beta) with the benchmark returns.
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.Beta">
             <summary>
             Algorithm "beta" statistic - the covariance between the algorithm and benchmark performance, divided by benchmark's variance
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.AnnualStandardDeviation">
             <summary>
             Annualized standard deviation
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.AnnualVariance">
             <summary>
             Annualized variance statistic calculation using the daily performance variance and trading days per year.
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.InformationRatio">
             <summary>
             Information ratio - risk adjusted return
             </summary>
             <remarks>(risk = tracking error volatility, a volatility measures that considers the volatility of both algo and benchmark)</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.TrackingError">
             <summary>
             Tracking error volatility (TEV) statistic - a measure of how closely a portfolio follows the index to which it is benchmarked
             </summary>
             <remarks>If algo = benchmark, TEV = 0</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.PortfolioStatistics.TreynorRatio">
             <summary>
             Treynor ratio statistic is a measurement of the returns earned in excess of that which could have been earned on an investment that has no diversifiable risk
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.#ctor(System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Decimal,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.PortfolioStatistics" /> class
             </summary>
             <param name="profitLoss">Trade record of profits and losses</param>
             <param name="equity">The list of daily equity values</param>
             <param name="listPerformance">The list of algorithm performance values</param>
             <param name="listBenchmark">The list of benchmark values</param>
             <param name="startingCapital">The algorithm starting capital</param>
             <param name="tradingDaysPerYear">The number of trading days per year</param>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.PortfolioStatistics" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.CompoundingAnnualPerformance(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Annual compounded returns statistic based on the final-starting capital and years.
             </summary>
             <param name="startingCapital">Algorithm starting capital</param>
             <param name="finalCapital">Algorithm final capital</param>
             <param name="years">Years trading</param>
             <returns>Decimal fraction for annual compounding performance</returns>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.DrawdownPercent(System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Int32)">
             <summary>
             Drawdown maximum percentage.
             </summary>
             <param name="equityOverTime">The list of daily equity values</param>
             <param name="rounding">The number of decimal places to round the result</param>
             <returns>The drawdown percentage</returns>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.GetAnnualPerformance(System.Collections.Generic.List{System.Double},System.Int32)">
             <summary>
             Annualized return statistic calculated as an average of daily trading performance multiplied by the number of trading days per year.
             </summary>
             <param name="performance">Dictionary collection of double performance values</param>
             <param name="tradingDaysPerYear">Trading days per year for the assets in portfolio</param>
             <remarks>May be unaccurate for forex algorithms with more trading days in a year</remarks>
             <returns>Double annual performance percentage</returns>
            </member>
        <member name="M:QuantConnect.Statistics.PortfolioStatistics.GetAnnualVariance(System.Collections.Generic.List{System.Double},System.Int32)">
             <summary>
             Annualized variance statistic calculation using the daily performance variance and trading days per year.
             </summary>
             <param name="performance"></param>
             <param name="tradingDaysPerYear"></param>
             <remarks>Invokes the variance extension in the MathNet Statistics class</remarks>
             <returns>Annual variance value</returns>
            </member>
        <member name="T:QuantConnect.Statistics.StatisticsBuilder">
             <summary>
             The <see cref="T:QuantConnect.Statistics.StatisticsBuilder" /> class creates summary and rolling statistics from trades, equity and benchmark points
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List{QuantConnect.Statistics.Trade},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Decimal,System.Decimal,System.Int32)">
             <summary>
             Generates the statistics and returns the results
             </summary>
             <param name="trades">The list of closed trades</param>
             <param name="profitLoss">Trade record of profits and losses</param>
             <param name="pointsEquity">The list of daily equity values</param>
             <param name="pointsPerformance">The list of algorithm performance values</param>
             <param name="pointsBenchmark">The list of benchmark values</param>
             <param name="startingCapital">The algorithm starting capital</param>
             <param name="totalFees">The total fees</param>
             <param name="totalTransactions">The total number of transactions</param>
             <returns>Returns a <see cref="T:QuantConnect.Statistics.StatisticsResults" /> object</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.GetAlgorithmPerformance(System.DateTime,System.DateTime,System.Collections.Generic.List{QuantConnect.Statistics.Trade},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Decimal)">
             <summary>
             Returns the performance of the algorithm in the specified date range
             </summary>
             <param name="fromDate">The initial date of the range</param>
             <param name="toDate">The final date of the range</param>
             <param name="trades">The list of closed trades</param>
             <param name="profitLoss">Trade record of profits and losses</param>
             <param name="equity">The list of daily equity values</param>
             <param name="pointsPerformance">The list of algorithm performance values</param>
             <param name="pointsBenchmark">The list of benchmark values</param>
             <param name="startingCapital">The algorithm starting capital</param>
             <returns>The algorithm performance</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.GetRollingPerformances(System.DateTime,System.DateTime,System.Collections.Generic.List{QuantConnect.Statistics.Trade},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Collections.Generic.List{QuantConnect.ChartPoint},System.Decimal)">
             <summary>
             Returns the rolling performances of the algorithm
             </summary>
             <param name="firstDate">The first date of the total period</param>
             <param name="lastDate">The last date of the total period</param>
             <param name="trades">The list of closed trades</param>
             <param name="profitLoss">Trade record of profits and losses</param>
             <param name="equity">The list of daily equity values</param>
             <param name="pointsPerformance">The list of algorithm performance values</param>
             <param name="pointsBenchmark">The list of benchmark values</param>
             <param name="startingCapital">The algorithm starting capital</param>
             <returns>A dictionary with the rolling performances</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.GetSummary(QuantConnect.Statistics.AlgorithmPerformance,System.Decimal,System.Int32)">
             <summary>
             Returns a summary of the algorithm performance as a dictionary
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.StatisticsBuilder.PeriodRange">
             <summary>
             Helper class for rolling statistics
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.GetPeriodRanges(System.Int32,System.DateTime,System.DateTime)">
             <summary>
             Gets a list of date ranges for the requested monthly period
             </summary>
             <remarks>The first and last ranges created are partial periods</remarks>
             <param name="periodMonths">The number of months in the period (valid inputs are [1, 3, 6, 12])</param>
             <param name="firstDate">The first date of the total period</param>
             <param name="lastDate">The last date of the total period</param>
             <returns>The list of date ranges</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.ChartPointToDictionary(System.Collections.Generic.IEnumerable{QuantConnect.ChartPoint},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
             <summary>
             Convert the charting data into an equity array.
             </summary>
             <remarks>This is required to convert the equity plot into a usable form for the statistics calculation</remarks>
             <param name="points">ChartPoints Array</param>
             <param name="fromDate">An optional starting date</param>
             <param name="toDate">An optional ending date</param>
             <returns>SortedDictionary of the equity decimal values ordered in time</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.CreateBenchmarkDifferences(System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal})">
             <summary>
             Creates a list of benchmark differences for the period
             </summary>
             <param name="benchmark">The benchmark values</param>
             <param name="equity">The equity values</param>
             <returns>The list of benchmark differences</returns>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsBuilder.EnsureSameLength(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
             <summary>
             Ensures the performance list and benchmark list have the same length, padding with trailing zeros
             </summary>
             <param name="listPerformance">The performance list</param>
             <param name="listBenchmark">The benchmark list</param>
            </member>
        <member name="T:QuantConnect.Statistics.StatisticsResults">
             <summary>
             The <see cref="T:QuantConnect.Statistics.StatisticsResults" /> class represents total and rolling statistics for an algorithm
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.StatisticsResults.TotalPerformance">
             <summary>
             The performance of the algorithm over the whole period
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.StatisticsResults.RollingPerformances">
             <summary>
             The rolling performance of the algorithm over 1, 3, 6, 12 month periods
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.StatisticsResults.Summary">
             <summary>
             Returns a summary of the algorithm performance as a dictionary
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsResults.#ctor(QuantConnect.Statistics.AlgorithmPerformance,System.Collections.Generic.Dictionary{System.String,QuantConnect.Statistics.AlgorithmPerformance},System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.StatisticsResults" /> class
             </summary>
             <param name="totalPerformance">The algorithm total performance</param>
             <param name="rollingPerformances">The algorithm rolling performances</param>
             <param name="summary">The summary performance dictionary</param>
            </member>
        <member name="M:QuantConnect.Statistics.StatisticsResults.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.StatisticsResults" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.TradeStatistics">
             <summary>
             The <see cref="T:QuantConnect.Statistics.TradeStatistics" /> class represents a set of statistics calculated from a list of closed trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.StartDateTime">
             <summary>
             The entry date/time of the first trade
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.EndDateTime">
             <summary>
             The exit date/time of the last trade
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.TotalNumberOfTrades">
             <summary>
             The total number of trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.NumberOfWinningTrades">
             <summary>
             The total number of winning trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.NumberOfLosingTrades">
             <summary>
             The total number of losing trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.TotalProfitLoss">
             <summary>
             The total profit/loss for all trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.TotalProfit">
             <summary>
             The total profit for all winning trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.TotalLoss">
             <summary>
             The total loss for all losing trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.LargestProfit">
             <summary>
             The largest profit in a single trade (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.LargestLoss">
             <summary>
             The largest loss in a single trade (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageProfitLoss">
             <summary>
             The average profit/loss (a.k.a. Expectancy or Average Trade) for all trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageProfit">
             <summary>
             The average profit for all winning trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageLoss">
             <summary>
             The average loss for all winning trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageTradeDuration">
             <summary>
             The average duration for all trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageWinningTradeDuration">
             <summary>
             The average duration for all winning trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageLosingTradeDuration">
             <summary>
             The average duration for all losing trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaxConsecutiveWinningTrades">
             <summary>
             The maximum number of consecutive winning trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaxConsecutiveLosingTrades">
             <summary>
             The maximum number of consecutive losing trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.ProfitLossRatio">
             <summary>
             The ratio of the average profit per trade to the average loss per trade
             </summary>
             <remarks>If the average loss is zero, ProfitLossRatio is set to 0</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.WinLossRatio">
             <summary>
             The ratio of the number of winning trades to the number of losing trades
             </summary>
             <remarks>If the total number of trades is zero, WinLossRatio is set to zero</remarks>
             <remarks>If the number of losing trades is zero and the number of winning trades is nonzero, WinLossRatio is set to 10</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.WinRate">
             <summary>
             The ratio of the number of winning trades to the total number of trades
             </summary>
             <remarks>If the total number of trades is zero, WinRate is set to zero</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.LossRate">
             <summary>
             The ratio of the number of losing trades to the total number of trades
             </summary>
             <remarks>If the total number of trades is zero, LossRate is set to zero</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageMAE">
             <summary>
             The average Maximum Adverse Excursion for all trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageMFE">
             <summary>
             The average Maximum Favorable Excursion for all trades
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.LargestMAE">
             <summary>
             The largest Maximum Adverse Excursion in a single trade (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.LargestMFE">
             <summary>
             The largest Maximum Favorable Excursion in a single trade (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaximumClosedTradeDrawdown">
             <summary>
             The maximum closed-trade drawdown for all trades (as symbol currency)
             </summary>
             <remarks>The calculation only takes into account the profit/loss of each trade</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaximumIntraTradeDrawdown">
             <summary>
             The maximum intra-trade drawdown for all trades (as symbol currency)
             </summary>
             <remarks>The calculation takes into account MAE and MFE of each trade</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.ProfitLossStandardDeviation">
             <summary>
             The standard deviation of the profits/losses for all trades (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.ProfitLossDownsideDeviation">
             <summary>
             The downside deviation of the profits/losses for all trades (as symbol currency)
             </summary>
             <remarks>This metric only considers deviations of losing trades</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.ProfitFactor">
             <summary>
             The ratio of the total profit to the total loss
             </summary>
             <remarks>If the total profit is zero, ProfitFactor is set to zero</remarks>
             <remarks>if the total loss is zero and the total profit is nonzero, ProfitFactor is set to 10</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.SharpeRatio">
             <summary>
             The ratio of the average profit/loss to the standard deviation
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.SortinoRatio">
             <summary>
             The ratio of the average profit/loss to the downside deviation
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.ProfitToMaxDrawdownRatio">
             <summary>
             The ratio of the total profit/loss to the maximum closed trade drawdown
             </summary>
             <remarks>If the total profit/loss is zero, ProfitToMaxDrawdownRatio is set to zero</remarks>
             <remarks>if the drawdown is zero and the total profit is nonzero, ProfitToMaxDrawdownRatio is set to 10</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaximumEndTradeDrawdown">
             <summary>
             The maximum amount of profit given back by a single trade before exit (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.AverageEndTradeDrawdown">
             <summary>
             The average amount of profit given back by all trades before exit (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.MaximumDrawdownDuration">
             <summary>
             The maximum amount of time to recover from a drawdown (longest time between new equity highs or peaks)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.TradeStatistics.TotalFees">
             <summary>
             The sum of fees for all trades
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.TradeStatistics.#ctor(System.Collections.Generic.IEnumerable{QuantConnect.Statistics.Trade})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.TradeStatistics" /> class
             </summary>
             <param name="trades">The list of closed trades</param>
            </member>
        <member name="M:QuantConnect.Statistics.TradeStatistics.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.TradeStatistics" /> class
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.Statistics">
             <summary>
             Calculate all the statistics required from the backtest, based on the equity curve and the profit loss statement.
             </summary>
             <remarks>This is a particularly ugly class and one of the first ones written. It should be thrown out and re-written.</remarks>
            </member>
        <member name="P:QuantConnect.Statistics.Statistics.YahooSPYBenchmark">
             <summary>
             Retrieve a static S-P500 Benchmark for the statistics calculations. Update the benchmark once per day.
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable{QuantConnect.ChartPoint})">
             <summary>
             Convert the charting data into an equity array.
             </summary>
             <remarks>This is required to convert the equity plot into a usable form for the statistics calculation</remarks>
             <param name="points">ChartPoints Array</param>
             <returns>SortedDictionary of the equity decimal values ordered in time</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable{QuantConnect.ChartPoint},System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Collections.Generic.IEnumerable{QuantConnect.ChartPoint},System.Collections.Generic.Dictionary{System.DateTime,System.Decimal},System.Decimal,System.Decimal,System.Decimal,System.Double)">
             <summary>
             Run a full set of orders and return a Dictionary of statistics.
             </summary>
             <param name="pointsEquity">Equity value over time.</param>
             <param name="profitLoss">profit loss from trades</param>
             <param name="pointsPerformance"> Daily performance</param>
             <param name="unsortedBenchmark"> Benchmark data as dictionary. Data does not need to be ordered</param>
             <param name="startingCash">Amount of starting cash in USD </param>
             <param name="totalFees">The total fees incurred over the life time of the algorithm</param>
             <param name="totalTrades">Total number of orders executed.</param>
             <param name="tradingDaysPerYear">Number of trading days per year</param>
             <returns>Statistics Array, Broken into Annual Periods</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.ProfitLossRatio(System.Decimal,System.Decimal)">
             <summary>
             Return profit loss ratio safely avoiding divide by zero errors.
             </summary>
             <param name="averageWin"></param>
             <param name="averageLoss"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Int32)">
             <summary>
             Drawdown maximum percentage.
             </summary>
             <param name="equityOverTime"></param>
             <param name="rounding"></param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary{System.DateTime,System.Decimal},System.Int32)">
             <summary>
             Drawdown maximum value
             </summary>
             <param name="equityOverTime">Array of portfolio value over time.</param>
             <param name="rounding">Round the drawdown statistics.</param>
             <returns>Draw down percentage over period.</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Annual compounded returns statistic based on the final-starting capital and years.
             </summary>
             <param name="startingCapital">Algorithm starting capital</param>
             <param name="finalCapital">Algorithm final capital</param>
             <param name="years">Years trading</param>
             <returns>Decimal fraction for annual compounding performance</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Annualized return statistic calculated as an average of daily trading performance multiplied by the number of trading days per year.
             </summary>
             <param name="performance">Dictionary collection of double performance values</param>
             <param name="tradingDaysPerYear">Trading days per year for the assets in portfolio</param>
             <remarks>May be unaccurate for forex algorithms with more trading days in a year</remarks>
             <returns>Double annual performance percentage</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Annualized variance statistic calculation using the daily performance variance and trading days per year.
             </summary>
             <param name="performance"></param>
             <param name="tradingDaysPerYear"></param>
             <remarks>Invokes the variance extension in the MathNet Statistics class</remarks>
             <returns>Annual variance value</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Annualized standard deviation
             </summary>
             <param name="performance">Collection of double values for daily performance</param>
             <param name="tradingDaysPerYear">Number of trading days for the assets in portfolio to get annualize standard deviation.</param>
             <remarks>
                 Invokes the variance extension in the MathNet Statistics class.
                 Feasibly the trading days per year can be fetched from the dictionary of performance which includes the date-times to get the range; if is more than 1 year data.
             </remarks>
             <returns>Value for annual standard deviation</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
             <summary>
             Algorithm "beta" statistic - the covariance between the algorithm and benchmark performance, divided by benchmark's variance
             </summary>
             <param name="algoPerformance">Collection of double values for algorithm daily performance.</param>
             <param name="benchmarkPerformance">Collection of double benchmark daily performance values.</param>
             <remarks>Invokes the variance and covariance extensions in the MathNet Statistics class</remarks>
             <returns>Value for beta</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Algorithm "Alpha" statistic - abnormal returns over the risk free rate and the relationshio (beta) with the benchmark returns.
             </summary>
             <param name="algoPerformance">Collection of double algorithm daily performance values.</param>
             <param name="benchmarkPerformance">Collection of double benchmark daily performance values.</param>
             <param name="riskFreeRate">Risk free rate of return for the T-Bonds.</param>
             <returns>Value for alpha</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
             <summary>
             Tracking error volatility (TEV) statistic - a measure of how closely a portfolio follows the index to which it is benchmarked
             </summary>
             <remarks>If algo = benchmark, TEV = 0</remarks>
             <param name="algoPerformance">Double collection of algorithm daily performance values</param>
             <param name="benchmarkPerformance">Double collection of benchmark daily performance values</param>
             <returns>Value for tracking error</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
             <summary>
             Information ratio - risk adjusted return
             </summary>
             <param name="algoPerformance">Collection of doubles for the daily algorithm daily performance</param>
             <param name="benchmarkPerformance">Collection of doubles for the benchmark daily performance</param>
             <remarks>(risk = tracking error volatility, a volatility measures that considers the volatility of both algo and benchmark)</remarks>
             <seealso cref="M:QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})" />
             <returns>Value for information ratio</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Sharpe ratio with respect to risk free rate: measures excess of return per unit of risk.
             </summary>
             <remarks>With risk defined as the algorithm's volatility</remarks>
             <param name="algoPerformance">Collection of double values for the algorithm daily performance</param>
             <param name="riskFreeRate"></param>
             <returns>Value for sharpe ratio</returns>
            </member>
        <member name="M:QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Double)">
             <summary>
             Treynor ratio statistic is a measurement of the returns earned in excess of that which could have been earned on an investment that has no diversifiable risk
             </summary>
             <param name="algoPerformance">Collection of double algorithm daily performance values</param>
             <param name="benchmarkPerformance">Collection of double benchmark daily performance values</param>
             <param name="riskFreeRate">Risk free rate of return</param>
             <returns>double Treynor ratio</returns>
            </member>
        <member name="T:QuantConnect.RealTimeSynchronizedTimer">
             <summary>
             Real time timer class for precise callbacks on a millisecond resolution in a self managed thread.
             </summary>
             <remarks>Due to the way Window's system clock works the clock is only accurate to the nearest 16ms. In linux it is accurate to the millisecond.</remarks>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.#ctor">
             <summary>
             Constructor for Real Time Event Driver:
             </summary>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.#ctor(System.TimeSpan,System.Action{System.DateTime})">
             <summary>
             Trigger an event callback after precisely milliseconds-lapsed. 
             This is expensive, it creates a new thread and closely monitors the loop.
             </summary>
             <param name="period">delay period between event callbacks</param>
             <param name="callback">Callback event passed the UTC time the event is intended to be triggered</param>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.Start">
             <summary>
             Start the synchronized real time timer - fire events at start of each second or minute 
             </summary>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.Scanner">
             <summary>
             Scan the stopwatch for the desired millisecond delay:
             </summary>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.Pause">
             <summary>
             Hang the real time event:
             </summary>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.Resume">
             <summary>
             Resume clock
             </summary>
            </member>
        <member name="M:QuantConnect.RealTimeSynchronizedTimer.Stop">
             <summary>
             Stop the real time timer:
             </summary>
            </member>
        <member name="T:QuantConnect.Symbol">
             <summary>
             Represents a unique security identifier. This is made of two components,
             the unique SID and the Value. The value is the current ticker symbol while
             the SID is constant over the life of a security
             </summary>
            </member>
        <member name="F:QuantConnect.Symbol.Empty">
             <summary>
             Represents an unassigned symbol. This is intended to be used as an
             uninitialized, default value
             </summary>
            </member>
        <member name="M:QuantConnect.Symbol.Create(System.String,QuantConnect.SecurityType,System.String,System.String)">
             <summary>
             Provides a convience method for creating a Symbol for most security types.
             This method currently does not support Option, Commodity, and Future
             </summary>
             <param name="ticker">The string ticker symbol</param>
             <param name="securityType">The security type of the ticker. If securityType == Option, then a canonical symbol is created</param>
             <param name="market">The market the ticker resides in</param>
             <param name="alias">An alias to be used for the symbol cache. Required when
             adding the same security from different markets</param>
             <returns>A new Symbol object for the specified ticker</returns>
            </member>
        <member name="M:QuantConnect.Symbol.CreateOption(System.String,System.String,QuantConnect.OptionStyle,QuantConnect.OptionRight,System.Decimal,System.DateTime,System.String,System.Boolean)">
             <summary>
             Provides a convenience method for creating an option Symbol.
             </summary>
             <param name="underlying">The underlying ticker</param>
             <param name="market">The market the underlying resides in</param>
             <param name="style">The option style (American, European, ect..)</param>
             <param name="right">The option right (Put/Call)</param>
             <param name="strike">The option strike price</param>
             <param name="expiry">The option expiry date</param>
             <param name="alias">An alias to be used for the symbol cache. Required when 
             adding the same security from diferent markets</param>
             <param name="mapSymbol">Specifies if symbol should be mapped using map file provider</param>
             <returns>A new Symbol object for the specified option contract</returns>
            </member>
        <member name="M:QuantConnect.Symbol.CreateOption(QuantConnect.Symbol,System.String,QuantConnect.OptionStyle,QuantConnect.OptionRight,System.Decimal,System.DateTime,System.String)">
             <summary>
             Provides a convenience method for creating an option Symbol using SecurityIdentifier.
             </summary>
             <param name="underlyingSymbol">The underlying security symbol</param>
             <param name="market">The market the underlying resides in</param>
             <param name="style">The option style (American, European, ect..)</param>
             <param name="right">The option right (Put/Call)</param>
             <param name="strike">The option strike price</param>
             <param name="expiry">The option expiry date</param>
             <param name="alias">An alias to be used for the symbol cache. Required when 
             adding the same security from diferent markets</param>
             <returns>A new Symbol object for the specified option contract</returns>
            </member>
        <member name="M:QuantConnect.Symbol.CreateFuture(System.String,System.String,System.DateTime,System.String)">
             <summary>
             Provides a convenience method for creating a futures Symbol.
             </summary>
             <param name="underlying">The underlying ticker</param>
             <param name="market">The market the underlying resides in</param>
             <param name="expiry">The option expiry date</param>
             <param name="alias">An alias to be used for the symbol cache. Required when 
             adding the same security from different markets</param>
             <returns>A new Symbol object for the specified option contract</returns>
            </member>
        <member name="M:QuantConnect.Symbol.IsCanonical">
             <summary>
             Method returns true, if symbol is a derivative canonical symbol
             </summary>
             <returns>true, if symbol is a derivative canonical symbol</returns>
            </member>
        <member name="P:QuantConnect.Symbol.Value">
             <summary>
             Gets the current symbol for this ticker
             </summary>
            </member>
        <member name="P:QuantConnect.Symbol.ID">
             <summary>
             Gets the security identifier for this symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Symbol.HasUnderlying">
             <summary>
             Gets whether or not this <see cref="T:QuantConnect.Symbol" /> is a derivative,
             that is, it has a valid <see cref="P:QuantConnect.Symbol.Underlying" /> property
             </summary>
            </member>
        <member name="P:QuantConnect.Symbol.Underlying">
             <summary>
             Gets the security underlying symbol, if any
             </summary>
            </member>
        <member name="P:QuantConnect.Symbol.SecurityType">
             <summary>
             Gets the security type of the symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Symbol.#ctor(QuantConnect.SecurityIdentifier,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Symbol" /> class
             </summary>
             <param name="sid">The security identifier for this symbol</param>
             <param name="value">The current ticker symbol value</param>
            </member>
        <member name="M:QuantConnect.Symbol.UpdateMappedSymbol(System.String)">
             <summary>
             Creates new symbol with updated mapped symbol. Symbol Mapping: When symbols change over time (e.g. CHASE-&gt; JPM) need to update the symbol requested.
             Method returns newly created symbol 
             </summary>
            </member>
        <member name="M:QuantConnect.Symbol.#ctor(QuantConnect.SecurityIdentifier,System.String,QuantConnect.Symbol)">
             <summary>
             Private constructor initializes a new instance of the <see cref="T:QuantConnect.Symbol" /> class with underlying
             </summary>
             <param name="sid">The security identifier for this symbol</param>
             <param name="value">The current ticker symbol value</param>
             <param name="underlying">The underlying symbol</param>
            </member>
        <member name="M:QuantConnect.Symbol.Equals(System.Object)">
             <summary>
             Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
             </summary>
             <returns>
             true if the specified object  is equal to the current object; otherwise, false.
             </returns>
             <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Symbol.GetHashCode">
             <summary>
             Serves as a hash function for a particular type. 
             </summary>
             <returns>
             A hash code for the current <see cref="T:System.Object" />.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Symbol.CompareTo(System.Object)">
             <summary>
             Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
             </summary>
             <returns>
             A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="obj" /> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="obj" />. Greater than zero This instance follows <paramref name="obj" /> in the sort order. 
             </returns>
             <param name="obj">An object to compare with this instance. </param><exception cref="T:System.ArgumentException"><paramref name="obj" /> is not the same type as this instance. </exception><filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Symbol.ToString">
             <summary>
             Returns a string that represents the current object.
             </summary>
             <returns>
             A string that represents the current object.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="M:QuantConnect.Symbol.Equals(QuantConnect.Symbol)">
             <summary>
             Indicates whether the current object is equal to another object of the same type.
             </summary>
             <returns>
             true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
             </returns>
             <param name="other">An object to compare with this object.</param>
            </member>
        <member name="M:QuantConnect.Symbol.op_Equality(QuantConnect.Symbol,QuantConnect.Symbol)">
             <summary>
             Equals operator 
             </summary>
             <param name="left">The left operand</param>
             <param name="right">The right operand</param>
             <returns>True if both symbols are equal, otherwise false</returns>
            </member>
        <member name="M:QuantConnect.Symbol.op_Inequality(QuantConnect.Symbol,QuantConnect.Symbol)">
             <summary>
             Not equals operator 
             </summary>
             <param name="left">The left operand</param>
             <param name="right">The right operand</param>
             <returns>True if both symbols are not equal, otherwise false</returns>
            </member>
        <member name="M:QuantConnect.Symbol.op_Implicit(QuantConnect.Symbol)~System.String">
             <summary>
             Returns the symbol's string ticker
             </summary>
             <param name="symbol">The symbol</param>
             <returns>The string ticker</returns>
            </member>
        <member name="M:QuantConnect.Symbol.op_Implicit(System.String)~QuantConnect.Symbol">
             <summary>
             Creates symbol using string as sid
             </summary>
             <param name="ticker">The string</param>
             <returns>The symbol</returns>
            </member>
        <member name="T:QuantConnect.Statistics.Trade">
             <summary>
             Represents a closed trade
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.Symbol">
             <summary>
             The symbol of the traded instrument
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.EntryTime">
             <summary>
             The date and time the trade was opened
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.EntryPrice">
             <summary>
             The price at which the trade was opened (or the average price if multiple entries)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.Direction">
             <summary>
             The direction of the trade (Long or Short)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.Quantity">
             <summary>
             The total unsigned quantity of the trade
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.ExitTime">
             <summary>
             The date and time the trade was closed
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.ExitPrice">
             <summary>
             The price at which the trade was closed (or the average price if multiple exits)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.ProfitLoss">
             <summary>
             The gross profit/loss of the trade (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.TotalFees">
             <summary>
             The total fees associated with the trade (always positive value) (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.MAE">
             <summary>
             The Maximum Adverse Excursion (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.MFE">
             <summary>
             The Maximum Favorable Excursion (as symbol currency)
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.Duration">
             <summary>
             Returns the duration of the trade
             </summary>
            </member>
        <member name="P:QuantConnect.Statistics.Trade.EndTradeDrawdown">
             <summary>
             Returns the amount of profit given back before the trade was closed
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.TradeBuilder">
             <summary>
             The <see cref="T:QuantConnect.Statistics.TradeBuilder" /> class generates trades from executions and market price updates
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.TradeBuilder.Position">
             <summary>
             Helper class to manage pending trades and market price updates for a symbol
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.#ctor(QuantConnect.Statistics.FillGroupingMethod,QuantConnect.Statistics.FillMatchingMethod)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Statistics.TradeBuilder" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.SetLiveMode(System.Boolean)">
             <summary>
             Sets the live mode flag
             </summary>
             <param name="live">The live mode flag</param>
            </member>
        <member name="P:QuantConnect.Statistics.TradeBuilder.ClosedTrades">
             <summary>
             The list of closed trades
             </summary>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.HasOpenPosition(QuantConnect.Symbol)">
             <summary>
             Returns true if there is an open position for the symbol
             </summary>
             <param name="symbol">The symbol</param>
             <returns>true if there is an open position for the symbol</returns>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol,System.Decimal)">
             <summary>
             Sets the current market price for the symbol
             </summary>
             <param name="symbol"></param>
             <param name="price"></param>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.ProcessFill(QuantConnect.Orders.OrderEvent,System.Decimal,System.Decimal)">
             <summary>
             Processes a new fill, eventually creating new trades
             </summary>
             <param name="fill">The new fill order event</param>
             <param name="conversionRate">The current market conversion rate into the account currency</param>
             <param name="multiplier">The contract multiplier</param>
            </member>
        <member name="M:QuantConnect.Statistics.TradeBuilder.AddNewTrade(QuantConnect.Statistics.Trade)">
             <summary>
             Adds a trade to the list of closed trades, capping the total number only in live mode
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.TradeDirection">
             <summary>
             Direction of a trade
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.TradeDirection.Long">
             <summary>
             Long direction
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.TradeDirection.Short">
             <summary>
             Short direction
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.FillGroupingMethod">
             <summary>
             The method used to group order fills into trades
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.FillGroupingMethod.FillToFill">
             <summary>
             A Trade is defined by a fill that establishes or increases a position and an offsetting fill that reduces the position size.
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.FillGroupingMethod.FlatToFlat">
             <summary>
             A Trade is defined by a sequence of fills, from a flat position to a non-zero position which may increase or decrease in quantity, and back to a flat position.
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.FillGroupingMethod.FlatToReduced">
             <summary>
             A Trade is defined by a sequence of fills, from a flat position to a non-zero position and an offsetting fill that reduces the position size.
             </summary>
            </member>
        <member name="T:QuantConnect.Statistics.FillMatchingMethod">
             <summary>
             The method used to match offsetting order fills
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.FillMatchingMethod.FIFO">
             <summary>
             First In First Out fill matching method
             </summary>
            </member>
        <member name="F:QuantConnect.Statistics.FillMatchingMethod.LIFO">
             <summary>
             Last In Last Out fill matching method
             </summary>
            </member>
        <member name="T:QuantConnect.SymbolCache">
             <summary>
             Provides a string-&gt;Symbol mapping to allow for user defined strings to be lifted into a Symbol
             This is mainly used via the Symbol implicit operator, but also functions that create securities
             should also call Set to add new mappings
             </summary>
            </member>
        <member name="M:QuantConnect.SymbolCache.Set(System.String,QuantConnect.Symbol)">
             <summary>
             Adds a mapping for the specified ticker
             </summary>
             <param name="ticker">The string ticker symbol</param>
             <param name="symbol">The symbol object that maps to the string ticker symbol</param>
            </member>
        <member name="M:QuantConnect.SymbolCache.GetSymbol(System.String)">
             <summary>
             Gets the Symbol object that is mapped to the specified string ticker symbol
             </summary>
             <param name="ticker">The string ticker symbol</param>
             <returns>The symbol object that maps to the specified string ticker symbol</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.TryGetSymbol(System.String,QuantConnect.Symbol@)">
             <summary>
             Gets the Symbol object that is mapped to the specified string ticker symbol
             </summary>
             <param name="ticker">The string ticker symbol</param>
             <param name="symbol">The output symbol object</param>
             <returns>The symbol object that maps to the specified string ticker symbol</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.GetTicker(QuantConnect.Symbol)">
             <summary>
             Gets the string ticker symbol that is mapped to the specified Symbol
             </summary>
             <param name="symbol">The symbol object</param>
             <returns>The string ticker symbol that maps to the specified symbol object</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.TryGetTicker(QuantConnect.Symbol,System.String@)">
             <summary>
             Gets the string ticker symbol that is mapped to the specified Symbol
             </summary>
             <param name="symbol">The symbol object</param>
             <param name="ticker">The output string ticker symbol</param>
             <returns>The string ticker symbol that maps to the specified symbol object</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)">
             <summary>
             Removes the mapping for the specified symbol from the cache
             </summary>
             <param name="symbol">The symbol whose mappings are to be removed</param>
             <returns>True if the symbol mapping were removed from the cache</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.TryRemove(System.String)">
             <summary>
             Removes the mapping for the specified symbol from the cache
             </summary>
             <param name="ticker">The ticker whose mappings are to be removed</param>
             <returns>True if the symbol mapping were removed from the cache</returns>
            </member>
        <member name="M:QuantConnect.SymbolCache.Clear">
             <summary>
             Clears the current caches
             </summary>
            </member>
        <member name="M:QuantConnect.SymbolCache.Cache.TryGetSymbol(System.String,QuantConnect.Symbol@)">
             <summary>
             Attempts to resolve the ticker to a Symbol via the cache. If not found in the
             cache then
             </summary>
             <param name="ticker">The ticker to resolver to a symbol</param>
             <param name="symbol">The resolves symbol</param>
             <returns>True if we successfully resolved a symbol, false otherwise</returns>
            </member>
        <member name="T:QuantConnect.SymbolJsonConverter">
             <summary>
             Defines a <see cref="T:Newtonsoft.Json.JsonConverter" /> to be used when deserializing to 
             the <see cref="T:QuantConnect.Symbol" /> class.
             </summary>
            </member>
        <member name="M:QuantConnect.SymbolJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.SymbolJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.SymbolJsonConverter.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="T:QuantConnect.SymbolRepresentation">
             <summary>
             Public static helper class that does parsing/generation of symbol representations (options, futures)
             </summary>
            </member>
        <member name="T:QuantConnect.SymbolRepresentation.FutureTickerProperties">
             <summary>
             Class contains future ticker properties returned by ParseFutureTicker()
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.FutureTickerProperties.Underlying">
             <summary>
             Underlying name
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.FutureTickerProperties.ExpirationYearShort">
             <summary>
             Short expiration year
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.FutureTickerProperties.ExpirationMonth">
             <summary>
             Expiration month
             </summary>
            </member>
        <member name="T:QuantConnect.SymbolRepresentation.OptionTickerProperties">
             <summary>
             Class contains option ticker properties returned by ParseOptionTickerIQFeed()
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.OptionTickerProperties.Underlying">
             <summary>
             Underlying name
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.OptionTickerProperties.OptionRight">
             <summary>
             Option right
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.OptionTickerProperties.OptionStrike">
             <summary>
             Option strike
             </summary>
            </member>
        <member name="P:QuantConnect.SymbolRepresentation.OptionTickerProperties.ExpirationDate">
             <summary>
             Expiration date
             </summary>
            </member>
        <member name="M:QuantConnect.SymbolRepresentation.ParseFutureTicker(System.String)">
             <summary>
             Function returns underlying name, expiration year, expiration month for the future contract ticker. Function detects if
             the format is used either XYZH6 or XYZH16. Returns null, if parsing failed.
             </summary>
             <param name="ticker"></param>
             <returns>Results containing 1) underlying name, 2) short expiration year, 3) expiration month</returns>
            </member>
        <member name="M:QuantConnect.SymbolRepresentation.GenerateFutureTicker(System.String,System.DateTime,System.Boolean)">
             <summary>
             Returns future symbol ticker from underlying and expiration date. Function can generate tickers of two formats: one and two digits year
             </summary>
             <param name="underlying">String underlying</param>
             <param name="expiration">Expiration date</param>
             <param name="doubleDigitsYear">True if year should represented by two digits; False - one digit</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.SymbolRepresentation.GenerateOptionTickerOSI(System.String,QuantConnect.OptionRight,System.Decimal,System.DateTime)">
             <summary>
             Returns option symbol ticker in accordance with OSI symbology
             More information can be found at http://www.optionsclearing.com/components/docs/initiatives/symbology/symbology_initiative_v1_8.pdf
             </summary>
             <param name="underlying">Underlying string</param>
             <param name="right">Option right</param>
             <param name="strikePrice">Option strike</param>
             <param name="expiration">Option expiration date</param>
             <returns></returns>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:QuantConnect.SymbolRepresentation.ParseOptionTickerIQFeed(System.String)-->
        <member name="T:QuantConnect.SymbolValueJsonConverter">
             <summary>
             Defines a <see cref="T:Newtonsoft.Json.JsonConverter" /> to be used when you only want to serialize
             the <see cref="P:QuantConnect.Symbol.Value" /> property instead of the full <see cref="T:QuantConnect.Symbol" />
             instance
             </summary>
            </member>
        <member name="M:QuantConnect.SymbolValueJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.SymbolValueJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.SymbolValueJsonConverter.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="T:QuantConnect.Time">
             <summary>
             Time helper class collection for working with trading dates
             </summary>
            </member>
        <member name="F:QuantConnect.Time.EndOfTime">
             <summary>
             Provides a value far enough in the future the current computer hardware will have decayed :)
             </summary>
             <value>
             new DateTime(2050, 12, 31)
             </value>
            </member>
        <member name="F:QuantConnect.Time.BeginningOfTime">
             <summary>
             Provides a value far enough in the past that can be used as a lower bound on dates
             </summary>
             <value>
             DateTime.FromOADate(0)
             </value>
            </member>
        <member name="F:QuantConnect.Time.MaxTimeSpan">
             <summary>
             Provides a value large enough that we won't hit the limit, while small enough
             we can still do math against it without checking everywhere for <see cref="F:System.TimeSpan.MaxValue" />
             </summary>
            </member>
        <member name="F:QuantConnect.Time.OneDay">
             <summary>
             One Day TimeSpan Period Constant
             </summary>
            </member>
        <member name="F:QuantConnect.Time.OneHour">
             <summary>
             One Hour TimeSpan Period Constant
             </summary>
            </member>
        <member name="F:QuantConnect.Time.OneMinute">
             <summary>
             One Minute TimeSpan Period Constant
             </summary>
            </member>
        <member name="F:QuantConnect.Time.OneSecond">
             <summary>
             One Second TimeSpan Period Constant
             </summary>
            </member>
        <member name="F:QuantConnect.Time.OneMillisecond">
             <summary>
             One Millisecond TimeSpan Period Constant
             </summary>
            </member>
        <member name="T:QuantConnect.Time.DateTimeWithZone">
             <summary>
             Live charting is sensitive to timezone so need to convert the local system time to a UTC and display in browser as UTC.
             </summary>
            </member>
        <member name="M:QuantConnect.Time.DateTimeWithZone.#ctor(System.DateTime,System.TimeZoneInfo)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Time.DateTimeWithZone" /> struct.
             </summary>
             <param name="dateTime">Date time.</param>
             <param name="timeZone">Time zone.</param>
            </member>
        <member name="P:QuantConnect.Time.DateTimeWithZone.UniversalTime">
             <summary>
             Gets the universal time.
             </summary>
             <value>The universal time.</value>
            </member>
        <member name="P:QuantConnect.Time.DateTimeWithZone.TimeZone">
             <summary>
             Gets the time zone.
             </summary>
             <value>The time zone.</value>
            </member>
        <member name="P:QuantConnect.Time.DateTimeWithZone.LocalTime">
             <summary>
             Gets the local time.
             </summary>
             <value>The local time.</value>
            </member>
        <member name="M:QuantConnect.Time.UnixTimeStampToDateTime(System.Double)">
             <summary>
             Create a C# DateTime from a UnixTimestamp
             </summary>
             <param name="unixTimeStamp">Double unix timestamp (Time since Midnight Jan 1 1970)</param>
             <returns>C# date timeobject</returns>
            </member>
        <member name="M:QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)">
             <summary>
             Convert a Datetime to Unix Timestamp
             </summary>
             <param name="time">C# datetime object</param>
             <returns>Double unix timestamp</returns>
            </member>
        <member name="M:QuantConnect.Time.TimeStamp">
             <summary>
             Get the current time as a unix timestamp
             </summary>
             <returns>Double value of the unix as UTC timestamp</returns>
            </member>
        <member name="M:QuantConnect.Time.Max(System.TimeSpan,System.TimeSpan)">
             <summary>
             Returns the timespan with the larger value
             </summary>
            </member>
        <member name="M:QuantConnect.Time.Min(System.TimeSpan,System.TimeSpan)">
             <summary>
             Returns the timespan with the smaller value
             </summary>
            </member>
        <member name="M:QuantConnect.Time.ParseDate(System.String)">
             <summary>
             Parse a standard YY MM DD date into a DateTime. Attempt common date formats 
             </summary>
             <param name="dateToParse">String date time to parse</param>
             <returns>Date time</returns>
            </member>
        <member name="M:QuantConnect.Time.EachDay(System.DateTime,System.DateTime)">
             <summary>
             Define an enumerable date range and return each date as a datetime object in the date range
             </summary>
             <param name="from">DateTime start date</param>
             <param name="thru">DateTime end date</param>
             <returns>Enumerable date range</returns>
            </member>
        <member name="M:QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection{QuantConnect.Securities.Security},System.DateTime,System.DateTime)">
             <summary>
             Define an enumerable date range of tradeable dates - skip the holidays and weekends when securities in this algorithm don't trade.
             </summary>
             <param name="securities">Securities we have in portfolio</param>
             <param name="from">Start date</param>
             <param name="thru">End date</param>
             <returns>Enumerable date range</returns>
            </member>
        <member name="M:QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security,System.DateTime,System.DateTime)">
             <summary>
             Define an enumerable date range of tradeable dates - skip the holidays and weekends when securities in this algorithm don't trade.
             </summary>
             <param name="security">The security to get tradeable dates for</param>
             <param name="from">Start date</param>
             <param name="thru">End date</param>
             <returns>Enumerable date range</returns>
            </member>
        <member name="M:QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours,System.DateTime,System.DateTime)">
             <summary>
             Define an enumerable date range of tradeable dates - skip the holidays and weekends when securities in this algorithm don't trade.
             </summary>
             <param name="exchange">The security to get tradeable dates for</param>
             <param name="from">Start date</param>
             <param name="thru">End date</param>
             <returns>Enumerable date range</returns>
            </member>
        <member name="M:QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours,System.DateTime,System.DateTime,NodaTime.DateTimeZone,System.Boolean)">
             <summary>
             Define an enumerable date range of tradeable dates but expressed in a different time zone.
             </summary>
             <remarks>
             This is mainly used to bridge the gap between exchange time zone and data time zone for file written to disk. The returned
             enumerable of dates is gauranteed to be the same size or longer than those generated via <see cref="M:QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection{QuantConnect.Securities.Security},System.DateTime,System.DateTime)" />
             </remarks>
             <param name="exchange">The exchange hours</param>
             <param name="from">The start time in the exchange time zone</param>
             <param name="thru">The end time in the exchange time zone (inclusive of the final day)</param>
             <param name="timeZone">The timezone to project the dates into (inclusive of the final day)</param>
             <param name="includeExtendedMarketHours">True to include extended market hours trading in the search, false otherwise</param>
             <returns></returns>
            </member>
        <member name="M:QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable{QuantConnect.Securities.Security},System.DateTime)">
             <summary>
             Make sure this date is not a holiday, or weekend for the securities in this algorithm.
             </summary>
             <param name="securities">Security manager from the algorithm</param>
             <param name="day">DateTime to check if trade-able.</param>
             <returns>True if tradeable date</returns>
            </member>
        <member name="M:QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection{QuantConnect.Securities.Security},System.DateTime,System.DateTime)">
             <summary>
             Could of the number of tradeable dates within this period.
             </summary>
             <param name="securities">Securities we're trading</param>
             <param name="start">Start of Date Loop</param>
             <param name="finish">End of Date Loop</param>
             <returns>Number of dates</returns>
            </member>
        <member name="M:QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours,System.DateTime,System.TimeSpan,System.Int32,System.Boolean)">
             <summary>
             Determines the start time required to produce the requested number of bars and the given size
             </summary>
             <param name="exchange">The exchange used to test for market open hours</param>
             <param name="end">The end time of the last bar over the requested period</param>
             <param name="barSize">The length of each bar</param>
             <param name="barCount">The number of bars requested</param>
             <param name="extendedMarketHours">True to allow extended market hours bars, otherwise false for only normal market hours</param>
             <returns>The start time that would provide the specified number of bars ending at the specified end time, rounded down by the requested bar size</returns>
            </member>
        <member name="T:QuantConnect.TimeKeeper">
             <summary>
             Provides a means of centralizing time for various time zones.
             </summary>
            </member>
        <member name="P:QuantConnect.TimeKeeper.UtcTime">
             <summary>
             Gets the current time in UTC
             </summary>
            </member>
        <member name="M:QuantConnect.TimeKeeper.#ctor(System.DateTime,NodaTime.DateTimeZone[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.TimeKeeper" /> class at the specified
             UTC time and for the specified time zones. Each time zone specified will cause the
             creation of a <see cref="T:QuantConnect.LocalTimeKeeper" /> to handle conversions for that time zone.
             </summary>
             <param name="utcDateTime">The initial time</param>
             <param name="timeZones">The time zones used to instantiate <see cref="T:QuantConnect.LocalTimeKeeper" /> instances.</param>
            </member>
        <member name="M:QuantConnect.TimeKeeper.#ctor(System.DateTime,System.Collections.Generic.IEnumerable{NodaTime.DateTimeZone})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.TimeKeeper" /> class at the specified
             UTC time and for the specified time zones. Each time zone specified will cause the
             creation of a <see cref="T:QuantConnect.LocalTimeKeeper" /> to handle conversions for that time zone.
             </summary>
             <param name="utcDateTime">The initial time</param>
             <param name="timeZones">The time zones used to instantiate <see cref="T:QuantConnect.LocalTimeKeeper" /> instances.</param>
            </member>
        <member name="M:QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)">
             <summary>
             Sets the current UTC time for this time keeper and the attached child <see cref="T:QuantConnect.LocalTimeKeeper" /> instances.
             </summary>
             <param name="utcDateTime">The current time in UTC</param>
            </member>
        <member name="M:QuantConnect.TimeKeeper.GetTimeIn(NodaTime.DateTimeZone)">
             <summary>
             Gets the local time in the specified time zone. If the specified <see cref="T:NodaTime.DateTimeZone" />
             has not already been added, this will throw a <see cref="T:System.Collections.Generic.KeyNotFoundException" />.
             </summary>
             <param name="timeZone">The time zone to get local time for</param>
             <returns>The local time in the specifed time zone</returns>
            </member>
        <member name="M:QuantConnect.TimeKeeper.GetLocalTimeKeeper(NodaTime.DateTimeZone)">
             <summary>
             Gets the <see cref="T:QuantConnect.LocalTimeKeeper" /> instance for the specified time zone
             </summary>
             <param name="timeZone">The time zone whose <see cref="T:QuantConnect.LocalTimeKeeper" /> we seek</param>
             <returns>The <see cref="T:QuantConnect.LocalTimeKeeper" /> instance for the specified time zone</returns>
            </member>
        <member name="M:QuantConnect.TimeKeeper.AddTimeZone(NodaTime.DateTimeZone)">
             <summary>
             Adds the specified time zone to this time keeper
             </summary>
             <param name="timeZone"></param>
            </member>
        <member name="T:QuantConnect.TimeUpdatedEventArgs">
             <summary>
             Event arguments class for the <see cref="E:QuantConnect.LocalTimeKeeper.TimeUpdated" /> event
             </summary>
            </member>
        <member name="F:QuantConnect.TimeUpdatedEventArgs.Time">
             <summary>
             Gets the new time
             </summary>
            </member>
        <member name="F:QuantConnect.TimeUpdatedEventArgs.TimeZone">
             <summary>
             Gets the time zone
             </summary>
            </member>
        <member name="M:QuantConnect.TimeUpdatedEventArgs.#ctor(System.DateTime,NodaTime.DateTimeZone)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.TimeUpdatedEventArgs" /> class
             </summary>
             <param name="time">The newly updated time</param>
             <param name="timeZone">The time zone of the new time</param>
            </member>
        <member name="T:QuantConnect.TimeZoneOffsetProvider">
             <summary>
             Represents the discontinuties in a single time zone and provides offsets to UTC.
             This type assumes that times will be asked in a forward marching manner.
             This type is not thread safe.
             </summary>
            </member>
        <member name="P:QuantConnect.TimeZoneOffsetProvider.TimeZone">
             <summary>
             Gets the time zone this instances provides offsets for
             </summary>
            </member>
        <member name="M:QuantConnect.TimeZoneOffsetProvider.#ctor(NodaTime.DateTimeZone,System.DateTime,System.DateTime)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.TimeZoneOffsetProvider" /> class
             </summary>
             <param name="timeZone">The time zone to provide offsets for</param>
             <param name="utcStartTime">The start of the range of offsets</param>
             <param name="utcEndTime">The en of the range of offsets</param>
            </member>
        <member name="M:QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)">
             <summary>
             Gets the offset in ticks from this time zone to UTC, such that UTC time + offset = local time
             </summary>
             <param name="utcTime">The time in UTC to get an offset to local</param>
             <returns>The offset in ticks between UTC and the local time zone</returns>
            </member>
        <member name="M:QuantConnect.TimeZoneOffsetProvider.GetNextDiscontinuity">
             <summary>
             Gets this offset provider's next discontinuity
             </summary>
             <returns>The next discontinuity in UTC ticks</returns>
            </member>
        <member name="M:QuantConnect.TimeZoneOffsetProvider.ConvertFromUtc(System.DateTime)">
             <summary>
             Converts the specified <paramref name="utcTime" /> using the offset resolved from
             a call to <see cref="M:QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)" />
             </summary>
             <param name="utcTime">The time to convert from utc</param>
             <returns>The same instant in time represented in the <see cref="T:System.TimeZone" /></returns>
            </member>
        <member name="M:QuantConnect.TimeZoneOffsetProvider.GetDateTimeUtcTicks(NodaTime.TimeZones.ZoneInterval)">
             <summary>
             Gets the zone interval's start time in DateTimeKind.Utc ticks
             </summary>
            </member>
        <member name="T:QuantConnect.TimeZones">
             <summary>
             Provides access to common time zones
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Utc">
             <summary>
             Gets the Universal Coordinated time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.NewYork">
             <summary>
             Gets the time zone for New York City, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.EasternStandard">
             <summary>
             Get the Eastern Standard Time (EST) WITHOUT daylight savings, this is a constant -5 hour offset
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.London">
             <summary>
             Gets the time zone for London, England. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.HongKong">
             <summary>
             Gets the time zone for Hong Kong, China.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Tokyo">
             <summary>
             Gets the time zone for Tokyo, Japan.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Rome">
             <summary>
             Gets the time zone for Rome, Italy. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Sydney">
             <summary>
             Gets the time zone for Sydney, Australia. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Vancouver">
             <summary>
             Gets the time zone for Vancouver, Canada.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Toronto">
             <summary>
             Gets the time zone for Toronto, Canada. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Chicao">
             <summary>
             Gets the time zone for Chicago, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.LosAngeles">
             <summary>
             Gets the time zone for Los Angeles, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Phoenix">
             <summary>
             Gets the time zone for Phoenix, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Auckland">
             <summary>
             Gets the time zone for Auckland, New Zealand. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Moscow">
             <summary>
             Gets the time zone for Moscow, Russia.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Madrid">
             <summary>
             Gets the time zone for Madrid, Span. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.BuenosAires">
             <summary>
             Gets the time zone for Buenos Aires, Argentia.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Brisbane">
             <summary>
             Gets the time zone for Brisbane, Australia.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.SaoPaulo">
             <summary>
             Gets the time zone for Sao Paulo, Brazil. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Cairo">
             <summary>
             Gets the time zone for Cairo, Egypt.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Johannesburg">
             <summary>
             Gets the time zone for Johannesburg, South Africa.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Anchorage">
             <summary>
             Gets the time zone for Anchorage, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Denver">
             <summary>
             Gets the time zone for Denver, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Detroit">
             <summary>
             Gets the time zone for Detroit, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.MexicoCity">
             <summary>
             Gets the time zone for Mexico City, Mexico. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Jerusalem">
             <summary>
             Gets the time zone for Jerusalem, Israel. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Shanghai">
             <summary>
             Gets the time zone for Shanghai, China.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Melbourne">
             <summary>
             Gets the time zone for Melbourne, Australia. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Amsterdam">
             <summary>
             Gets the time zone for Amsterdam, Netherlands. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Athens">
             <summary>
             Gets the time zone for Athens, Greece. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Berlin">
             <summary>
             Gets the time zone for Berlin, Germany. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Bucharest">
             <summary>
             Gets the time zone for Bucharest, Romania. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Dublin">
             <summary>
             Gets the time zone for Dublin, Ireland. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Helsinki">
             <summary>
             Gets the time zone for Helsinki, Finland. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Istanbul">
             <summary>
             Gets the time zone for Istanbul, Turkey. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Minsk">
             <summary>
             Gets the time zone for Minsk, Belarus.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Paris">
             <summary>
             Gets the time zone for Paris, France. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Zurich">
             <summary>
             Gets the time zone for Zurich, Switzerland. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="F:QuantConnect.TimeZones.Honolulu">
             <summary>
             Gets the time zone for Honolulu, USA. This is a daylight savings time zone.
             </summary>
            </member>
        <member name="T:QuantConnect.TradingCalendar">
             <summary>
             Class represents trading calendar, populated with variety of events relevant to currently trading instruments
             </summary>
            </member>
        <member name="M:QuantConnect.TradingCalendar.GetTradingDay">
             <summary>
             Method returns <see cref="T:QuantConnect.TradingDay" /> that contains trading events associated with today's date
             </summary>
             <returns>Populated instance of <see cref="T:QuantConnect.TradingDay" /></returns>
            </member>
        <member name="M:QuantConnect.TradingCalendar.GetTradingDay(System.DateTime)">
             <summary>
             Method returns <see cref="T:QuantConnect.TradingDay" /> that contains trading events associated with the given date
             </summary>
             <returns>Populated instance of <see cref="T:QuantConnect.TradingDay" /></returns>
            </member>
        <member name="M:QuantConnect.TradingCalendar.GetTradingDays(System.DateTime,System.DateTime)">
             <summary>
             Method returns <see cref="T:QuantConnect.TradingDay" /> that contains trading events associated with the range of dates
             </summary>
             <param name="start">Start date of the range (inclusive)</param>
             <param name="end">End date of the range (inclusive)</param>
             <returns>&gt;Populated list of <see cref="T:QuantConnect.TradingDay" /></returns>
            </member>
        <member name="M:QuantConnect.TradingCalendar.GetDaysByType(QuantConnect.TradingDayType,System.DateTime,System.DateTime)">
             <summary>
             Method returns <see cref="T:QuantConnect.TradingDay" /> of the specified type (<see cref="T:QuantConnect.TradingDayType" />) that contains trading events associated with the range of dates
             </summary>
             <param name="type">Type of the events</param>
             <param name="start">Start date of the range (inclusive)</param>
             <param name="end">End date of the range (inclusive)</param>
             <returns>&gt;Populated list of <see cref="T:QuantConnect.TradingDay" /></returns>
            </member>
        <member name="T:QuantConnect.TradingDayType">
             <summary>
             Enum lists available trading events
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.BusinessDay">
             <summary>
             Business day
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.PublicHoliday">
             <summary>
             Public Holiday
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.Weekend">
             <summary>
             Weekend
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.OptionExpiration">
             <summary>
             Option Expiration Date
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.FutureExpiration">
             <summary>
             Futures Expiration Date
             </summary>
            </member>
        <member name="F:QuantConnect.TradingDayType.FutureRoll">
             <summary>
             Futures Roll Date
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="F:QuantConnect.TradingDayType.SymbolDelisting">
             <summary>
             Symbol Delisting Date
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="F:QuantConnect.TradingDayType.EquityDividends">
             <summary>
             Equity Ex-dividend Date
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="F:QuantConnect.TradingDayType.EconomicEvent">
             <summary>
             FX Economic Event
             </summary>
             <remarks>FX Economic Event e.g. from DailyFx (DailyFx.cs). Not used yet. For future use.</remarks>
            </member>
        <member name="T:QuantConnect.TradingDay">
             <summary>
             Class contains trading events associated with particular day in <see cref="T:QuantConnect.TradingCalendar" />
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.Date">
             <summary>
             The date that this instance is associated with
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.BusinessDay">
             <summary>
             Property returns true, if the day is a business day
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.PublicHoliday">
             <summary>
             Property returns true, if the day is a public holiday
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.Weekend">
             <summary>
             Property returns true, if the day is a weekend
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.OptionExpirations">
             <summary>
             Property returns the list of options (among currently traded) that expire on this day
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.FutureExpirations">
             <summary>
             Property returns the list of futures (among currently traded) that expire on this day
             </summary>
            </member>
        <member name="P:QuantConnect.TradingDay.FutureRolls">
             <summary>
             Property returns the list of futures (among currently traded) that roll forward on this day
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="P:QuantConnect.TradingDay.SymbolDelistings">
             <summary>
             Property returns the list of symbols (among currently traded) that are delisted on this day
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="P:QuantConnect.TradingDay.EquityDividends">
             <summary>
             Property returns the list of symbols (among currently traded) that have ex-dividend date on this day
             </summary>
             <remarks>Not used yet. For future use.</remarks>
            </member>
        <member name="T:QuantConnect.Util.BusyBlockingCollection`1">
             <summary>
             A small wrapper around <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> used to communicate busy state of the items
             being processed
             </summary>
             <typeparam name="T">The item type being processed</typeparam>
            </member>
        <member name="P:QuantConnect.Util.BusyBlockingCollection`1.WaitHandle">
             <summary>
             Gets a wait handle that can be used to wait until this instance is done
             processing all of it's item
             </summary>
            </member>
        <member name="P:QuantConnect.Util.BusyBlockingCollection`1.Count">
             <summary>
             Gets the number of items held within this collection
             </summary>
            </member>
        <member name="P:QuantConnect.Util.BusyBlockingCollection`1.IsBusy">
             <summary>
             Returns true if processing, false otherwise
             </summary>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.BusyBlockingCollection`1" /> class
             with a bounded capacity of <see cref="F:System.Int32.MaxValue" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.BusyBlockingCollection`1" /> class
             with the specified <paramref name="boundedCapacity" />
             </summary>
             <param name="boundedCapacity">The maximum number of items allowed in the collection</param>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.Add(`0)">
             <summary>
             Adds the items to this collection
             </summary>
             <param name="item">The item to be added</param>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
             <summary>
             Adds the items to this collection
             </summary>
             <param name="item">The item to be added</param>
             <param name="cancellationToken">A cancellation token to observer</param>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.CompleteAdding">
             <summary>
             Marks the <see cref="T:QuantConnect.Util.BusyBlockingCollection`1" /> as not accepting any more additions
             </summary>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.GetConsumingEnumerable">
             <summary>
             Provides a consuming enumerable for items in this collection.
             </summary>
             <returns>An enumerable that removes and returns items from the collection</returns>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
             <summary>
             Provides a consuming enumerable for items in this collection.
             </summary>
             <param name="cancellationToken">A cancellation token to observer</param>
             <returns>An enumerable that removes and returns items from the collection</returns>
            </member>
        <member name="M:QuantConnect.Util.BusyBlockingCollection`1.Dispose">
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
             </summary>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Util.CircularQueue`1">
             <summary>
             A never ending queue that will dequeue and reenqueue the same item
             </summary>
            </member>
        <member name="E:QuantConnect.Util.CircularQueue`1.CircleCompleted">
             <summary>
             Fired when we do a full circle
             </summary>
            </member>
        <member name="M:QuantConnect.Util.CircularQueue`1.#ctor(`0[])">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.CircularQueue`1" /> class
             </summary>
             <param name="items">The items in the queue</param>
            </member>
        <member name="M:QuantConnect.Util.CircularQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.CircularQueue`1" /> class
             </summary>
             <param name="items">The items in the queue</param>
            </member>
        <member name="M:QuantConnect.Util.CircularQueue`1.Dequeue">
             <summary>
             Dequeues the next item
             </summary>
             <returns>The next item</returns>
            </member>
        <member name="M:QuantConnect.Util.CircularQueue`1.OnCircleCompleted">
             <summary>
             Event invocator for the <see cref="E:QuantConnect.Util.CircularQueue{`0}.CircleCompleted" /> evet
             </summary>
            </member>
        <member name="T:QuantConnect.Util.Composer">
             <summary>
             Provides methods for obtaining exported MEF instances
             </summary>
            </member>
        <member name="F:QuantConnect.Util.Composer.Instance">
             <summary>
             Gets the singleton instance
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Composer.#ctor">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.Composer" /> class. This type
             is a light wrapper on top of an MEF <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Composer.Single``1(System.Func{``0,System.Boolean})">
             <summary>
             Gets the export matching the predicate
             </summary>
             <param name="predicate">Function used to pick which imported instance to return, if null the first instance is returned</param>
             <returns>The only export matching the specified predicate</returns>
            </member>
        <member name="M:QuantConnect.Util.Composer.AddPart``1(``0)">
             <summary>
             Adds the specified instance to this instance to allow it to be recalled via GetExportedValueByTypeName
             </summary>
             <typeparam name="T">The contract type</typeparam>
             <param name="instance">The instance to add</param>
            </member>
        <member name="M:QuantConnect.Util.Composer.GetExportedValueByTypeName``1(System.String)">
             <summary>
             Extension method to searches the composition container for an export that has a matching type name. This function
             will first try to match on Type.AssemblyQualifiedName, then Type.FullName, and finally on Type.Name
             
             This method will not throw if multiple types are found matching the name, it will just return the first one it finds.
             </summary>
             <typeparam name="T">The type of the export</typeparam>
             <param name="typeName">The name of the type to find. This can be an assembly qualified name, a full name, or just the type's name</param>
             <returns>The export instance</returns>
            </member>
        <member name="M:QuantConnect.Util.Composer.GetExportedValues``1">
             <summary>
             Gets all exports of type T
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Composer.Reset">
             <summary>
             Clears the cache of exported values, causing new instances to be created.
             </summary>
            </member>
        <member name="T:QuantConnect.Util.DisposableExtensions">
             <summary>
             Provides extensions methods for <see cref="T:System.IDisposable" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable)">
             <summary>
             Calls <see cref="M:System.IDisposable.Dispose" /> within a try/catch and logs any errors.
             </summary>
             <param name="disposable">The <see cref="T:System.IDisposable" /> to be disposed</param>
             <returns>True if the object was successfully disposed, false if an error was thrown</returns>
            </member>
        <member name="M:QuantConnect.Util.DisposableExtensions.DisposeSafely(System.IDisposable,System.Action{System.Exception})">
             <summary>
             Calls <see cref="M:System.IDisposable.Dispose" /> within a try/catch and invokes the 
             <paramref name="errorHandler" /> on any errors.
             </summary>
             <param name="disposable">The <see cref="T:System.IDisposable" /> to be disposed</param>
             <param name="errorHandler">Error handler delegate invoked if an exception is thrown
             while calling <see cref="M:System.IDisposable.Dispose" /></param> on <paramref name="disposable" />
             <returns>True if the object was successfully disposed, false if an error was thrown or
             the specified disposable was null</returns>
            </member>
        <member name="T:QuantConnect.Util.ExpressionBuilder">
             <summary>
             Provides methods for constructing expressions at runtime
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type,System.String)">
             <summary>
             Constructs a selector of the form: x =&gt; x.propertyOrField where x is an instance of 'type'
             </summary>
             <param name="type">The type of the parameter in the expression</param>
             <param name="propertyOrField">The name of the property or field to bind to</param>
             <returns>A new lambda expression that represents accessing the property or field on 'type'</returns>
            </member>
        <member name="M:QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector``2(System.String)">
             <summary>
             Constructs a selector of the form: x =&gt; x.propertyOrField where x is an instance of 'type'
             </summary>
             <typeparam name="T">The type of the parameter in the expression</typeparam>
             <typeparam name="TProperty">The type of the property or field being accessed in the expression</typeparam>
             <param name="propertyOrField">The name of the property or field to bind to</param>
             <returns>A new lambda expression that represents accessing the property or field on 'type'</returns>
            </member>
        <member name="M:QuantConnect.Util.ExpressionBuilder.AsEnumerable(System.Linq.Expressions.Expression)">
             <summary>
             Converts the specified expression into an enumerable of expressions by walking the expression tree
             </summary>
             <param name="expression">The expression to enumerate</param>
             <returns>An enumerable containing all expressions in the input expression</returns>
            </member>
        <member name="M:QuantConnect.Util.ExpressionBuilder.OfType``1(System.Linq.Expressions.Expression)">
             <summary>
             Returns all the expressions of the specified type in the given expression tree
             </summary>
             <typeparam name="T">The type of expression to search for</typeparam>
             <param name="expression">The expression to search</param>
             <returns>All expressions of the given type in the specified expression</returns>
            </member>
        <member name="T:QuantConnect.Util.FixedSizeQueue`1">
             <summary>
             Helper method for a limited length queue which self-removes the extra elements.
             http://stackoverflow.com/questions/5852863/fixed-size-queue-which-automatically-dequeues-old-values-upon-new-enques
             </summary>
             <typeparam name="T">The type of item the queue holds</typeparam>
            </member>
        <member name="P:QuantConnect.Util.FixedSizeQueue`1.Limit">
             <summary>
             Max Length 
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeQueue`1.#ctor(System.Int32)">
             <summary>
             Create a new fixed length queue:
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeQueue`1.Enqueue(`0)">
             <summary>
             Enqueue a new item int the generic fixed length queue:
             </summary>
            </member>
        <member name="T:QuantConnect.Util.FixedSizeHashQueue`1">
             <summary>
             Provides an implementation of an add-only fixed length, unique queue system
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.FixedSizeHashQueue`1" /> class
             </summary>
             <param name="size">The maximum number of items to hold</param>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.Add(`0)">
             <summary>
             Returns true if the item was added and didn't already exists
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.TryPeek(`0@)">
             <summary>
             Tries to inspect the first item in the queue
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.Dequeue">
             <summary>
             Dequeues and returns the next item in the queue
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.Contains(`0)">
             <summary>
             Returns true if the specified item exists in the collection
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Util.FixedSizeHashQueue`1.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Util.FuncParallelRunnerWorkItem">
             <summary>
             Provides a functional implementation of the <see cref="T:QuantConnect.Util.IParallelRunnerWorkItem" /> interface
             </summary>
            </member>
        <member name="P:QuantConnect.Util.FuncParallelRunnerWorkItem.IsReady">
             <summary>
             Determines if this work item is ready to be processed
             </summary>
            </member>
        <member name="M:QuantConnect.Util.FuncParallelRunnerWorkItem.#ctor(System.Func{System.Boolean},System.Action)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.FuncParallelRunnerWorkItem" /> class
             </summary>
             <param name="isReady">The IsReady function implementation</param>
             <param name="execute">The Execute function implementation</param>
            </member>
        <member name="M:QuantConnect.Util.FuncParallelRunnerWorkItem.Execute">
             <summary>
             Executes this work item
             </summary>
             <returns>The result of execution</returns>
            </member>
        <member name="T:QuantConnect.Util.FuncTextWriter">
             <summary>
             Provides an implementation of <see cref="T:System.IO.TextWriter" /> that redirects Write(string) and WriteLine(string)
             </summary>
            </member>
        <member name="P:QuantConnect.Util.FuncTextWriter.Encoding">
             <inheritdoc />
            </member>
        <member name="M:QuantConnect.Util.FuncTextWriter.#ctor(System.Action{System.String})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.FuncTextWriter" /> that will direct
             messages to the algorithm's Debug function.
             </summary>
             <param name="writer">The algorithm hosting the Debug function where messages will be directed</param>
            </member>
        <member name="M:QuantConnect.Util.FuncTextWriter.Write(System.String)">
             <summary>
             Writes the string value using the delegate provided at construction
             </summary>
             <param name="value">The string value to be written</param>
            </member>
        <member name="M:QuantConnect.Util.FuncTextWriter.WriteLine(System.String)">
             <summary>
             Writes the string value using the delegate provided at construction
             </summary>
             <param name="value"></param>
            </member>
        <member name="T:QuantConnect.Util.IParallelRunnerWorkItem">
             <summary>
             Represents a work item to be processed
             </summary>
            </member>
        <member name="P:QuantConnect.Util.IParallelRunnerWorkItem.IsReady">
             <summary>
             Determines if this work item is ready to be processed
             </summary>
            </member>
        <member name="M:QuantConnect.Util.IParallelRunnerWorkItem.Execute">
             <summary>
             Executes this work item
             </summary>
             <returns>The result of execution</returns>
            </member>
        <member name="T:QuantConnect.Util.LeanData">
             <summary>
             Provides methods for generating lean data file content
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData,QuantConnect.Resolution,NodaTime.DateTimeZone,NodaTime.DateTimeZone)">
             <summary>
             Converts the specified base data instance into a lean data file csv line.
             This method takes into account the fake that base data instances typically
             are time stamped in the exchange time zone, but need to be written to disk
             in the data time zone.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData,QuantConnect.SecurityType,QuantConnect.Resolution)">
             <summary>
             Converts the specified base data instance into a lean data file csv line
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Gets the data type required for the specified combination of resolution and tick type
             </summary>
             <param name="resolution">The resolution, if Tick, the Type returned is always Tick</param>
             <param name="tickType">The <see cref="T:QuantConnect.TickType" /> that primarily dictates the type returned</param>
             <returns>The Type used to create a subscription</returns>
            </member>
        <member name="M:QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)">
             <summary>
             Determines if the Type is a 'common' type used throughout lean
             This method is helpful in creating <see cref="T:QuantConnect.Data.SubscriptionDataConfig" />
             </summary>
             <param name="baseDataType">The Type to check</param>
             <returns>A bool indicating whether the type is of type <see cref="T:QuantConnect.Data.Market.TradeBar" />
              <see cref="T:QuantConnect.Data.Market.QuoteBar" /> or <see cref="T:QuantConnect.Data.Market.OpenInterest" /></returns>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipFilePath(System.String,QuantConnect.Symbol,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Generates the full zip file path rooted in the <paramref name="dataDirectory" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipFilePath(System.String,System.String,QuantConnect.SecurityType,System.String,System.DateTime,QuantConnect.Resolution)">
             <summary>
             Generates the full zip file path rooted in the <paramref name="dataDirectory" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateRelativeZipFileDirectory(QuantConnect.Symbol,QuantConnect.Resolution)">
             <summary>
             Generates the relative zip directory for the specified symbol/resolution
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateRelativeFactorFilePath(QuantConnect.Symbol)">
             <summary>
             Generates relative factor file paths for equities
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Generates the relative zip file path rooted in the /Data directory
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(System.String,QuantConnect.SecurityType,System.String,System.DateTime,QuantConnect.Resolution)">
             <summary>
             Generates the relative zip file path rooted in the /Data directory
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Generate's the zip entry name to hold the specified data.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipEntryName(System.String,QuantConnect.SecurityType,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Creates the entry name for a QC zip data file
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol,System.DateTime,QuantConnect.Resolution,QuantConnect.TickType)">
             <summary>
             Generates the zip file name for the specified date of data.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GenerateZipFileName(System.String,QuantConnect.SecurityType,System.DateTime,QuantConnect.Resolution,System.Nullable{QuantConnect.TickType})">
             <summary>
             Creates the zip file name for a QC zip data file
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GetCommonTickType(QuantConnect.SecurityType)">
             <summary>
             Gets the tick type most commonly associated with the specified security type
             </summary>
             <param name="securityType">The security type</param>
             <returns>The most common tick type for the specified security type</returns>
            </member>
        <member name="M:QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol,QuantConnect.Resolution,System.String)">
             <summary>
             Creates a symbol from the specified zip entry name
             </summary>
             <param name="symbol">The root symbol of the output symbol</param>
             <param name="resolution">The resolution of the data source producing the zip entry name</param>
             <param name="zipEntryName">The zip entry name to be parsed</param>
             <returns>A new symbol representing the zip entry name</returns>
            </member>
        <member name="M:QuantConnect.Util.LeanData.Scale(System.Decimal)">
             <summary>
             Scale and convert the resulting number to deci-cents int.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.ToCsv(System.Object[])">
             <summary>
             Create a csv line from the specified arguments
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.ToCsv(QuantConnect.Data.Market.IBar)">
             <summary>
             Creates a csv line for the bar, if null fills in empty strings
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type)">
             <summary>
             Get the <see cref="T:QuantConnect.TickType" /> for common Lean data types.
             If not a Lean common data type, return a TickType of Trade.
             </summary>
             <param name="type">A Type used to determine the TickType</param>
             <returns>A TickType corresponding to the type</returns>
            </member>
        <member name="T:QuantConnect.Util.LeanDataPathComponents">
             <summary>
             Type representing the various pieces of information emebedded into a lean data file path
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.Date">
             <summary>
             Gets the date component from the file name
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.SecurityType">
             <summary>
             Gets the security type from the path
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.Market">
             <summary>
             Gets the market from the path
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.Resolution">
             <summary>
             Gets the resolution from the path
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.Filename">
             <summary>
             Gets the file name, not inluding directory information
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.Symbol">
             <summary>
             Gets the symbol object implied by the path. For options, or any
             multi-entry zip file, this should be the canonical symbol
             </summary>
            </member>
        <member name="P:QuantConnect.Util.LeanDataPathComponents.TickType">
             <summary>
             Gets the tick type from the file name
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanDataPathComponents.#ctor(QuantConnect.SecurityType,System.String,QuantConnect.Resolution,QuantConnect.Symbol,System.String,System.DateTime,QuantConnect.TickType)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.LeanDataPathComponents" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LeanDataPathComponents.Parse(System.String)">
             <summary>
             Parses the specified path into a new instance of the <see cref="T:QuantConnect.Util.LeanDataPathComponents" /> class
             </summary>
             <param name="path">The path to be parsed</param>
             <returns>A new instance of the <see cref="T:QuantConnect.Util.LeanDataPathComponents" /> class representing the specified path</returns>
            </member>
        <member name="T:QuantConnect.Util.MarketHoursDatabaseJsonConverter">
             <summary>
             Provides json conversion for the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class
             </summary>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.Convert(QuantConnect.Securities.MarketHoursDatabase)">
             <summary>
             Convert the input value to a value to be serialzied
             </summary>
             <param name="value">The input value to be converted before serialziation</param>
             <returns>A new instance of TResult that is to be serialzied</returns>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.Convert(QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson)">
             <summary>
             Converts the input value to be deserialized
             </summary>
             <param name="value">The deserialized value that needs to be converted to T</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.Create(System.Type,Newtonsoft.Json.Linq.JToken)">
             <summary>
             Creates an instance of the un-projected type to be deserialized
             </summary>
             <param name="type">The input object type, this is the data held in the token</param>
             <param name="token">The input data to be converted into a T</param>
             <returns>A new instance of T that is to be serialized using default rules</returns>
            </member>
        <member name="T:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson">
             <summary>
             Defines the json structure of the market-hours-database.json file
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson.Entries">
             <summary>
             The entries in the market hours database, keyed by <see cref="T:QuantConnect.Securities.SecurityDatabaseKey" />
             </summary>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson.#ctor(QuantConnect.Securities.MarketHoursDatabase)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson" /> class
             </summary>
             <param name="database">The database instance to copy</param>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseJson.Convert">
             <summary>
             Converts this json representation to the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> type
             </summary>
             <returns>A new instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase" /> class</returns>
            </member>
        <member name="T:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson">
             <summary>
             Defines the json structure of a single entry in the market-hours-database.json file
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.DataTimeZone">
             <summary>
             The data's raw time zone
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.ExchangeTimeZone">
             <summary>
             The exchange's time zone id from the tzdb
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Sunday">
             <summary>
             Sunday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Monday">
             <summary>
             Monday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Tuesday">
             <summary>
             Tuesday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Wednesday">
             <summary>
             Wednesday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Thursday">
             <summary>
             Thursday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Friday">
             <summary>
             Friday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Saturday">
             <summary>
             Saturday market hours segments
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Holidays">
             <summary>
             Holiday date strings
             </summary>
            </member>
        <member name="F:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.EarlyCloses">
             <summary>
             Early closes by date
             </summary>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.#ctor(QuantConnect.Securities.MarketHoursDatabase.Entry)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson" /> class
             </summary>
             <param name="entry">The entry instance to copy</param>
            </member>
        <member name="M:QuantConnect.Util.MarketHoursDatabaseJsonConverter.MarketHoursDatabaseEntryJson.Convert">
             <summary>
             Converts this json representation to the <see cref="T:QuantConnect.Securities.MarketHoursDatabase.Entry" /> type
             </summary>
             <returns>A new instance of the <see cref="T:QuantConnect.Securities.MarketHoursDatabase.Entry" /> class</returns>
            </member>
        <member name="T:QuantConnect.Util.ParallelRunnerController">
             <summary>
             Controller type used to schedule <see cref="T:QuantConnect.Util.IParallelRunnerWorkItem" /> instances
             to run on dedicated runner threads
             </summary>
            </member>
        <member name="P:QuantConnect.Util.ParallelRunnerController.WaitHandle">
             <summary>
             Gets a wait handle that can be used to wait for this controller
             to finish all scheduled work
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerController.#ctor(System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.ParallelRunnerController" /> class
             </summary>
             <param name="threadCount">The number of dedicated threads to spin up</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerController.Schedule(QuantConnect.Util.IParallelRunnerWorkItem)">
             <summary>
             Schedules the specified work item to run
             </summary>
             <param name="workItem">The work item to schedule</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerController.Start(System.Threading.CancellationToken)">
             <summary>
             Starts this instance of <see cref="T:QuantConnect.Util.ParallelRunnerController" />.
             This method is indempotent
             </summary>
             <param name="token">The cancellation token</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerController.ProcessHoldQueue(System.Threading.CancellationToken)">
             <summary>
             Processes the internal hold queue checking to see if work
             items are ready to run
             </summary>
             <param name="token">The cancellation token</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerController.Dispose">
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
             </summary>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Util.ParallelRunnerWorker">
             <summary>
             Runner type used to run <see cref="T:QuantConnect.Util.IParallelRunnerWorkItem" />
             </summary>
            </member>
        <member name="P:QuantConnect.Util.ParallelRunnerWorker.WaitHandle">
             <summary>
             Gets a wait handle that can be used to wait for this worker
             to finished all work in the queue, that is, when <see cref="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted" /> equals true.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerWorker.#ctor(QuantConnect.Util.ParallelRunnerController,System.Collections.Concurrent.BlockingCollection{QuantConnect.Util.IParallelRunnerWorkItem})">
             <summary>
             Initialzies a new instance of the <see cref="T:QuantConnect.Util.ParallelRunnerWorker" /> class
             </summary>
             <param name="controller">The controller instance used to reschedule work items</param>
             <param name="queue">The work queue where this worker will source the work items</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerWorker.Start(System.Threading.CancellationToken)">
             <summary>
             Starts a new thread to process the work queue.
             This method is indempotent.
             </summary>
             <param name="token">The cancellation token</param>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerWorker.ThreadEntry(System.Threading.CancellationToken)">
             <summary>
             Main entry point for the worker thread
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ParallelRunnerWorker.Dispose">
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
             </summary>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Util.ColorJsonConverter">
             <summary>
             A <see cref="T:Newtonsoft.Json.JsonConverter" /> implementation that serializes a <see cref="T:System.Drawing.Color" /> as a string.
             If Color is empty, string is also empty and vice-versa. Meaning that color is autogen.
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ColorJsonConverter.Convert(System.Drawing.Color)">
             <summary>
             Converts a .NET Color to a hexadecimal as a string
             </summary>
             <param name="value">The input value to be converted before serialization</param>
             <returns>Hexadecimal number as a string. If .NET Color is null, returns default #000000</returns>
            </member>
        <member name="M:QuantConnect.Util.ColorJsonConverter.Convert(System.String)">
             <summary>
             Converts the input string to a .NET Color object
             </summary>
             <param name="value">The deserialized value that needs to be converted to T</param>
             <returns>The converted value</returns>
            </member>
        <member name="M:QuantConnect.Util.ColorJsonConverter.HexToInt(System.String)">
             <summary>
             Converts hexadecimal number to integer
             </summary>
             <param name="hexValue">Hexadecimal number</param>
             <returns>Integer representation of the hexadecimal</returns>
            </member>
        <member name="T:QuantConnect.Util.SecurityExtensions">
             <summary>
             Provides useful infrastructure methods to the <see cref="T:QuantConnect.Securities.Security" /> class.
             These are added in this way to avoid mudding the class's public API
             </summary>
            </member>
        <member name="M:QuantConnect.Util.SecurityExtensions.IsInternalFeed(QuantConnect.Securities.Security)">
             <summary>
             Determines if all subscriptions for the security are internal feeds
             </summary>
            </member>
        <member name="T:QuantConnect.Util.SecurityIdentifierJsonConverter">
             <summary>
             A <see cref="T:Newtonsoft.Json.JsonConverter" /> implementation that serializes a <see cref="T:QuantConnect.SecurityIdentifier" /> as a string
             </summary>
            </member>
        <member name="M:QuantConnect.Util.SecurityIdentifierJsonConverter.Convert(QuantConnect.SecurityIdentifier)">
             <summary>
             Converts as security identifier to a string
             </summary>
             <param name="value">The input value to be converted before serialziation</param>
             <returns>A new instance of TResult that is to be serialzied</returns>
            </member>
        <member name="M:QuantConnect.Util.SecurityIdentifierJsonConverter.Convert(System.String)">
             <summary>
             Converts the input string to a security identifier
             </summary>
             <param name="value">The deserialized value that needs to be converted to T</param>
             <returns>The converted value</returns>
            </member>
        <member name="T:QuantConnect.Util.TypeChangeJsonConverter`2">
             <summary>
             Provides a base class for a <see cref="T:Newtonsoft.Json.JsonConverter" /> that serializes a
             an input type as some other output type
             </summary>
             <typeparam name="T">The type to be serialized</typeparam>
             <typeparam name="TResult">The output serialized type</typeparam>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.Create(System.Type,Newtonsoft.Json.Linq.JToken)">
             <summary>
             Creates an instance of the un-projected type to be deserialized
             </summary>
             <param name="type">The input object type, this is the data held in the token</param>
             <param name="token">The input data to be converted into a T</param>
             <returns>A new instance of T that is to be serialized using default rules</returns>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.Convert(`0)">
             <summary>
             Convert the input value to a value to be serialzied
             </summary>
             <param name="value">The input value to be converted before serialziation</param>
             <returns>A new instance of TResult that is to be serialzied</returns>
            </member>
        <member name="M:QuantConnect.Util.TypeChangeJsonConverter`2.Convert(`1)">
             <summary>
             Converts the input value to be deserialized
             </summary>
             <param name="value">The deserialized value that needs to be converted to T</param>
             <returns>The converted value</returns>
            </member>
        <member name="T:QuantConnect.Util.LinqExtensions">
             <summary>
             Provides more extension methods for the enumerable types
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.ToDictionary``2(System.Linq.ILookup{``0,``1})">
             <summary>
             Creates a dictionary multimap from the lookup.
             </summary>
             <typeparam name="K">The key type</typeparam>
             <typeparam name="V">The value type</typeparam>
             <param name="lookup">The ILookup instance to convert to a dictionary</param>
             <returns>A dictionary holding the same data as 'lookup'</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
             <summary>
             Creates a dictionary enumerable of key value pairs
             </summary>
             <typeparam name="K">The key type</typeparam>
             <typeparam name="V">The value type</typeparam>
             <param name="enumerable">The IEnumerable of KeyValuePair instances to convert to a dictionary</param>
             <returns>A dictionary holding the same data as the enumerable</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
             <summary>
             Creates a new read-only dictionary from the key value pairs
             </summary>
             <typeparam name="K">The key type</typeparam>
             <typeparam name="V">The value type</typeparam>
             <param name="enumerable">The IEnumerable of KeyValuePair instances to convert to a dictionary</param>
             <returns>A read-only dictionary holding the same data as the enumerable</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Creates a new <see cref="T:System.Collections.Generic.HashSet`1" /> from the elements in the specified enumerable
             </summary>
             <typeparam name="T">The item type in the hash set</typeparam>
             <param name="enumerable">The items to be placed into the enumerable</param>
             <returns>A new <see cref="T:System.Collections.Generic.HashSet`1" /> containing the items in the enumerable</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.ToHashSet``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
             <summary>
             Creates a new <see cref="T:System.Collections.Generic.HashSet`1" /> from the elements in the specified enumerable
             </summary>
             <typeparam name="T">The item type of the source enumerable</typeparam>
             <typeparam name="TResult">The type of the items in the output <see cref="T:System.Collections.Generic.HashSet`1" /></typeparam>
             <param name="enumerable">The items to be placed into the enumerable</param>
             <param name="selector">Selects items from the enumerable to be placed into the <see cref="T:System.Collections.Generic.HashSet`1" /></param>
             <returns>A new <see cref="T:System.Collections.Generic.HashSet`1" /> containing the items in the enumerable</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.ISet{``0})">
             <summary>
             Produces the set difference of two sequences by using the default equality comparer to compare values.
             </summary>
             <typeparam name="T">The type of the elements of the input sequences.</typeparam>
             <param name="enumerable">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not also in <paramref name="set" /> will be returned.</param>
             <param name="set">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.</param>
             <returns>A sequence that contains the set difference of the elements of two sequences.</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Returns true if the specified enumerable is null or has no elements
             </summary>
             <typeparam name="T">The enumerable's item type</typeparam>
             <param name="enumerable">The enumerable to check for a value</param>
             <returns>True if the enumerable has elements, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.DefaultIfEmpty``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1)">
             <summary>
             Performs the specified selector before calling DefaultIfEmpty. This is just short hand for Select(selector).DefaultIfEmpty(defaultValue)
             </summary>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.Median``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Gets the median value in the collection
             </summary>
             <typeparam name="T">The item type in the collection</typeparam>
             <param name="enumerable">The enumerable of items to search</param>
             <returns>The median value, throws InvalidOperationException if no items are present</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.Median``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
             <summary>
             Gets the median value in the collection
             </summary>
             <typeparam name="T">The item type in the collection</typeparam>
             <typeparam name="TProperty">The type of the value selected</typeparam>
             <param name="collection">The collection of items to search</param>
             <param name="selector">Function used to select a value from collection items</param>
             <returns>The median value, throws InvalidOperationException if no items are present</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},``1,System.Func{``1,``0,System.Int32})">
             <summary>
             Performs a binary search on the specified collection.
             </summary>
             <typeparam name="TItem">The type of the item.</typeparam>
             <typeparam name="TSearch">The type of the searched item.</typeparam>
             <param name="list">The list to be searched.</param>
             <param name="value">The value to search for.</param>
             <param name="comparer">The comparer that is used to compare the value with the list items.</param>
             <returns>The index of the item if found, otherwise the bitwise complement where the value should be per MSDN specs</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0)">
             <summary>
             Performs a binary search on the specified collection.
             </summary>
             <typeparam name="TItem">The type of the item.</typeparam>
             <param name="list">The list to be searched.</param>
             <param name="value">The value to search for.</param>
             <returns>The index of the item if found, otherwise the bitwise complement where the value should be per MSDN specs</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0})">
             <summary>
             Performs a binary search on the specified collection.
             </summary>
             <typeparam name="TItem">The type of the item.</typeparam>
             <param name="list">The list to be searched.</param>
             <param name="value">The value to search for.</param>
             <param name="comparer">The comparer that is used to compare the value with the list items.</param>
             <returns>The index of the item if found, otherwise the bitwise complement where the value should be per MSDN specs</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.Memoize``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Wraps the specified enumerable such that it will only be enumerated once
             </summary>
             <typeparam name="T">The enumerable's element type</typeparam>
             <param name="enumerable">The source enumerable to be wrapped</param>
             <returns>A new enumerable that can be enumerated multiple times without re-enumerating the source enumerable</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.Range``1(``0,``0,System.Func{``0,``0},System.Boolean)">
             <summary>
             Produces the an enumerable of the range of values between start and end using the specified
             incrementing function
             </summary>
             <typeparam name="T">The enumerable item type</typeparam>
             <param name="start">The start of the range</param>
             <param name="end">The end of the range, non-inclusive by default</param>
             <param name="incrementer">The incrementing function, with argument of the current item</param>
             <param name="includeEndPoint">True to emit the end point, false otherwise</param>
             <returns>An enumerable of the range of items between start and end</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
             <summary>
             Creates a new enumerable that will be distinct by the specified property selector
             </summary>
             <typeparam name="T">The enumerable item type</typeparam>
             <typeparam name="TPropery">The selected property type</typeparam>
             <param name="enumerable">The source enumerable</param>
             <param name="selector">The property selector</param>
             <returns>A filtered enumerable distinct on the selected property</returns>
            </member>
        <member name="M:QuantConnect.Util.LinqExtensions.GroupAdjacentBy``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
             <summary>
             Groups adjacent elements of the enumerale using the specified grouper function
             </summary>
             <typeparam name="T">The enumerable item type</typeparam>
             <param name="enumerable">The source enumerable to be grouped</param>
             <param name="grouper">A function that accepts the previous value and the next value and returns
             true if the next value belongs in the same group as the previous value, otherwise returns false</param>
             <returns>A new enumerable of the groups defined by grouper. These groups don't have a key
             and are only grouped by being emitted separately from this enumerable</returns>
            </member>
        <member name="T:QuantConnect.Util.MemoizingEnumerable`1">
             <summary>
             Defines an enumerable that can be enumerated many times while
             only performing a single enumeration of the root enumerable
             </summary>
             <typeparam name="T"></typeparam>
            </member>
        <member name="M:QuantConnect.Util.MemoizingEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.MemoizingEnumerable`1" /> class
             </summary>
             <param name="enumerable">The source enumerable to be memoized</param>
            </member>
        <member name="M:QuantConnect.Util.MemoizingEnumerable`1.#ctor(System.Collections.Generic.IEnumerator{`0})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.MemoizingEnumerable`1" /> class
             </summary>
             <param name="enumerator">The source enumerator to be memoized</param>
            </member>
        <member name="M:QuantConnect.Util.MemoizingEnumerable`1.GetEnumerator">
             <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
             <returns>
             A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
             <filterpriority>1</filterpriority>
            </member>
        <member name="M:QuantConnect.Util.MemoizingEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Returns an enumerator that iterates through a collection.
             </summary>
             <returns>
             An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
             </returns>
             <filterpriority>2</filterpriority>
            </member>
        <member name="T:QuantConnect.Util.NullStringValueConverter`1">
             <summary>
             Converts the string "null" into a new instance of T.
             This converter only handles deserialization concerns.
             </summary>
             <typeparam name="T">The output type of the converter</typeparam>
            </member>
        <member name="M:QuantConnect.Util.NullStringValueConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object.
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
             <param name="value">The value.</param>
             <param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.Util.NullStringValueConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
             <param name="objectType">Type of the object.</param>
             <param name="existingValue">The existing value of object being read.</param>
             <param name="serializer">The calling serializer.</param>
             <returns>
             The object value.
             </returns>
            </member>
        <member name="M:QuantConnect.Util.NullStringValueConverter`1.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns>
             <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
             </returns>
            </member>
        <member name="T:QuantConnect.Util.ObjectActivator">
             <summary>
             Provides methods for creating new instances of objects
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ObjectActivator.GetActivator(System.Type)">
             <summary>
             Fast Object Creator from Generic Type:
             Modified from http://rogeralsing.com/2008/02/28/linq-expressions-creating-objects/
             </summary>
             <remarks>This assumes that the type has a parameterless, default constructor</remarks>
             <param name="dataType">Type of the object we wish to create</param>
             <returns>Method to return an instance of object</returns>
            </member>
        <member name="M:QuantConnect.Util.ObjectActivator.Clone(System.Object)">
             <summary>
             Clones the specified instance using reflection
             </summary>
             <param name="instanceToClone">The instance to be cloned</param>
             <returns>A field/property wise, non-recursive clone of the instance</returns>
            </member>
        <member name="M:QuantConnect.Util.ObjectActivator.Clone``1(``0)">
             <summary>
             Clones the specified instance and then casts it to T before returning
             </summary>
            </member>
        <member name="T:QuantConnect.Util.ReaderWriterLockSlimExtensions">
             <summary>
             Provides extension methods to make working with the <see cref="T:System.Threading.ReaderWriterLockSlim" /> class easier
             </summary>
            </member>
        <member name="M:QuantConnect.Util.ReaderWriterLockSlimExtensions.Read(System.Threading.ReaderWriterLockSlim)">
             <summary>
             Opens the read lock
             </summary>
             <param name="readerWriterLockSlim">The lock to open for read</param>
             <returns>A disposable reference which will release the lock upon disposal</returns>
            </member>
        <member name="M:QuantConnect.Util.ReaderWriterLockSlimExtensions.Write(System.Threading.ReaderWriterLockSlim)">
             <summary>
             Opens the write lock
             </summary>
             <param name="readerWriterLockSlim">The lock to open for write</param>
             <returns>A disposale reference which will release thelock upon disposal</returns>
            </member>
        <member name="T:QuantConnect.Util.IReadOnlyRef`1">
             <summary>
             Represents a read-only reference to any value, T
             </summary>
             <typeparam name="T">The data type the reference points to</typeparam>
            </member>
        <member name="P:QuantConnect.Util.IReadOnlyRef`1.Value">
             <summary>
             Gets the current value this reference points to
             </summary>
            </member>
        <member name="T:QuantConnect.Util.Ref`1">
             <summary>
             Represents a reference to any value, T
             </summary>
             <typeparam name="T">The data type the reference points to</typeparam>
            </member>
        <member name="M:QuantConnect.Util.Ref`1.#ctor(System.Func{`0},System.Action{`0})">
             <summary>
             Initializes a new instance of the <see cref="T:QuantConnect.Util.Ref`1" /> class
             </summary>
             <param name="getter">A function delegate to get the current value</param>
             <param name="setter">A function delegate to set the current value</param>
            </member>
        <member name="P:QuantConnect.Util.Ref`1.Value">
             <summary>
             Gets or sets the value of this reference
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Ref`1.AsReadOnly">
             <summary>
             Returns a read-only version of this instance
             </summary>
             <returns>A new instance with read-only semantics/gaurantees</returns>
            </member>
        <member name="T:QuantConnect.Util.Ref">
             <summary>
             Provides some helper methods that leverage C# type inference
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Ref.Create``1(System.Func{``0},System.Action{``0})">
             <summary>
             Creates a new <see cref="T:QuantConnect.Util.Ref`1" /> instance
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Ref.CreateReadOnly``1(System.Func{``0})">
             <summary>
             Creates a new <see cref="T:QuantConnect.Util.IReadOnlyRef`1" /> instance
             </summary>
            </member>
        <member name="M:QuantConnect.Util.Ref.Create``1(``0)">
             <summary>
             Creates a new <see cref="T:QuantConnect.Util.Ref`1" /> instance by closing over
             the specified <paramref name="initialValue" /> variable.
             NOTE: This won't close over the variable input to the function,
             but rather a copy of the variable. This reference will use it's
             own storage.
             </summary>
            </member>
        <member name="T:QuantConnect.Util.SingleValueListConverter`1">
             <summary>
             Reads json and always produces a List, even if the input has just an object
             </summary>
            </member>
        <member name="M:QuantConnect.Util.SingleValueListConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Writes the JSON representation of the object. If the instance is not a list then it will
             be wrapped in a list
             </summary>
             <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
             <param name="value">The value.</param>
             <param name="serializer">The calling serializer.</param>
            </member>
        <member name="M:QuantConnect.Util.SingleValueListConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
             <summary>
             Reads the JSON representation of the object. If the JSON represents a singular instance, it will be returned
             in a list.
             </summary>
             <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
             <param name="objectType">Type of the object.</param>
             <param name="existingValue">The existing value of object being read.</param>
             <param name="serializer">The calling serializer.</param>
             <returns>The object value</returns>
            </member>
        <member name="M:QuantConnect.Util.SingleValueListConverter`1.CanConvert(System.Type)">
             <summary>
             Determines whether this instance can convert the specified object type.
             </summary>
             <param name="objectType">Type of the object.</param>
             <returns><c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.</returns>
            </member>
        <member name="T:QuantConnect.Util.VersionHelper">
             <summary>
             Provides methods for dealing with lean assembly versions
             </summary>
            </member>
        <member name="M:QuantConnect.Util.VersionHelper.IsOlderVersion(System.String)">
             <summary>
             Determines whether or not the specified version is older than this instance
             </summary>
             <param name="version">The version to compare</param>
             <returns>True if the specified version is older, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Util.VersionHelper.IsNewerVersion(System.String)">
             <summary>
             Determines whether or not the specified version is newer than this instance
             </summary>
             <param name="version">The version to compare</param>
             <returns>True if the specified version is newer, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Util.VersionHelper.IsEqualVersion(System.String)">
             <summary>
             Determines whether or not the specified version is equal to this instance
             </summary>
             <param name="version">The version to compare</param>
             <returns>True if the specified version is equal, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Util.VersionHelper.IsNotEqualVersion(System.String)">
             <summary>
             Determines whether or not the specified version is not equal to this instance
             </summary>
             <param name="version">The version to compare</param>
             <returns>True if the specified version is not equal, false otherwise</returns>
            </member>
        <member name="M:QuantConnect.Util.VersionHelper.CompareVersions(System.String,System.String)">
             <summary>
             Compares two versions
             </summary>
             <returns>1 if the left version is after the right, 0 if they're the same, -1 if the left is before the right</returns>
            </member>
        <member name="T:QuantConnect.Util.XElementExtensions">
             <summary>
             Provides extension methods for the XML to LINQ types
             </summary>
            </member>
        <member name="M:QuantConnect.Util.XElementExtensions.Get``1(System.Xml.Linq.XElement,System.String)">
             <summary>
             Gets the value from the element and converts it to the specified type.
             </summary>
             <typeparam name="T">The output type</typeparam>
             <param name="element">The element to access</param>
             <param name="name">The attribute name to access on the element</param>
             <returns>The converted value</returns>
            </member>
    </members>
</doc>
